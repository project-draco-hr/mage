{
  Player you=game.getPlayer(source.getControllerId());
  List<Permanent> lands=game.getBattlefield().getAllActivePermanents(new FilterControlledLandPermanent(),source.getControllerId(),game);
  String choice=(String)game.getState().getValue(source.getSourceId().toString() + ChooseBasicLandTypeEffect.VALUE_KEY);
  if (you != null && choice != null) {
    for (    Permanent land : lands) {
      if (land != null) {
switch (layer) {
case TypeChangingEffects_4:
          if (sublayer == SubLayer.NA && !land.getSubtype(game).contains(choice)) {
            land.getSubtype(game).add(choice);
          }
        break;
case AbilityAddingRemovingEffects_6:
      if (sublayer == SubLayer.NA) {
        boolean addAbility=true;
        if (choice.equals("Forest")) {
          for (          Ability existingAbility : land.getAbilities()) {
            if (existingAbility instanceof GreenManaAbility) {
              addAbility=false;
              break;
            }
          }
          if (addAbility) {
            land.addAbility(new GreenManaAbility(),source.getSourceId(),game);
          }
        }
        if (choice.equals("Plains")) {
          for (          Ability existingAbility : land.getAbilities()) {
            if (existingAbility instanceof WhiteManaAbility) {
              addAbility=false;
              break;
            }
          }
          if (addAbility) {
            land.addAbility(new WhiteManaAbility(),source.getSourceId(),game);
          }
        }
        if (choice.equals("Mountain")) {
          for (          Ability existingAbility : land.getAbilities()) {
            if (existingAbility instanceof RedManaAbility) {
              addAbility=false;
              break;
            }
          }
          if (addAbility) {
            land.addAbility(new RedManaAbility(),source.getSourceId(),game);
          }
        }
        if (choice.equals("Island")) {
          for (          Ability existingAbility : land.getAbilities()) {
            if (existingAbility instanceof BlueManaAbility) {
              addAbility=false;
              break;
            }
          }
          if (addAbility) {
            land.addAbility(new BlueManaAbility(),source.getSourceId(),game);
          }
        }
        if (choice.equals("Swamp")) {
          for (          Ability existingAbility : land.getAbilities()) {
            if (existingAbility instanceof BlackManaAbility) {
              addAbility=false;
              break;
            }
          }
          if (addAbility) {
            land.addAbility(new BlackManaAbility(),source.getSourceId(),game);
          }
        }
      }
    break;
}
}
}
return true;
}
return false;
}
