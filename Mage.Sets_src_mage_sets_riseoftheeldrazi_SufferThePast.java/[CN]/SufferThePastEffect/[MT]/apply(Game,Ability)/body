{
  FilterCard filter=new FilterCard("card in target player's graveyard");
  int numberExiled=0;
  Player you=game.getPlayer(source.getControllerId());
  Player targetPlayer=game.getPlayer(targetPointer.getFirst(game,source));
  if (targetPlayer != null) {
    int numberToTarget=Math.min(targetPlayer.getGraveyard().size(),source.getManaCostsToPay().getX());
    TargetCardInOpponentsGraveyard target=new TargetCardInOpponentsGraveyard(numberToTarget,numberToTarget,filter);
    if (you != null) {
      if (target.canChoose(source.getControllerId(),game) && target.choose(Constants.Outcome.Neutral,source.getControllerId(),source.getId(),game)) {
        if (!target.getTargets().isEmpty()) {
          List<UUID> targets=target.getTargets();
          for (          UUID targetId : targets) {
            Card card=game.getCard(targetId);
            if (card != null) {
              card.moveToExile(id,"Suffer the Past",source.getId(),game);
              numberExiled++;
            }
          }
          you.gainLife(numberExiled,game);
          targetPlayer.loseLife(numberExiled,game);
        }
      }
      return true;
    }
  }
  return false;
}
