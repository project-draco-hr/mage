{
  mainTable=new JTable();
  mainModel=new TableModel();
  mainModel.addListeners(mainTable);
  mainTable.setModel(mainModel);
  mainTable.setForeground(Color.white);
  DefaultTableCellRenderer myRenderer=(DefaultTableCellRenderer)mainTable.getDefaultRenderer(String.class);
  myRenderer.setBackground(new Color(0,0,0,100));
  mainTable.getColumnModel().getColumn(0).setMaxWidth(25);
  mainTable.getColumnModel().getColumn(0).setPreferredWidth(25);
  mainTable.getColumnModel().getColumn(1).setPreferredWidth(110);
  mainTable.getColumnModel().getColumn(2).setPreferredWidth(90);
  mainTable.getColumnModel().getColumn(3).setPreferredWidth(50);
  mainTable.getColumnModel().getColumn(4).setPreferredWidth(170);
  mainTable.getColumnModel().getColumn(5).setPreferredWidth(30);
  mainTable.getColumnModel().getColumn(6).setPreferredWidth(15);
  mainTable.getColumnModel().getColumn(7).setPreferredWidth(15);
  if (PreferencesDialog.getCachedValue(PreferencesDialog.KEY_DRAFT_VIEW,"cardView").equals("listView")) {
    jToggleListView.setSelected(true);
    panelCardArea.setViewportView(mainTable);
    currentView=mainModel;
    cbSortBy.setEnabled(false);
    chkPiles.setEnabled(false);
  }
 else {
    jToggleCardView.setSelected(true);
    currentView=this;
    panelCardArea.setViewportView(cardArea);
    cbSortBy.setEnabled(true);
    chkPiles.setEnabled(true);
  }
  cardArea.addMouseListener(this);
  mainTable.setOpaque(false);
  mainTable.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      if (e.getClickCount() == 2 && !e.isConsumed()) {
        e.consume();
        if (e.isAltDown()) {
          handleAltDoubleClick();
        }
 else {
          handleDoubleClick();
        }
      }
    }
  }
);
  mainModel.setUpdateCountsCallback(new UpdateCountsCallback(lblCount,lblCreatureCount,lblLandCount,lblSorceryCount,lblInstantCount,lblEnchantmentCount));
}
