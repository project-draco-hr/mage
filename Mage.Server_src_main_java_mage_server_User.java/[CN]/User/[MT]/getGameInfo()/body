{
  StringBuilder sb=new StringBuilder();
  String disconnectInfo="";
  if (!isConnected()) {
    disconnectInfo=new StringBuilder(" (discon. ").append(getDisconnectDuration()).append(")").toString();
  }
  int draft=0, match=0, sideboard=0, tournament=0, construct=0;
  for (  Map.Entry<UUID,Table> tableEntry : tables.entrySet()) {
    if (tableEntry != null) {
      Table table=tableEntry.getValue();
      if (table != null) {
        if (table.isTournament()) {
          if (tableEntry.getKey() != null) {
            TournamentPlayer tournamentPlayer=table.getTournament().getPlayer(tableEntry.getKey());
            if (tournamentPlayer != null && !tournamentPlayer.isEliminated()) {
switch (table.getState()) {
case CONSTRUCTING:
                construct++;
              break;
case DRAFTING:
            draft++;
          break;
case DUELING:
        tournament++;
      break;
  }
  if (!isConnected()) {
    table.getTournament().getPlayer(tableEntry.getKey()).setDisconnectInfo(disconnectInfo);
  }
 else {
    table.getTournament().getPlayer(tableEntry.getKey()).setDisconnectInfo("");
  }
}
 else {
  tablesToRemove.add(tableEntry.getKey());
  logger.error(getName() + " tournament player missing - tournamentId:" + table.getId(),null);
}
}
 else {
logger.error(getName() + " tournament key missing - tournamentId: " + table.getId(),null);
}
}
 else {
switch (table.getState()) {
case SIDEBOARDING:
sideboard++;
break;
case DUELING:
match++;
break;
}
}
}
}
}
if (!tablesToRemove.isEmpty()) {
for (UUID tableKey : tablesToRemove) {
tables.remove(tableKey);
}
tablesToRemove.clear();
}
if (match > 0) {
sb.append("Match: ").append(match).append(" ");
}
if (sideboard > 0) {
sb.append("Sideb: ").append(sideboard).append(" ");
}
if (draft > 0) {
sb.append("Draft: ").append(draft).append(" ");
}
if (construct > 0) {
sb.append("Const: ").append(construct).append(" ");
}
if (tournament > 0) {
sb.append("Tourn: ").append(tournament).append(" ");
}
if (watchedGames.size() > 0) {
sb.append("Watch: ").append(watchedGames.size()).append(" ");
}
sb.append(disconnectInfo);
return sb.toString();
}
