{
  this.players=state.players.copy();
  this.playerList=state.playerList.copy();
  this.activePlayerId=state.activePlayerId;
  this.priorityPlayerId=state.priorityPlayerId;
  this.turn=state.turn.copy();
  this.stack=state.stack.copy();
  this.command=state.command.copy();
  this.exile=state.exile.copy();
  this.revealed=state.revealed.copy();
  for (  Map.Entry<UUID,LookedAt> entry : state.lookedAt.entrySet()) {
    lookedAt.put(entry.getKey(),entry.getValue());
  }
  this.battlefield=state.battlefield.copy();
  this.turnNum=state.turnNum;
  this.gameOver=state.gameOver;
  this.effects=state.effects.copy();
  this.triggers=state.triggers.copy();
  this.delayed=state.delayed.copy();
  this.specialActions=state.specialActions.copy();
  this.combat=state.combat.copy();
  this.turnMods=state.turnMods.copy();
  this.watchers=state.watchers.copy();
  for (  Map.Entry<String,Object> entry : state.values.entrySet()) {
    values.put(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<UUID,Zone> entry : state.zones.entrySet()) {
    zones.put(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<UUID,Abilities<ActivatedAbility>> entry : state.otherAbilities.entrySet()) {
    otherAbilities.put(entry.getKey(),entry.getValue().copy());
  }
}
