{
  return executeWithResult("createTournamentTable",sessionId,new ActionWithTableViewResult(){
    @Override public TableView execute() throws MageException {
      try {
        UUID userId=SessionManager.getInstance().getSession(sessionId).getUserId();
        User user=UserManager.getInstance().getUser(userId);
        if (user == null) {
          logger.error("User for session not found. session = " + sessionId);
          return null;
        }
        int notStartedTables=user.getNumberOfNotStartedTables();
        if (notStartedTables > 1) {
          user.showUserMessage("Create table","You have already " + notStartedTables + " not started table"+ (notStartedTables == 1 ? "" : "s")+ ". You can't create another.");
          throw new MageException("No message");
        }
        String maxAiOpponents=ConfigSettings.getInstance().getMaxAiOpponents();
        if (maxAiOpponents != null) {
          int max=Integer.parseInt(maxAiOpponents);
          int aiPlayers=0;
          for (          String playerType : options.getPlayerTypes()) {
            if (!playerType.equals("Human")) {
              aiPlayers++;
            }
          }
          if (aiPlayers > max) {
            user.showUserMessage("Create tournament","It's only allowed to use a maximum of " + max + " AI players.");
            throw new MageException("No message");
          }
        }
        int quitRatio=options.getQuitRatio();
        if (quitRatio < user.getTourneyQuitRatio()) {
          String message=new StringBuilder("Your quit ratio ").append(user.getTourneyQuitRatio()).append("% is higher than the table requirement ").append(quitRatio).append("%").toString();
          user.showUserMessage("Create tournament",message);
          throw new MageException("No message");
        }
        TableView table=GamesRoomManager.getInstance().getRoom(roomId).createTournamentTable(userId,options);
        logger.debug("Tournament table " + table.getTableId() + " created");
        LogServiceImpl.instance.log(LogKeys.KEY_TOURNAMENT_TABLE_CREATED,sessionId,userId.toString(),table.getTableId().toString());
        return table;
      }
 catch (      Exception ex) {
        handleException(ex);
      }
      return null;
    }
  }
);
}
