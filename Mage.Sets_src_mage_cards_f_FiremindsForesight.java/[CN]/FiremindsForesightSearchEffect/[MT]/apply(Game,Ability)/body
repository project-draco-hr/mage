{
  Player player=game.getPlayer(source.getControllerId());
  Card sourceCard=game.getCard(source.getSourceId());
  if (player == null || sourceCard == null) {
    return false;
  }
  int cardsCount;
  Cards cardToReveal=new CardsImpl();
  Cards cardsInLibrary=new CardsImpl();
  cardsInLibrary.addAll(player.getLibrary().getCards(game));
  for (int cmc=3; cmc > 0; cmc--) {
    FilterCard filter=new FilterCard("instant card with converted mana cost " + cmc);
    filter.add(new CardTypePredicate(CardType.INSTANT));
    filter.add(new ConvertedManaCostPredicate(Filter.ComparisonType.Equal,cmc));
    cardsCount=cardsInLibrary.count(filter,game);
    if (cardsCount > 0) {
      TargetCardInLibrary target=new TargetCardInLibrary(0,1,filter);
      if (player.searchLibrary(target,game)) {
        for (        UUID cardId : target.getTargets()) {
          Card card=player.getLibrary().remove(cardId,game);
          if (card != null) {
            card.moveToZone(Zone.HAND,source.getSourceId(),game,false);
            game.informPlayers(sourceCard.getName() + ": " + player.getLogName()+ " chose "+ card.getName());
            cardsInLibrary.remove(card);
            cardToReveal.add(card);
            player.revealCards(sourceCard.getName(),cardToReveal,game);
          }
        }
      }
    }
 else {
      player.lookAtCards(filter.getMessage(),cardsInLibrary,game);
    }
  }
  player.shuffleLibrary(source,game);
  return true;
}
