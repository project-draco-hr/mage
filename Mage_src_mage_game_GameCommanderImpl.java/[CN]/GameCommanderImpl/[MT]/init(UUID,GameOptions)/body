{
  Ability ability=new SimpleStaticAbility(Zone.COMMAND,new EmptyEffect("Commander effects"));
  for (  UUID playerId : state.getPlayerList(startingPlayerId)) {
    Player player=getPlayer(playerId);
    if (player != null) {
      if (player.getSideboard().size() > 0) {
        Card commander=getCard((UUID)player.getSideboard().toArray()[0]);
        if (commander != null) {
          player.setCommanderId(commander.getId());
          commander.moveToZone(Zone.COMMAND,null,this,true);
          ability.addEffect(new CommanderReplacementEffect(commander.getId(),alsoLibrary));
          ability.addEffect(new CommanderCostModification(commander.getId()));
          Mana commanderMana;
          if (commander.getSpellAbility().getManaCosts() == null) {
            Logger.getLogger(GameCommanderImpl.class).warn("Got commander without Mana costs: " + commander.getName());
            commanderMana=new Mana();
          }
 else {
            commanderMana=commander.getSpellAbility().getManaCosts().getMana();
          }
          ability.addEffect(new CommanderManaReplacementEffect(player.getId(),commanderMana));
          getState().setValue(commander.getId() + "_castCount",0);
          CommanderCombatDamageWatcher watcher=new CommanderCombatDamageWatcher(commander.getId());
          getState().getWatchers().add(watcher);
          this.commanderCombatWatcher.add(watcher);
          watcher.addCardInfoToCommander(this);
        }
      }
    }
  }
  this.getState().addAbility(ability,null);
  super.init(choosingPlayerId,gameOptions);
  if (startingPlayerSkipsDraw) {
    state.getTurnMods().add(new TurnMod(startingPlayerId,PhaseStep.DRAW));
  }
}
