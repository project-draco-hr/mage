{
  super(null,new CardSetInfo(card.getName(),card.getSetCode(),card.getCardNumber(),card.getRarity()),card.getTypes().toArray(new CardType[0]),join(card.getManaCosts()),"",join(card.getRules()).contains("Fuse"));
  this.expansionSetCode=card.getSetCode();
  this.power=mageIntFromString(card.getPower());
  this.toughness=mageIntFromString(card.getToughness());
  this.cardType=card.getTypes();
  this.subtype=card.getSubTypes();
  this.supertype=card.getSupertypes();
  this.frameColor=card.getFrameColor();
  this.frameStyle=card.getFrameStyle();
  this.usesVariousArt=card.usesVariousArt();
  this.color=card.getColor();
  this.splitCard=card.isSplitCard();
  this.flipCard=card.isFlipCard();
  this.transformable=card.isDoubleFaced();
  this.nightCard=card.isNightCard();
  if (card.getSecondSideName() != null && !card.getSecondSideName().isEmpty()) {
    this.secondSideCard=new MockCard(CardRepository.instance.findCard(card.getSecondSideName()));
  }
  this.flipCardName=card.getFlipCardName();
  for (  String ruleText : card.getRules()) {
    this.addAbility(textAbilityFromString(ruleText));
  }
  CardInfo leftHalf=CardRepository.instance.findCard(getLeftHalfName(card));
  if (leftHalf != null) {
    this.leftHalfCard=new MockSplitCardHalf(leftHalf);
  }
  CardInfo rightHalf=CardRepository.instance.findCard(getRightHalfName(card));
  if (rightHalf != null) {
    this.rightHalfCard=new MockSplitCardHalf(rightHalf);
  }
}
