{
  lblServer=new javax.swing.JLabel();
  txtServer=new javax.swing.JTextField();
  btnFind=new javax.swing.JButton();
  lblPort=new javax.swing.JLabel();
  txtPort=new javax.swing.JTextField();
  lblUserName=new javax.swing.JLabel();
  txtUserName=new javax.swing.JTextField();
  lblPassword=new javax.swing.JLabel();
  txtPassword=new javax.swing.JPasswordField();
  lblFlag=new javax.swing.JLabel();
  cbFlag=new mage.client.util.gui.countryBox.CountryComboBox();
  chkAutoConnect=new javax.swing.JCheckBox();
  chkForceUpdateDB=new javax.swing.JCheckBox();
  jProxySettingsButton=new javax.swing.JButton();
  btnConnect=new javax.swing.JButton();
  btnCancel=new javax.swing.JButton();
  lblStatus=new javax.swing.JLabel();
  setTitle("Connect to server");
  setNormalBounds(new java.awt.Rectangle(100,100,410,307));
  lblServer.setLabelFor(txtServer);
  lblServer.setText("Server:");
  btnFind.setText("Find...");
  btnFind.setToolTipText("Shows the list of public servers");
  btnFind.setName("findServerBtn");
  btnFind.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      findPublicServerActionPerformed(evt);
    }
  }
);
  lblPort.setLabelFor(txtPort);
  lblPort.setText("Port:");
  txtPort.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyTyped(    java.awt.event.KeyEvent evt){
      ConnectDialog.this.keyTyped(evt);
    }
  }
);
  lblUserName.setLabelFor(txtUserName);
  lblUserName.setText("User name:");
  txtUserName.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtUserNameActionPerformed(evt);
    }
  }
);
  lblPassword.setLabelFor(txtPassword);
  lblPassword.setText("Password:");
  txtPassword.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtPasswordActionPerformed(evt);
    }
  }
);
  lblFlag.setLabelFor(txtUserName);
  lblFlag.setText("User flag:");
  cbFlag.setEditable(true);
  chkAutoConnect.setText("Automatically connect to this server next time");
  chkAutoConnect.setToolTipText("<HTML>If active this connect dialog will not be shown if you choose to connect.<br>\nInstead XMage tries to connect to the last server you were connected to.");
  chkAutoConnect.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      chkAutoConnectActionPerformed(evt);
    }
  }
);
  chkForceUpdateDB.setText("Force update of card database");
  chkForceUpdateDB.setToolTipText("<HTML>If active the comparison of the server cards database to the client database will be enforced.<br>If not, the comparison will only done if the database version of the client is lower than the version of the server.");
  chkForceUpdateDB.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      chkForceUpdateDBActionPerformed(evt);
    }
  }
);
  jProxySettingsButton.setText("Proxy Settings...");
  jProxySettingsButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jProxySettingsButtonActionPerformed(evt);
    }
  }
);
  btnConnect.setText("Connect");
  btnConnect.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnConnectActionPerformed(evt);
    }
  }
);
  btnCancel.setText("Cancel");
  btnCancel.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnCancelActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addGap(0,0,Short.MAX_VALUE).addComponent(btnConnect).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnCancel)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(lblPort).addComponent(lblServer).addComponent(lblUserName).addComponent(lblPassword)).addComponent(lblFlag,javax.swing.GroupLayout.Alignment.TRAILING)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblStatus,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(jProxySettingsButton).addComponent(cbFlag,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,false).addComponent(txtServer,javax.swing.GroupLayout.DEFAULT_SIZE,286,Short.MAX_VALUE).addComponent(txtPort,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.PREFERRED_SIZE,71,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(txtUserName).addComponent(txtPassword)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnFind)).addComponent(chkForceUpdateDB,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(chkAutoConnect,javax.swing.GroupLayout.DEFAULT_SIZE,358,Short.MAX_VALUE)))).addContainerGap()));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblServer).addComponent(txtServer,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnFind)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtPort,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblPort)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtUserName,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblUserName)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtPassword,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblPassword)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,false).addComponent(lblFlag,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(cbFlag,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addGap(5,5,5).addComponent(chkAutoConnect).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(chkForceUpdateDB).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jProxySettingsButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,50,Short.MAX_VALUE).addComponent(lblStatus,javax.swing.GroupLayout.PREFERRED_SIZE,24,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnConnect).addComponent(btnCancel)).addContainerGap()));
  pack();
}
