{
  Player player=game.getPlayer(playerId);
  Player targetPlayer=game.getPlayer(targetPlayerId);
  if (targetPlayer == null) {
    targetPlayer=player;
  }
  List<Card> cards;
  if (librarySearchLimit == Integer.MAX_VALUE) {
    cards=targetPlayer.getLibrary().getCards(game);
  }
 else {
    cards=new ArrayList<>(targetPlayer.getLibrary().getTopCards(game,librarySearchLimit));
  }
  Collections.sort(cards,new CardNameComparator());
  while (!isChosen() && !doneChosing()) {
    chosen=targets.size() >= minNumberOfTargets;
    if (!player.chooseTarget(outcome,new CardsImpl(Zone.LIBRARY,cards),this,null,game)) {
      return chosen;
    }
    chosen=targets.size() >= minNumberOfTargets;
  }
  return chosen=true;
}
