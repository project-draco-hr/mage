{
  Permanent sourceCreature=game.getPermanent(event.getTargetId());
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null && sourceCreature != null) {
    FilterCreatureCard filter=new FilterCreatureCard("creatures cards to reveal");
    List<SubtypePredicate> filterSubtypes=new ArrayList<>();
    for (    String subtype : sourceCreature.getSubtype()) {
      filterSubtypes.add(new SubtypePredicate((subtype)));
    }
    filter.add(Predicates.or(filterSubtypes));
    if (controller.getHand().count(filter,source.getSourceId(),source.getControllerId(),game) > 0) {
      if (controller.chooseUse(outcome,"Reveal cards to Amplify?",game)) {
        TargetCardInHand target=new TargetCardInHand(0,Integer.MAX_VALUE,filter);
        if (controller.choose(outcome,target,source.getSourceId(),game) && !target.getTargets().isEmpty()) {
          Cards cards=new CardsImpl();
          cards.addAll(target.getTargets());
          int amountCounters=cards.size() * amplifyFactor.getFactor();
          sourceCreature.addCounters(CounterType.P1P1.createInstance(amountCounters),game);
          controller.revealCards(sourceCreature.getLogName(),cards,game);
        }
      }
    }
  }
  return false;
}
