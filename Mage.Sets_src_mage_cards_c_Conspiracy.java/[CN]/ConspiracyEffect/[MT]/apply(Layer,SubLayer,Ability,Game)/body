{
  Player controller=game.getPlayer(source.getControllerId());
  String choice=(String)game.getState().getValue(source.getSourceId().toString() + "_type");
  if (controller != null && choice != null) {
    for (    UUID cardId : controller.getGraveyard()) {
      Card card=game.getCard(cardId);
      if (card.getCardType().contains(CardType.CREATURE)) {
        setCreatureSubtype(card,choice,game);
      }
    }
    for (    UUID cardId : controller.getHand()) {
      Card card=game.getCard(cardId);
      if (card.getCardType().contains(CardType.CREATURE)) {
        setCreatureSubtype(card,choice,game);
      }
    }
    for (    Card card : game.getState().getExile().getAllCards(game)) {
      if (card.getOwnerId().equals(controller.getId()) && card.getCardType().contains(CardType.CREATURE)) {
        setCreatureSubtype(card,choice,game);
      }
    }
    for (    Card card : controller.getLibrary().getCards(game)) {
      if (card.getOwnerId().equals(controller.getId()) && card.getCardType().contains(CardType.CREATURE)) {
        setCreatureSubtype(card,choice,game);
      }
    }
    for (    UUID commanderId : controller.getCommandersIds()) {
      if (game.getState().getZone(commanderId).equals(Zone.COMMAND)) {
        Card card=game.getCard(commanderId);
        if (card.getCardType().contains(CardType.CREATURE)) {
          setCreatureSubtype(card,choice,game);
        }
      }
    }
    for (Iterator<StackObject> iterator=game.getStack().iterator(); iterator.hasNext(); ) {
      StackObject stackObject=iterator.next();
      if (stackObject instanceof Spell && stackObject.getControllerId().equals(source.getControllerId()) && stackObject.getCardType().contains(CardType.CREATURE)) {
        Card card=((Spell)stackObject).getCard();
        setCreatureSubtype(card,choice,game);
      }
    }
    List<Permanent> creatures=game.getBattlefield().getAllActivePermanents(new FilterControlledCreaturePermanent(),source.getControllerId(),game);
    for (    Permanent creature : creatures) {
      setCreatureSubtype(creature,choice,game);
    }
    return true;
  }
  return false;
}
