{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    Map<UUID,UUID> playerCreature=new HashMap<>(2);
    Choice choice=new ChoiceLeftOrRight();
    controller.choose(Outcome.Neutral,choice,game);
    boolean left=choice.getChoice().equals("Left");
    PlayerList playerList=game.getState().getPlayerList().copy();
    while (!playerList.get().equals(source.getControllerId()) && controller.canRespond()) {
      playerList.getNext();
    }
    Player currentPlayer=game.getPlayer(playerList.get());
    Player nextPlayer;
    UUID firstNextPlayer=null;
    while (!getNextPlayerInDirection(left,playerList,game).equals(firstNextPlayer) && controller.canRespond()) {
      nextPlayer=game.getPlayer(playerList.get());
      if (nextPlayer == null) {
        return false;
      }
      if (firstNextPlayer == null) {
        firstNextPlayer=nextPlayer.getId();
      }
      if (!nextPlayer.canRespond()) {
        continue;
      }
      if (currentPlayer != null && game.getState().getPlayersInRange(controller.getId(),game).contains(currentPlayer.getId())) {
        FilterCreaturePermanent filter=new FilterCreaturePermanent(new StringBuilder("creature controlled by ").append(nextPlayer.getLogName()).toString());
        filter.add(new ControllerIdPredicate(nextPlayer.getId()));
        Target target=new TargetCreaturePermanent(filter);
        target.setNotTarget(false);
        if (target.canChoose(source.getSourceId(),currentPlayer.getId(),game)) {
          if (currentPlayer.chooseTarget(outcome,target,source,game)) {
            playerCreature.put(currentPlayer.getId(),target.getFirstTarget());
          }
        }
      }
      currentPlayer=nextPlayer;
    }
    for (    Map.Entry<UUID,UUID> entry : playerCreature.entrySet()) {
      Player player=game.getPlayer(entry.getKey());
      if (player != null) {
        Permanent creature=game.getPermanent(entry.getValue());
        if (creature != null) {
          ContinuousEffect effect=new GainControlTargetEffect(Duration.EndOfGame,player.getId());
          effect.setTargetPointer(new FixedTarget(creature.getId()));
          game.addEffect(effect,source);
          game.informPlayers(new StringBuilder(player.getLogName()).append(" gains control of ").append(creature.getName()).toString());
        }
      }
    }
    return true;
  }
  return false;
}
