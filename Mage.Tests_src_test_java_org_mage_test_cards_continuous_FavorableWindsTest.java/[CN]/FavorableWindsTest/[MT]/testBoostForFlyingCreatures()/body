{
  addCard(Constants.Zone.BATTLEFIELD,playerA,"Island",4);
  addCard(Constants.Zone.BATTLEFIELD,playerA,"Favorable Winds",1);
  addCard(Constants.Zone.BATTLEFIELD,playerA,"Merfolk Looter",2);
  addCard(Constants.Zone.BATTLEFIELD,playerA,"Sky Spirit",2);
  addCard(Constants.Zone.BATTLEFIELD,playerB,"Merfolk Looter",2);
  addCard(Constants.Zone.BATTLEFIELD,playerB,"Sky Spirit",2);
  setStopAt(1,Constants.PhaseStep.BEGIN_COMBAT);
  execute();
  assertLife(playerA,20);
  assertLife(playerB,20);
  int countSkySpirit=0;
  int countMerfolkLooter=0;
  for (  Permanent permanent : currentGame.getBattlefield().getAllActivePermanents(playerA.getId())) {
    if (permanent.getName().equals("Sky Spirit")) {
      countSkySpirit++;
      Assert.assertEquals("Power is not the same",3,permanent.getPower().getValue());
      Assert.assertEquals("Toughness is not the same",3,permanent.getToughness().getValue());
    }
 else     if (permanent.getName().equals("Merfolk Looter")) {
      countMerfolkLooter++;
      Assert.assertEquals("Power is not the same",1,permanent.getPower().getValue());
      Assert.assertEquals("Toughness is not the same",1,permanent.getToughness().getValue());
    }
  }
  Assert.assertEquals(2,countSkySpirit);
  Assert.assertEquals(2,countMerfolkLooter);
  countSkySpirit=0;
  countMerfolkLooter=0;
  for (  Permanent permanent : currentGame.getBattlefield().getAllActivePermanents(playerB.getId())) {
    if (permanent.getName().equals("Sky Spirit")) {
      countSkySpirit++;
      Assert.assertEquals("Power is not the same",2,permanent.getPower().getValue());
      Assert.assertEquals("Toughness is not the same",2,permanent.getToughness().getValue());
    }
 else     if (permanent.getName().equals("Merfolk Looter")) {
      countMerfolkLooter++;
      Assert.assertEquals("Power is not the same",1,permanent.getPower().getValue());
      Assert.assertEquals("Toughness is not the same",1,permanent.getToughness().getValue());
    }
  }
  Assert.assertEquals(2,countSkySpirit);
  Assert.assertEquals(2,countMerfolkLooter);
}
