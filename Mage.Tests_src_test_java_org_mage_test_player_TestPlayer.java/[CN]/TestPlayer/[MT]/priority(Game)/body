{
  for (  PlayerAction action : actions) {
    if (action.getTurnNum() == game.getTurnNum() && action.getStep() == game.getStep().getType()) {
      if (action.getAction().startsWith("activate:")) {
        String command=action.getAction();
        command=command.substring(command.indexOf("activate:") + 9);
        String[] groups=command.split("\\$");
        if (groups.length > 2 && !checkExecuteCondition(groups,game)) {
          break;
        }
        for (        Ability ability : this.getPlayable(game,true)) {
          if (ability.toString().startsWith(groups[0])) {
            Ability newAbility=ability.copy();
            if (groups.length > 1 && !groups[1].equals("target=NO_TARGET")) {
              if (!addTargets(newAbility,groups,game)) {
                break;
              }
            }
            this.activateAbility((ActivatedAbility)newAbility,game);
            actions.remove(action);
            return true;
          }
        }
      }
 else       if (action.getAction().startsWith("manaActivate:")) {
        String command=action.getAction();
        command=command.substring(command.indexOf("manaActivate:") + 13);
        String[] groups=command.split("\\$");
        List<Permanent> manaPerms=this.getAvailableManaProducers(game);
        for (        Permanent perm : manaPerms) {
          for (          Ability manaAbility : perm.getAbilities().getAvailableManaAbilities(Zone.BATTLEFIELD,game)) {
            if (manaAbility.toString().startsWith(groups[0])) {
              Ability newManaAbility=manaAbility.copy();
              this.activateAbility((ActivatedAbility)newManaAbility,game);
              actions.remove(action);
              return true;
            }
          }
        }
        List<Permanent> manaPermsWithCost=this.getAvailableManaProducersWithCost(game);
        for (        Permanent perm : manaPermsWithCost) {
          for (          ManaAbility manaAbility : perm.getAbilities().getAvailableManaAbilities(Zone.BATTLEFIELD,game)) {
            if (manaAbility.toString().startsWith(groups[0]) && manaAbility.canActivate(playerId,game)) {
              Ability newManaAbility=manaAbility.copy();
              this.activateAbility((ActivatedAbility)newManaAbility,game);
              actions.remove(action);
              return true;
            }
          }
        }
      }
 else       if (action.getAction().startsWith("addCounters:")) {
        String command=action.getAction();
        command=command.substring(command.indexOf("addCounters:") + 12);
        String[] groups=command.split("\\$");
        for (        Permanent permanent : game.getBattlefield().getAllActivePermanents()) {
          if (permanent.getName().equals(groups[0])) {
            Counter counter=new Counter(groups[1],Integer.parseInt(groups[2]));
            permanent.addCounters(counter,game);
            break;
          }
        }
      }
    }
  }
  pass(game);
  return false;
}
