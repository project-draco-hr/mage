{
  if (!choices.isEmpty()) {
    if (target instanceof TargetPermanent) {
      for (      Permanent permanent : game.getBattlefield().getAllActivePermanents((FilterPermanent)target.getFilter(),game)) {
        for (        String choose2 : choices) {
          if (permanent.getName().equals(choose2)) {
            if (((TargetPermanent)target).canTarget(playerId,permanent.getId(),null,game) && !target.getTargets().contains(permanent.getId())) {
              target.add(permanent.getId(),game);
              choices.remove(choose2);
              return true;
            }
          }
 else           if ((permanent.getName() + "-" + permanent.getExpansionSetCode()).equals(choose2)) {
            if (((TargetPermanent)target).canTarget(playerId,permanent.getId(),null,game) && !target.getTargets().contains(permanent.getId())) {
              target.add(permanent.getId(),game);
              choices.remove(choose2);
              return true;
            }
          }
        }
      }
    }
    if (target instanceof TargetPlayer) {
      for (      Player player : game.getPlayers().values()) {
        for (        String choose2 : choices) {
          if (player.getName().equals(choose2)) {
            if (((TargetPlayer)target).canTarget(playerId,player.getId(),null,game) && !target.getTargets().contains(player.getId())) {
              target.add(player.getId(),game);
              choices.remove(choose2);
              return true;
            }
          }
        }
      }
    }
    if (target instanceof TargetSource) {
      Set<UUID> possibleTargets;
      TargetSource t=((TargetSource)target);
      possibleTargets=t.possibleTargets(sourceId,playerId,game);
      for (      UUID targetId : possibleTargets) {
        MageObject targetObject=game.getObject(targetId);
        if (targetObject != null) {
          for (          String choose2 : choices) {
            if (targetObject.getName().equals(choose2)) {
              List<UUID> alreadyTargetted=target.getTargets();
              if (t.canTarget(targetObject.getId(),game)) {
                if (alreadyTargetted != null && !alreadyTargetted.contains(targetObject.getId())) {
                  target.add(targetObject.getId(),game);
                  choices.remove(choose2);
                  return true;
                }
              }
            }
          }
        }
      }
    }
  }
  return super.choose(outcome,target,sourceId,game,options);
}
