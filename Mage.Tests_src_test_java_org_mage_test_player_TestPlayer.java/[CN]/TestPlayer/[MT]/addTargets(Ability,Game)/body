{
  if (groupsForTargetHandling == null) {
    return true;
  }
  boolean result=true;
  for (int i=1; i < groupsForTargetHandling.length; i++) {
    String group=groupsForTargetHandling[i];
    if (group.startsWith("spellOnStack") || group.startsWith("spellOnTopOfStack") || group.startsWith("!spellOnStack")|| group.startsWith("target=null")|| group.startsWith("manaInPool=")) {
      break;
    }
    if (ability instanceof SpellAbility && ((SpellAbility)ability).getSpellAbilityType().equals(SpellAbilityType.SPLIT_FUSED)) {
      if (group.contains("FuseLeft-")) {
        result=handleTargetString(group.substring(group.indexOf("FuseLeft-") + 9),ability,game);
      }
 else       if (group.startsWith("FuseRight-")) {
        result=handleTargetString(group.substring(group.indexOf("FuseRight-") + 10),ability,game);
      }
 else {
        result=false;
      }
    }
 else {
      result=handleTargetString(group,ability,game);
    }
  }
  return result;
}
