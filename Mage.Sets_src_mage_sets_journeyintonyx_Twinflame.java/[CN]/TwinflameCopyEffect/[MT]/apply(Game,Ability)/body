{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    for (    UUID creatureId : this.getTargetPointer().getTargets(game,source)) {
      Permanent creature=game.getPermanentOrLKIBattlefield(creatureId);
      if (creature != null) {
        PutTokenOntoBattlefieldCopyTargetEffect effect=new PutTokenOntoBattlefieldCopyTargetEffect(source.getControllerId(),null,true);
        effect.setTargetPointer(new FixedTarget(creature,game));
        effect.apply(game,source);
        for (        Permanent addedToken : effect.getAddedPermanent()) {
          ExileTargetEffect exileEffect=new ExileTargetEffect();
          exileEffect.setTargetPointer(new FixedTarget(addedToken,game));
          DelayedTriggeredAbility delayedAbility=new AtTheBeginOfNextEndStepDelayedTriggeredAbility(exileEffect);
          delayedAbility.setSourceId(source.getSourceId());
          delayedAbility.setControllerId(source.getControllerId());
          delayedAbility.setSourceObject(source.getSourceObject(game),game);
          game.addDelayedTriggeredAbility(delayedAbility);
        }
      }
    }
    return true;
  }
  return false;
}
