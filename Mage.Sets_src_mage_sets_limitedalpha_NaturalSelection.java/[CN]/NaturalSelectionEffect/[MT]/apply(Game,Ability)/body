{
  Player you=game.getPlayer(source.getControllerId());
  Player player=game.getPlayer(source.getFirstTarget());
  if (player == null || you == null) {
    return false;
  }
  Cards cards=new CardsImpl(Zone.PICK);
  int count=Math.min(player.getLibrary().size(),3);
  for (int i=0; i < count; i++) {
    Card card=player.getLibrary().removeFromTop(game);
    if (card != null) {
      cards.add(card);
      game.setZone(card.getId(),Zone.PICK);
    }
  }
  you.lookAtCards("Natural Selection",cards,game);
  TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to put on the top of target player's library"));
  while (player.isInGame() && cards.size() > 1) {
    you.choose(Outcome.Neutral,cards,target,game);
    Card card=cards.get(target.getFirstTarget(),game);
    if (card != null) {
      cards.remove(card);
      card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,true);
    }
    target.clearChosen();
  }
  if (cards.size() == 1) {
    Card card=cards.get(cards.iterator().next(),game);
    card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,true);
  }
  if (you.chooseUse(Outcome.Neutral,"You may have that player shuffle his or her library",source,game)) {
    player.shuffleLibrary(game);
  }
  return true;
}
