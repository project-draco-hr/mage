{
  try {
    match.startGame();
    table.initGame();
    GameManager.getInstance().createGameSession(match.getGame(),userPlayerMap,table.getId(),choosingPlayerId);
    String creator=null;
    StringBuilder opponent=new StringBuilder();
    for (    Entry<UUID,UUID> entry : userPlayerMap.entrySet()) {
      if (!match.getPlayer(entry.getValue()).hasQuit()) {
        User user=UserManager.getInstance().getUser(entry.getKey());
        if (user != null) {
          user.ccGameStarted(match.getGame().getId(),entry.getValue());
          if (creator == null) {
            creator=user.getName();
          }
 else {
            if (opponent.length() > 0) {
              opponent.append(" - ");
            }
            opponent.append(user.getName());
          }
        }
 else {
          logger.error("Unable to find user: " + entry.getKey() + "  playerId: "+ entry.getValue());
          MatchPlayer matchPlayer=match.getPlayer(entry.getValue());
          if (matchPlayer != null && !matchPlayer.hasQuit()) {
            matchPlayer.setQuit(true);
          }
        }
      }
    }
    for (    MatchPlayer mPlayer : match.getPlayers()) {
      if (!mPlayer.getPlayer().isHuman()) {
        if (opponent.length() > 0) {
          opponent.append(" - ");
        }
        opponent.append(mPlayer.getName());
      }
    }
    ServerMessagesUtil.getInstance().incGamesStarted();
    logger.info("GAME started " + match.getGame().getId() + " ["+ match.getName()+ "] "+ creator+ " - "+ opponent.toString());
    logger.debug("- matchId: " + match.getId() + " ["+ match.getName()+ "]");
    if (match.getGame() != null) {
      logger.debug("- chatId:  " + GameManager.getInstance().getChatId(match.getGame().getId()));
    }
 else {
      logger.debug("- no valid game object");
    }
    LogServiceImpl.instance.log(LogKeys.KEY_GAME_STARTED,String.valueOf(userPlayerMap.size()),creator,opponent.toString());
  }
 catch (  Exception ex) {
    logger.fatal("Error starting game",ex);
    if (table != null) {
      TableManager.getInstance().removeTable(table.getId());
    }
    if (match != null) {
      Game game=match.getGame();
      if (game != null) {
        GameManager.getInstance().removeGame(game.getId());
      }
    }
  }
}
