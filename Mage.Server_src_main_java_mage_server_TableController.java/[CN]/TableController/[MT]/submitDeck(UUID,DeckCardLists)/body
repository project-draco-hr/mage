{
  UUID playerId=userPlayerMap.get(userId);
  TournamentPlayer player=tournament.getPlayer(playerId);
  if (player.hasQuit()) {
    return true;
  }
  if (table.getState() != TableState.SIDEBOARDING && table.getState() != TableState.CONSTRUCTING) {
    return false;
  }
  Deck deck=Deck.load(deckList,false,false);
  if (!Main.isTestMode() && !table.getValidator().validate(deck)) {
    throw new InvalidDeckException("Invalid deck for this format",table.getValidator().getInvalid());
  }
  submitDeck(userId,playerId,deck);
  return true;
}
