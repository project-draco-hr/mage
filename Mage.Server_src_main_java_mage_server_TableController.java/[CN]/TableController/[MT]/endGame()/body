{
  UUID choosingPlayerId=match.getChooser();
  match.endGame();
  table.endGame();
  GameManager.getInstance().removeGame(match.getGame().getId());
  try {
    if (!match.isMatchOver()) {
      table.sideboard();
      setupTimeout(Match.SIDEBOARD_TIME);
      match.sideboard();
      cancelTimeout();
      if (!match.isMatchOver()) {
        startGame(choosingPlayerId);
      }
 else {
        table.endGame();
        for (        MatchPlayer mPlayer : match.getPlayers()) {
          if (!mPlayer.hasQuit()) {
            this.sendMatchEndInfo(mPlayer.getPlayer().getId());
          }
        }
      }
    }
 else {
      match.getGames().clear();
    }
  }
 catch (  GameException ex) {
    logger.fatal(null,ex);
  }
}
