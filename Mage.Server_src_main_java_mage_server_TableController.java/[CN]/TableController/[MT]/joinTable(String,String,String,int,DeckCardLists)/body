{
  if (table.getState() != TableState.WAITING) {
    return false;
  }
  Seat seat=table.getNextAvailableSeat(playerType);
  if (seat == null) {
    throw new GameException("No available seats.");
  }
  Deck deck=Deck.load(deckList);
  if (!Main.isTestMode() && !table.getValidator().validate(deck)) {
    throw new InvalidDeckException(name + " has an invalid deck for this format",table.getValidator().getInvalid());
  }
  Player player=createPlayer(name,seat.getPlayerType(),skill);
  match.addPlayer(player,deck);
  table.joinTable(player,seat);
  logger.info("player joined " + player.getId());
  if (seat.getPlayer().isHuman()) {
    sessionPlayerMap.put(sessionId,player.getId());
  }
  return true;
}
