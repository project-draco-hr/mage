{
  try {
    if (userId.equals(this.userId) && table.getState().equals(TableState.STARTING)) {
      tournament.setStartTime();
      TournamentManager.getInstance().createTournamentSession(tournament,userPlayerMap,table.getId());
      for (      Entry<UUID,UUID> entry : userPlayerMap.entrySet()) {
        User user=UserManager.getInstance().getUser(entry.getKey());
        if (user != null) {
          logger.info(new StringBuilder("User ").append(user.getName()).append(" tournament started: ").append(tournament.getId()).append(" userId: ").append(user.getId()));
          user.ccTournamentStarted(tournament.getId(),entry.getValue());
        }
      }
      ServerMessagesUtil.getInstance().incTournamentsStarted();
    }
  }
 catch (  Exception ex) {
    logger.fatal("Error starting tournament",ex);
    TableManager.getInstance().removeTable(table.getId());
    TournamentManager.getInstance().quit(tournament.getId(),userId);
  }
}
