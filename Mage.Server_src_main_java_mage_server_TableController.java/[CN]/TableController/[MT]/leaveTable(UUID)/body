{
  UUID playerId=userPlayerMap.get(userId);
  if (playerId != null) {
    if (table.getState() == TableState.WAITING || table.getState() == TableState.STARTING) {
      table.leaveNotStartedTable(playerId);
      if (table.isTournament()) {
        tournament.removePlayer(playerId);
      }
 else {
        match.leave(playerId);
      }
      User user=UserManager.getInstance().getUser(userId);
      user.removeTable(playerId);
      userPlayerMap.remove(userId);
    }
 else     if (!table.getState().equals(TableState.FINISHED)) {
      if (table.isTournament()) {
        TableManager.getInstance().userQuitTournamentSubTables(userId);
        TournamentManager.getInstance().quit(tournament.getId(),userId);
      }
 else {
        MatchPlayer matchPlayer=match.getPlayer(playerId);
        if (matchPlayer != null) {
          if (table.getState().equals(TableState.SIDEBOARDING)) {
            matchPlayer.submitDeck(matchPlayer.getDeck());
          }
          matchPlayer.setQuit(true);
        }
        match.leave(playerId);
      }
    }
  }
}
