{
  Player controller=game.getPlayer(source.getControllerId());
  Player opponent=game.getPlayer(getTargetPointer().getFirst(game,source));
  if (controller == null || opponent == null) {
    return false;
  }
  ChoiceColor choice=new ChoiceColor();
  controller.choose(outcome,choice,game);
  if (choice.getColor() != null) {
    int cardsWithColor=0;
    int cardsToExile=Math.min(opponent.getLibrary().size(),source.getManaCostsToPay().getX());
    for (int i=0; i < cardsToExile; i++) {
      Card card=opponent.getLibrary().removeFromTop(game);
      if (card != null) {
        if (card.getColor().contains(choice.getColor())) {
          cardsWithColor++;
        }
        card.moveToExile(null,null,source.getSourceId(),game);
      }
    }
    if (cardsWithColor > 0) {
      new CreateTokenEffect(new OonaQueenFaerieToken(),cardsWithColor).apply(game,source);
    }
    game.informPlayers(new StringBuilder("Oona: ").append(cardsWithColor).append(" Token").append(cardsWithColor != 1 ? "s" : "").append(" created").toString());
    return true;
  }
  return false;
}
