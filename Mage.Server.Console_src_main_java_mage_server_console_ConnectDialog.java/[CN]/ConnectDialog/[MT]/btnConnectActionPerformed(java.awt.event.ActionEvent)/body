{
  if (txtPassword.getPassword().length == 0) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a password");
    return;
  }
  if (txtServer.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a server address");
    return;
  }
  if (txtPort.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a port number");
    return;
  }
  if (Integer.valueOf(txtPort.getText()) < 1 || Integer.valueOf(txtPort.getText()) > 65535) {
    JOptionPane.showMessageDialog(rootPane,"Invalid port number");
    txtPort.setText(ConsoleFrame.getPreferences().get("serverPort",Integer.toString(17171)));
    return;
  }
  setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
  connection=new Connection();
  connection.setHost(this.txtServer.getText());
  connection.setPort(Integer.valueOf(this.txtPort.getText()));
  connection.setPassword(new String(txtPassword.getPassword()));
  connection.setProxyType((ProxyType)this.cbProxyType.getSelectedItem());
  connection.setProxyHost(this.txtProxyServer.getText());
  connection.setProxyPort(Integer.valueOf(this.txtProxyPort.getText()));
  connection.setProxyUsername(this.txtProxyUserName.getText());
  connection.setProxyPassword(new String(this.txtPasswordField.getPassword()));
  logger.debug("connecting: " + connection.getProxyType() + " "+ connection.getProxyHost()+ " "+ connection.getProxyPort());
  task=new ConnectTask();
  task.execute();
}
