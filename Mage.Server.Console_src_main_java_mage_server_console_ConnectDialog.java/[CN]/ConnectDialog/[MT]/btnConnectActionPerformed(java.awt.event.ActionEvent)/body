{
  if (txtUserName.getText().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a user name");
    return;
  }
  if (txtServer.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a server address");
    return;
  }
  if (txtPort.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,"Please provide a port number");
    return;
  }
  if (Integer.valueOf(txtPort.getText()) < 1 || Integer.valueOf(txtPort.getText()) > 65535) {
    JOptionPane.showMessageDialog(rootPane,"Invalid port number");
    txtPort.setText(ConsoleFrame.getPreferences().get("serverPort",Integer.toString(17171)));
    return;
  }
  char[] input=new char[0];
  try {
    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    connection=new Connection();
    connection.setHost(this.txtServer.getText());
    connection.setPort(Integer.valueOf(this.txtPort.getText()));
    connection.setUsername(this.txtUserName.getText());
    connection.setProxyType((ProxyType)this.cbProxyType.getSelectedItem());
    connection.setProxyHost(this.txtProxyServer.getText());
    connection.setProxyPort(Integer.valueOf(this.txtProxyPort.getText()));
    connection.setProxyUsername(this.txtProxyUserName.getText());
    input=txtPasswordField.getPassword();
    connection.setProxyPassword(new String(input));
    logger.debug("connecting: " + connection.getProxyType() + " "+ connection.getProxyHost()+ " "+ connection.getProxyPort());
    task=new ConnectTask();
    task.execute();
  }
  finally {
    Arrays.fill(input,'0');
  }
}
