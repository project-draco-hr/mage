{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    List<Card> cards=new ArrayList<>();
    List<Permanent> permanents=new ArrayList<>();
    for (    UUID targetId : targetPointer.getTargets(game,source)) {
switch (game.getState().getZone(targetId)) {
case BATTLEFIELD:
        Permanent permanent=game.getPermanent(targetId);
      if (permanent != null) {
        permanents.add(permanent);
      }
    break;
case GRAVEYARD:
  Card card=game.getCard(targetId);
if (card != null && game.getState().getZone(targetId).equals(Zone.GRAVEYARD)) {
  cards.add(card);
}
break;
}
}
while (!cards.isEmpty()) {
Card card=cards.iterator().next();
if (card != null) {
Player owner=game.getPlayer(card.getOwnerId());
Cards cardsPlayer=new CardsImpl();
for (Iterator<Card> iterator=cards.iterator(); iterator.hasNext(); ) {
Card next=iterator.next();
if (next.getOwnerId().equals(owner.getId())) {
cardsPlayer.add(next);
iterator.remove();
}
}
owner.putCardsOnTopOfLibrary(cardsPlayer,game,source,true);
}
}
while (!permanents.isEmpty()) {
Permanent permanent=permanents.iterator().next();
if (permanent != null) {
Player owner=game.getPlayer(permanent.getOwnerId());
Cards cardsPlayer=new CardsImpl();
for (Iterator<Permanent> iterator=permanents.iterator(); iterator.hasNext(); ) {
Permanent next=iterator.next();
if (next.getOwnerId().equals(owner.getId())) {
cardsPlayer.add(next);
iterator.remove();
}
}
owner.putCardsOnTopOfLibrary(cardsPlayer,game,source,true);
}
}
return true;
}
return false;
}
