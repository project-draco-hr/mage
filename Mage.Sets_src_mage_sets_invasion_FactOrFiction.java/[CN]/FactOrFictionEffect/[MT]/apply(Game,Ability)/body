{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=source.getSourceObject(game);
  if (controller == null || sourceObject == null) {
    return false;
  }
  Cards cards=new CardsImpl();
  cards.addAll(controller.getLibrary().getTopCards(game,5));
  controller.revealCards(sourceObject.getLogName(),cards,game);
  Set<UUID> opponents=game.getOpponents(source.getControllerId());
  if (!opponents.isEmpty()) {
    Player opponent=game.getPlayer(opponents.iterator().next());
    TargetCard target=new TargetCard(0,cards.size(),Zone.LIBRARY,new FilterCard("cards to put in the first pile"));
    List<Card> pile1=new ArrayList<>();
    if (opponent.choose(Outcome.Neutral,cards,target,game)) {
      List<UUID> targets=target.getTargets();
      for (      UUID targetId : targets) {
        Card card=cards.get(targetId,game);
        if (card != null) {
          pile1.add(card);
          cards.remove(card);
        }
      }
    }
    List<Card> pile2=new ArrayList<>();
    pile2.addAll(cards.getCards(game));
    boolean choice=controller.choosePile(outcome,"Choose a pile to put into your hand.",pile1,pile2,game);
    Zone pile1Zone=Zone.GRAVEYARD;
    Zone pile2Zone=Zone.HAND;
    if (choice) {
      pile1Zone=Zone.HAND;
      pile2Zone=Zone.GRAVEYARD;
    }
    StringBuilder sb=new StringBuilder("Pile 1, going to ").append(pile1Zone.equals(Zone.HAND) ? "Hand" : "Graveyard").append(": ");
    int i=0;
    for (    Card card : pile1) {
      i++;
      sb.append(card.getName());
      if (i < pile1.size()) {
        sb.append(", ");
      }
      card.moveToZone(pile1Zone,source.getSourceId(),game,false);
    }
    game.informPlayers(sb.toString());
    sb=new StringBuilder("Pile 2, going to ").append(pile2Zone.equals(Zone.HAND) ? "Hand" : "Graveyard").append(":");
    i=0;
    for (    Card card : pile2) {
      i++;
      sb.append(" ").append(card.getName());
      if (i < pile2.size()) {
        sb.append(", ");
      }
      card.moveToZone(pile2Zone,source.getSourceId(),game,false);
    }
    game.informPlayers(sb.toString());
  }
  return true;
}
