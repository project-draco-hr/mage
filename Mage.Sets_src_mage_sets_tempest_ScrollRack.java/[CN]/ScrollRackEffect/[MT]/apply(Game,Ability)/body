{
  FilterCard filter=new FilterCard("card in your hand to exile");
  FilterCard filter2=new FilterCard("card exiled by Scroll Rack to put on top of library");
  Player you=game.getPlayer(source.getControllerId());
  TargetCardInHand target=new TargetCardInHand(0,you.getHand().size(),filter);
  int amountExiled=0;
  if (you != null) {
    if (target.canChoose(source.getControllerId(),game) && target.choose(Outcome.Neutral,source.getControllerId(),source.getId(),game)) {
      if (!target.getTargets().isEmpty()) {
        List<UUID> targets=target.getTargets();
        for (        UUID targetId : targets) {
          Card card=game.getCard(targetId);
          if (card != null) {
            card.setFaceDown(true);
            if (card.moveToExile(source.getSourceId(),"Scroll Rack Exile",source.getId(),game)) {
              amountExiled++;
            }
          }
        }
      }
    }
    if (amountExiled > 0) {
      int count=Math.min(you.getLibrary().size(),amountExiled);
      for (int i=0; i < count; i++) {
        Card card=you.getLibrary().removeFromTop(game);
        if (card != null) {
          card.moveToZone(Zone.HAND,id,game,false);
        }
      }
    }
    TargetCardInExile target2=new TargetCardInExile(filter2,source.getSourceId());
    ExileZone scrollRackExileZone=game.getExile().getExileZone(source.getSourceId());
    target2.setRequired(true);
    if (scrollRackExileZone != null) {
      while (scrollRackExileZone.count(filter,game) > 1) {
        if (you != null) {
          you.lookAtCards("exiled cards with " + game.getCard(source.getSourceId()).getName(),scrollRackExileZone,game);
        }
        you.choose(Outcome.Neutral,scrollRackExileZone,target2,game);
        Card card=game.getCard(target2.getFirstTarget());
        if (card != null) {
          game.getExile().removeCard(card,game);
          card.moveToZone(Zone.LIBRARY,source.getId(),game,true);
        }
        target2.clearChosen();
      }
      if (scrollRackExileZone.count(filter,game) == 1) {
        Card card=scrollRackExileZone.get(scrollRackExileZone.iterator().next(),game);
        card.moveToZone(Zone.LIBRARY,source.getId(),game,true);
      }
      return true;
    }
  }
  return false;
}
