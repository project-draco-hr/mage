{
  if (line.length() == 0 || line.startsWith("//"))   return;
  boolean sideboard=false;
  if (line.startsWith("SB:")) {
    line=line.substring(3).trim();
    sideboard=true;
  }
  int delim=line.indexOf(' ');
  String lineNum=line.substring(0,delim).trim();
  String setCode="";
  if (line.indexOf('[') != -1) {
    int setStart=line.indexOf('[') + 1;
    int setEnd=line.indexOf(']');
    setCode=line.substring(setStart,setEnd).trim();
    delim=setEnd;
  }
  String lineName=line.substring(delim + 1).trim();
  try {
    int num=Integer.parseInt(lineNum);
    ExpansionSet set=null;
    if (setCode.length() > 0)     set=Sets.findSet(setCode);
    Card card;
    if (set != null) {
      card=set.findCard(lineName);
    }
 else {
      card=Sets.findCard(lineName);
    }
    if (card == null)     sbMessage.append("Could not find card: '").append(lineName).append("' at line ").append(lineCount).append("\n");
 else {
      String cardName=card.getClass().getCanonicalName();
      for (int i=0; i < num; i++) {
        if (!sideboard)         deckList.getCards().add(cardName);
 else         deckList.getSideboard().add(cardName);
      }
    }
  }
 catch (  NumberFormatException nfe) {
    sbMessage.append("Invalid number: ").append(lineNum).append(" at line ").append(lineCount).append("\n");
  }
}
