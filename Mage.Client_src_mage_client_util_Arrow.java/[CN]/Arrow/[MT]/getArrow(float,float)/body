{
  float p1x=0, p1y=0;
  float p2x=length, p2y=0;
  float cx=length / 2, cy=length / 8f * bendPercent;
  float adjSize, ex, ey, abs_e;
  adjSize=(float)(bodyWidth / 2 / Math.sqrt(2));
  ex=p2x - cx;
  ey=p2y - cy;
  abs_e=(float)Math.sqrt(ex * ex + ey * ey);
  ex/=abs_e;
  ey/=abs_e;
  GeneralPath bodyPath=new GeneralPath();
  bodyPath.moveTo(p2x + (ey - ex) * adjSize,p2y - (ex + ey) * adjSize);
  bodyPath.quadTo(cx,cy,p1x,p1y - bodyWidth / 2);
  bodyPath.lineTo(p1x,p1y + bodyWidth / 2);
  bodyPath.quadTo(cx,cy,p2x - (ey + ex) * adjSize,p2y + (ex - ey) * adjSize);
  bodyPath.closePath();
  adjSize=(float)(headSize / Math.sqrt(2));
  ex=p2x - cx;
  ey=p2y - cy;
  abs_e=(float)Math.sqrt(ex * ex + ey * ey);
  ex/=abs_e;
  ey/=abs_e;
  GeneralPath headPath=new GeneralPath();
  headPath.moveTo(p2x - (ey + ex) * adjSize,p2y + (ex - ey) * adjSize);
  headPath.lineTo(p2x,p2y);
  headPath.lineTo(p2x + (ey - ex) * adjSize,p2y - (ex + ey) * adjSize);
  headPath.closePath();
  Area area=new Area(headPath);
  area.add(new Area(bodyPath));
  return area;
}
