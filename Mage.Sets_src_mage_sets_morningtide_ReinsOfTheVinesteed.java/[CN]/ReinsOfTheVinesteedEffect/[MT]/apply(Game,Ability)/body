{
  Card aura=game.getCard(source.getSourceId());
  if (aura != null && game.getState().getZone(aura.getId()).equals(Zone.GRAVEYARD)) {
    Player controller=game.getPlayer(source.getControllerId());
    Permanent lastStateAura=(Permanent)game.getLastKnownInformation(aura.getId(),Zone.BATTLEFIELD);
    Permanent lastStateCreature=game.getPermanentOrLKIBattlefield(lastStateAura.getAttachedTo());
    if (lastStateCreature == null) {
      return false;
    }
    FilterCreaturePermanent FILTER=new FilterCreaturePermanent();
    StringBuilder sb=new StringBuilder("creature that shares a creature type with the formerly attached creature: ");
    ArrayList<Predicate<MageObject>> subtypes=new ArrayList<>();
    for (    String subtype : lastStateCreature.getSubtype()) {
      subtypes.add(new SubtypePredicate(subtype));
      sb.append(subtype).append(", ");
    }
    FILTER.add(Predicates.or(subtypes));
    sb.delete(sb.length() - 2,sb.length());
    FILTER.setMessage(sb.toString());
    TargetPermanent target=new TargetPermanent(FILTER);
    target.setNotTarget(true);
    if (controller != null && controller.choose(Outcome.PutCardInPlay,target,source.getSourceId(),game)) {
      Permanent targetPermanent=game.getPermanent(target.getFirstTarget());
      if (!targetPermanent.cantBeEnchantedBy(aura,game)) {
        game.getState().setValue("attachTo:" + aura.getId(),targetPermanent);
        aura.putOntoBattlefield(game,Zone.GRAVEYARD,source.getSourceId(),controller.getId());
        return targetPermanent.addAttachment(aura.getId(),game);
      }
    }
  }
  return false;
}
