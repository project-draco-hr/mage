{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null && foundCardsToPick > 0) {
    if (!optional || player.chooseUse(Outcome.DrawCard,getMayText(),source,game)) {
      FilterCard pickFilter=filter.copy();
      pickFilter.setMessage(getPickText());
      TargetCard target=new TargetCard((upTo ? 0 : numberToPick.calculate(game,source,this)),numberToPick.calculate(game,source,this),Zone.LIBRARY,pickFilter);
      if (player.choose(Outcome.DrawCard,cards,target,game)) {
        Cards pickedCards=new CardsImpl(target.getTargets());
        cards.removeAll(pickedCards);
        if (targetPickedCards.equals(Zone.LIBRARY) && !putOnTopSelected) {
          player.putCardsOnBottomOfLibrary(pickedCards,game,source,true);
        }
 else {
          player.moveCards(pickedCards.getCards(game),targetPickedCards,source,game);
        }
        if (revealPickedCards) {
          player.revealCards(windowName,pickedCards,game);
        }
      }
    }
  }
}
