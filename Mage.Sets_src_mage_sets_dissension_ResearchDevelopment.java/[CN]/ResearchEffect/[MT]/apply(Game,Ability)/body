{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null) {
    StringBuilder textToAsk=new StringBuilder(choiceText);
    textToAsk.append(" (0)");
    int count=0;
    while (player.chooseUse(Outcome.Benefit,textToAsk.toString(),game)) {
      Cards cards=player.getSideboard();
      if (cards.isEmpty()) {
        game.informPlayer(player,"You have no cards outside the game.");
        break;
      }
      Set<Card> filtered=cards.getCards(filter,game);
      if (filtered.isEmpty()) {
        game.informPlayer(player,"You have no " + filter.getMessage() + " outside the game.");
        break;
      }
      Cards filteredCards=new CardsImpl();
      for (      Card card : filtered) {
        filteredCards.add(card.getId());
      }
      TargetCard target=new TargetCard(Zone.PICK,filter);
      if (player.choose(Outcome.Benefit,filteredCards,target,game)) {
        Card card=player.getSideboard().get(target.getFirstTarget(),game);
        if (card != null) {
          card.moveToZone(Zone.LIBRARY,source.getId(),game,false);
          count++;
          textToAsk=new StringBuilder(choiceText);
          textToAsk.append(" (");
          textToAsk.append(count);
          textToAsk.append(")");
        }
      }
      if (count == 4) {
        break;
      }
    }
    game.informPlayers(player.getName() + " has chosen " + count+ " card(s) to shuffle into his or her library.");
    if (count > 0) {
      player.shuffleLibrary(game);
    }
    return true;
  }
  return false;
}
