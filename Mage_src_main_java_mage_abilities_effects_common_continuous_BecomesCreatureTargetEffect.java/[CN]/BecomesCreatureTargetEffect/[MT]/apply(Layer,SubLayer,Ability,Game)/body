{
  boolean result=false;
  for (  UUID permanentId : targetPointer.getTargets(game,source)) {
    Permanent permanent=game.getPermanent(permanentId);
    if (permanent != null) {
switch (layer) {
case TypeChangingEffects_4:
        if (sublayer == SubLayer.NA) {
          if (loseAllAbilities) {
            permanent.getSubtype().retainAll(CardRepository.instance.getLandTypes());
            permanent.getSubtype().addAll(token.getSubtype());
          }
 else {
            if (token.getSubtype().size() > 0) {
              for (              String subtype : token.getSubtype()) {
                if (!permanent.getSubtype().contains(subtype)) {
                  permanent.getSubtype().add(subtype);
                }
              }
            }
          }
          if (token.getCardType().size() > 0) {
            for (            CardType t : token.getCardType()) {
              if (!permanent.getCardType().contains(t)) {
                permanent.getCardType().add(t);
              }
            }
          }
        }
      break;
case ColorChangingEffects_5:
    if (sublayer == SubLayer.NA) {
      if (loseAllAbilities) {
        permanent.getColor(game).setBlack(false);
        permanent.getColor(game).setGreen(false);
        permanent.getColor(game).setBlue(false);
        permanent.getColor(game).setWhite(false);
        permanent.getColor(game).setBlack(false);
      }
      if (token.getColor(game).hasColor()) {
        permanent.getColor(game).setColor(token.getColor(game));
      }
    }
  break;
case AbilityAddingRemovingEffects_6:
if (loseAllAbilities) {
  permanent.removeAllAbilities(source.getSourceId(),game);
}
if (sublayer == SubLayer.NA) {
if (token.getAbilities().size() > 0) {
  for (  Ability ability : token.getAbilities()) {
    permanent.addAbility(ability,source.getSourceId(),game);
  }
}
}
break;
case PTChangingEffects_7:
if (sublayer == SubLayer.CharacteristicDefining_7a) {
permanent.getToughness().setValue(token.getToughness().getValue());
permanent.getPower().setValue(token.getPower().getValue());
}
}
result=true;
}
}
if (!result && this.duration.equals(Duration.Custom)) {
this.discard();
}
return result;
}
