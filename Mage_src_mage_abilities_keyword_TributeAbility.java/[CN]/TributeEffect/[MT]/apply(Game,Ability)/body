{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent sourcePermanent=game.getPermanent(source.getSourceId());
  if (controller != null && sourcePermanent != null) {
    UUID opponentId;
    if (game.getOpponents(controller.getId()).size() == 1) {
      opponentId=game.getOpponents(controller.getId()).iterator().next();
    }
 else {
      Target target=new TargetOpponent();
      controller.choose(outcome,target,source.getSourceId(),game);
      opponentId=target.getFirstTarget();
    }
    if (opponentId != null) {
      Player opponent=game.getPlayer(opponentId);
      if (opponent != null) {
        StringBuilder sb=new StringBuilder("Pay tribute to ");
        sb.append(sourcePermanent.getName());
        sb.append(" (add ").append(CardUtil.numberToText(tributeValue)).append(" +1/+1 counter");
        sb.append(tributeValue > 1 ? "s" : "").append(" to it)?");
        if (opponent.chooseUse(outcome,sb.toString(),game)) {
          if (!game.isSimulation())           game.informPlayers(new StringBuilder(opponent.getName()).append(" pays tribute to ").append(sourcePermanent.getName()).toString());
          game.getState().setValue(new StringBuilder("tributeValue").append(source.getSourceId()).toString(),"yes");
          return new AddCountersSourceEffect(CounterType.P1P1.createInstance(tributeValue),true).apply(game,source);
        }
 else {
          if (!game.isSimulation())           game.informPlayers(new StringBuilder(opponent.getName()).append(" does not pay tribute to ").append(sourcePermanent.getName()).toString());
          game.getState().setValue(new StringBuilder("tributeValue").append(source.getSourceId()).toString(),"no");
        }
        return true;
      }
    }
  }
  return false;
}
