{
  for (  Permanent creature : player.getAvailableAttackers(game)) {
    boolean mustAttack=false;
    Set<UUID> defendersForcedToAttack=new HashSet<>();
    for (    Map.Entry<RequirementEffect,HashSet<Ability>> entry : game.getContinuousEffects().getApplicableRequirementEffects(creature,game).entrySet()) {
      RequirementEffect effect=entry.getKey();
      if (effect.mustAttack(game)) {
        mustAttack=true;
        for (        Ability ability : entry.getValue()) {
          UUID defenderId=effect.mustAttackDefender(ability,game);
          if (defenderId != null) {
            if (defenders.contains(defenderId)) {
              defendersForcedToAttack.add(defenderId);
            }
          }
          break;
        }
      }
    }
    if (mustAttack) {
      HashSet<UUID> defendersCostlessAttackable=new HashSet<>();
      defendersCostlessAttackable.addAll(defenders);
      for (      UUID defenderId : defenders) {
        if (game.getContinuousEffects().checkIfThereArePayCostToAttackBlockEffects(GameEvent.getEvent(GameEvent.EventType.DECLARE_ATTACKER,defenderId,creature.getId(),creature.getControllerId()),game)) {
          defendersCostlessAttackable.remove(defenderId);
          defendersForcedToAttack.remove(defenderId);
        }
      }
      if (!defendersCostlessAttackable.isEmpty()) {
        creaturesForcedToAttack.put(creature.getId(),defendersForcedToAttack);
        if (defendersForcedToAttack.isEmpty()) {
          if (defendersForcedToAttack.isEmpty()) {
            if (defendersCostlessAttackable.size() == 1) {
              player.declareAttacker(creature.getId(),defenders.iterator().next(),game,false);
            }
          }
 else {
            TargetDefender target=new TargetDefender(defendersCostlessAttackable,creature.getId());
            target.setRequired(true);
            if (player.chooseTarget(Outcome.Damage,target,null,game)) {
              player.declareAttacker(creature.getId(),target.getFirstTarget(),game,false);
            }
          }
        }
 else {
          player.declareAttacker(creature.getId(),defendersForcedToAttack.iterator().next(),game,false);
        }
      }
    }
  }
}
