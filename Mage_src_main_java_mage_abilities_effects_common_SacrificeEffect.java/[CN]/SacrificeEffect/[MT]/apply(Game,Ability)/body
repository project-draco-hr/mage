{
  Player player=game.getPlayer(targetPointer.getFirst(game,source));
  if (player == null) {
    return false;
  }
  FilterPermanent newFilter=filter.copy();
  newFilter.add(new ControllerIdPredicate(player.getId()));
  int amount=count.calculate(game,source,this);
  int realCount=game.getBattlefield().countAll(newFilter,player.getId(),game);
  amount=Math.min(amount,realCount);
  Target target=new TargetPermanent(amount,amount,newFilter,true);
  if (amount > 0 && target.canChoose(source.getSourceId(),player.getId(),game)) {
    while (!target.isChosen() && target.canChoose(player.getId(),game) && player.canRespond()) {
      player.chooseTarget(Outcome.Sacrifice,target,source,game);
    }
    for (int idx=0; idx < target.getTargets().size(); idx++) {
      Permanent permanent=game.getPermanent(target.getTargets().get(idx));
      if (permanent != null) {
        permanent.sacrifice(source.getSourceId(),game);
      }
    }
    return true;
  }
  return false;
}
