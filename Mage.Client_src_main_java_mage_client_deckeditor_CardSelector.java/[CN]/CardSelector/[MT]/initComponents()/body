{
  tbColor=new javax.swing.JToolBar();
  rdoRed=new javax.swing.JRadioButton();
  rdoGreen=new javax.swing.JRadioButton();
  rdoBlue=new javax.swing.JRadioButton();
  rdoBlack=new javax.swing.JRadioButton();
  rdoWhite=new javax.swing.JRadioButton();
  rdoColorless=new javax.swing.JRadioButton();
  cbExpansionSet=new javax.swing.JComboBox();
  btnBooster=new javax.swing.JButton();
  btnClear=new javax.swing.JButton();
  jScrollPane1=new javax.swing.JScrollPane();
  tbTypes=new javax.swing.JToolBar();
  rdoLand=new javax.swing.JRadioButton();
  rdoCreatures=new javax.swing.JRadioButton();
  rdoArtifacts=new javax.swing.JRadioButton();
  rdoEnchantments=new javax.swing.JRadioButton();
  rdoInstants=new javax.swing.JRadioButton();
  rdoSorceries=new javax.swing.JRadioButton();
  rdoPlaneswalkers=new javax.swing.JRadioButton();
  chkPiles=new javax.swing.JCheckBox();
  cbSortBy=new javax.swing.JComboBox();
  jToggleListView=new javax.swing.JToggleButton();
  jToggleCardView=new javax.swing.JToggleButton();
  jPanel1=new javax.swing.JPanel();
  jButtonAddToMain=new javax.swing.JButton();
  jButtonAddToSideboard=new javax.swing.JButton();
  jLabel1=new javax.swing.JLabel();
  jTextFieldSearch=new javax.swing.JTextField();
  jButtonSearch=new javax.swing.JButton();
  jButtonClean=new javax.swing.JButton();
  cardCountLabel=new javax.swing.JLabel();
  cardCount=new javax.swing.JLabel();
  jButtonRemoveFromMain=new javax.swing.JButton();
  jButtonRemoveFromSideboard=new javax.swing.JButton();
  tbColor.setFloatable(false);
  tbColor.setRollover(true);
  rdoRed.setSelected(true);
  rdoRed.setText("Red ");
  rdoRed.setFocusable(false);
  rdoRed.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoRed.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoRed.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoRedActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoRed);
  rdoGreen.setSelected(true);
  rdoGreen.setText("Green ");
  rdoGreen.setFocusable(false);
  rdoGreen.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoGreen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoGreen.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoGreenActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoGreen);
  rdoBlue.setSelected(true);
  rdoBlue.setText("Blue ");
  rdoBlue.setFocusable(false);
  rdoBlue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoBlue.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoBlue.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoBlueActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoBlue);
  rdoBlack.setSelected(true);
  rdoBlack.setText("Black ");
  rdoBlack.setFocusable(false);
  rdoBlack.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoBlack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoBlack.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoBlackActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoBlack);
  rdoWhite.setSelected(true);
  rdoWhite.setText("White ");
  rdoWhite.setFocusable(false);
  rdoWhite.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoWhite.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoWhite.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoWhiteActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoWhite);
  rdoColorless.setSelected(true);
  rdoColorless.setText("Colorless ");
  rdoColorless.setFocusable(false);
  rdoColorless.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoColorless.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoColorless.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoColorlessActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoColorless);
  cbExpansionSet.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1","Item 2","Item 3","Item 4"}));
  cbExpansionSet.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbExpansionSetActionPerformed(evt);
    }
  }
);
  tbColor.add(cbExpansionSet);
  btnBooster.setText("Open Booster");
  btnBooster.setFocusable(false);
  btnBooster.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnBooster.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnBooster.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBoosterActionPerformed(evt);
    }
  }
);
  tbColor.add(btnBooster);
  btnClear.setText("Clear");
  btnClear.setFocusable(false);
  btnClear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnClear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnClear.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnClearActionPerformed(evt);
    }
  }
);
  tbColor.add(btnClear);
  tbTypes.setFloatable(false);
  tbTypes.setRollover(true);
  rdoLand.setSelected(true);
  rdoLand.setFocusable(false);
  rdoLand.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoLand.setLabel("Land ");
  rdoLand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoLand.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoLandActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoLand);
  rdoCreatures.setSelected(true);
  rdoCreatures.setFocusable(false);
  rdoCreatures.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoCreatures.setLabel("Creatures ");
  rdoCreatures.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoCreatures.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoCreaturesActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoCreatures);
  rdoArtifacts.setSelected(true);
  rdoArtifacts.setText("Artifacts ");
  rdoArtifacts.setFocusable(false);
  rdoArtifacts.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoArtifacts.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoArtifacts.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoArtifactsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoArtifacts);
  rdoEnchantments.setSelected(true);
  rdoEnchantments.setText("Enchantments ");
  rdoEnchantments.setFocusable(false);
  rdoEnchantments.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoEnchantments.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoEnchantments.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoEnchantmentsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoEnchantments);
  rdoInstants.setSelected(true);
  rdoInstants.setText("Instants ");
  rdoInstants.setFocusable(false);
  rdoInstants.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoInstants.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoInstants.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoInstantsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoInstants);
  rdoSorceries.setSelected(true);
  rdoSorceries.setText("Sorceries ");
  rdoSorceries.setFocusable(false);
  rdoSorceries.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoSorceries.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoSorceries.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoSorceriesActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoSorceries);
  rdoPlaneswalkers.setSelected(true);
  rdoPlaneswalkers.setText("Planeswalkers ");
  rdoPlaneswalkers.setFocusable(false);
  rdoPlaneswalkers.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoPlaneswalkers.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoPlaneswalkers.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoPlaneswalkersActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoPlaneswalkers);
  chkPiles.setText("Piles");
  chkPiles.setFocusable(false);
  chkPiles.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  chkPiles.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  chkPiles.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      chkPilesActionPerformed(evt);
    }
  }
);
  tbTypes.add(chkPiles);
  cbSortBy.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1","Item 2","Item 3","Item 4"}));
  cbSortBy.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbSortByActionPerformed(evt);
    }
  }
);
  tbTypes.add(cbSortBy);
  jToggleListView.setSelected(true);
  jToggleListView.setText("ListView");
  jToggleListView.setFocusable(false);
  jToggleListView.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jToggleListView.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jToggleListView.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jToggleListViewActionPerformed(evt);
    }
  }
);
  tbTypes.add(jToggleListView);
  jToggleCardView.setText("CardView");
  jToggleCardView.setFocusable(false);
  jToggleCardView.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jToggleCardView.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jToggleCardView.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jToggleCardViewActionPerformed(evt);
    }
  }
);
  tbTypes.add(jToggleCardView);
  jPanel1.setOpaque(false);
  jPanel1.setPreferredSize(new java.awt.Dimension(897,35));
  jButtonAddToMain.setText("+");
  jButtonAddToMain.setToolTipText("Add to Main");
  jButtonAddToMain.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonAddToMainActionPerformed(evt);
    }
  }
);
  jButtonAddToSideboard.setText("+S");
  jButtonAddToSideboard.setToolTipText("Add to Sideboard");
  jButtonAddToSideboard.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonAddToSideboardActionPerformed(evt);
    }
  }
);
  jLabel1.setText("Search (by name,in rules):");
  jButtonSearch.setText("Search");
  jButtonSearch.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonSearchActionPerformed(evt);
    }
  }
);
  jButtonClean.setText("Clear");
  jButtonClean.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonCleanActionPerformed(evt);
    }
  }
);
  cardCountLabel.setText("Card count:");
  cardCount.setText("0");
  jButtonRemoveFromMain.setText("-");
  jButtonRemoveFromMain.setToolTipText("Remove from Main");
  jButtonRemoveFromMain.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonRemoveFromMainActionPerformed(evt);
    }
  }
);
  jButtonRemoveFromSideboard.setText("-S");
  jButtonRemoveFromSideboard.setToolTipText("Remove from Sideboard");
  jButtonRemoveFromSideboard.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonRemoveFromSideboardActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout jPanel1Layout=new javax.swing.GroupLayout(jPanel1);
  jPanel1.setLayout(jPanel1Layout);
  jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jButtonAddToMain).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonRemoveFromMain).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jButtonAddToSideboard).addGap(5,5,5).addComponent(jButtonRemoveFromSideboard).addGap(18,18,18).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jTextFieldSearch,javax.swing.GroupLayout.PREFERRED_SIZE,112,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonSearch).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButtonClean).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(cardCountLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cardCount,javax.swing.GroupLayout.PREFERRED_SIZE,48,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(186,Short.MAX_VALUE)));
  jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonAddToMain).addComponent(jLabel1).addComponent(jTextFieldSearch,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jButtonSearch).addComponent(jButtonClean).addComponent(cardCountLabel).addComponent(cardCount).addComponent(jButtonRemoveFromMain).addComponent(jButtonAddToSideboard).addComponent(jButtonRemoveFromSideboard)));
  cardCountLabel.getAccessibleContext().setAccessibleName("cardCountLabel");
  cardCount.getAccessibleContext().setAccessibleName("cardCount");
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(this);
  this.setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(tbColor,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE).addComponent(tbTypes,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addContainerGap().addComponent(jPanel1,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addContainerGap()).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(tbColor,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0,0,0).addComponent(tbTypes,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,273,Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1,javax.swing.GroupLayout.PREFERRED_SIZE,35,javax.swing.GroupLayout.PREFERRED_SIZE)));
}
