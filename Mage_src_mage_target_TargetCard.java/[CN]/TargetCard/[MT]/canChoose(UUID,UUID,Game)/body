{
  int possibleTargets=0;
  for (  UUID playerId : game.getPlayer(sourceControllerId).getInRange()) {
    Player player=game.getPlayer(playerId);
    if (player != null) {
switch (zone) {
case HAND:
        for (        Card card : player.getHand().getCards(filter,sourceId,sourceControllerId,game)) {
          if (sourceId == null || isNotTarget() || !game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.TARGET,card.getId(),sourceId,sourceControllerId))) {
            possibleTargets++;
            if (possibleTargets >= this.minNumberOfTargets) {
              return true;
            }
          }
        }
      break;
case GRAVEYARD:
    for (    Card card : player.getGraveyard().getCards(filter,sourceId,sourceControllerId,game)) {
      if (sourceId == null || isNotTarget() || !game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.TARGET,card.getId(),sourceId,sourceControllerId))) {
        possibleTargets++;
        if (possibleTargets >= this.minNumberOfTargets) {
          return true;
        }
      }
    }
  break;
case LIBRARY:
for (Card card : player.getLibrary().getUniqueCards(game)) {
  if (sourceId == null || isNotTarget() || !game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.TARGET,card.getId(),sourceId,sourceControllerId))) {
    if (filter.match(card,game)) {
      possibleTargets++;
      if (possibleTargets >= this.minNumberOfTargets) {
        return true;
      }
    }
  }
}
break;
case EXILED:
for (Card card : game.getExile().getPermanentExile().getCards(game)) {
if (sourceId == null || isNotTarget() || !game.replaceEvent(GameEvent.getEvent(GameEvent.EventType.TARGET,card.getId(),sourceId,sourceControllerId))) {
if (filter.match(card,player.getId(),game)) {
  possibleTargets++;
  if (possibleTargets >= this.minNumberOfTargets) {
    return true;
  }
}
}
}
break;
}
}
}
return false;
}
