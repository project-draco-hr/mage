{
  boolean result=true;
  UUID sourceId=source == null ? null : source.getSourceId();
  while (!allCards.isEmpty()) {
    Cards cards=new CardsImpl();
    UUID ownerId=null;
    for (Iterator<Card> it=allCards.iterator(); it.hasNext(); ) {
      Card card=it.next();
      if (cards.isEmpty()) {
        ownerId=card.getOwnerId();
      }
      if (card.getOwnerId().equals(ownerId)) {
        it.remove();
        cards.add(card);
      }
    }
    if (!cards.isEmpty()) {
      Player choosingPlayer=this;
      if (ownerId != this.getId()) {
        choosingPlayer=game.getPlayer(ownerId);
      }
      if (choosingPlayer == null) {
        continue;
      }
      boolean chooseOrder=false;
      if (userData.askMoveToGraveOrder()) {
        if (cards.size() > 3) {
          chooseOrder=choosingPlayer.chooseUse(Outcome.Neutral,"Would you like to choose the order the cards go to graveyard?",source,game);
        }
      }
      if (chooseOrder) {
        TargetCard target=new TargetCard(fromZone,new FilterCard("card to put on the top of your graveyard (last one chosen will be topmost)"));
        target.setRequired(true);
        while (choosingPlayer.canRespond() && cards.size() > 1) {
          choosingPlayer.chooseTarget(Outcome.Neutral,cards,target,source,game);
          UUID targetObjectId=target.getFirstTarget();
          Card card=cards.get(targetObjectId,game);
          cards.remove(targetObjectId);
          if (card != null) {
            result&=choosingPlayer.moveCardToGraveyardWithInfo(card,sourceId,game,fromZone);
          }
          target.clearChosen();
        }
        if (cards.size() == 1) {
          result&=choosingPlayer.moveCardToGraveyardWithInfo(cards.getCards(game).iterator().next(),sourceId,game,fromZone);
        }
      }
 else {
        for (        Card card : cards.getCards(game)) {
          result&=choosingPlayer.moveCardToGraveyardWithInfo(card,sourceId,game,fromZone);
        }
      }
    }
  }
  return result;
}
