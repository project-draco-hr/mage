{
  if (cards.isEmpty()) {
    return true;
  }
  Set<Card> successfulMovedCards=new LinkedHashSet<>();
switch (toZone) {
case EXILED:
    for (    Card card : cards) {
      fromZone=game.getState().getZone(card.getId());
      boolean withName=(fromZone.equals(Zone.BATTLEFIELD) || fromZone.equals(Zone.STACK)) || !card.isFaceDown(game);
      if (moveCardToExileWithInfo(card,null,"",source == null ? null : source.getSourceId(),game,fromZone,withName)) {
        successfulMovedCards.add(card);
      }
    }
  break;
case GRAVEYARD:
successfulMovedCards=moveCardsToGraveyardWithInfo(cards,source,game,fromZone);
break;
case HAND:
case BATTLEFIELD:
return moveCards(cards,toZone,source,game,false,false,false,null);
case LIBRARY:
for (Card card : cards) {
fromZone=game.getState().getZone(card.getId());
boolean hideCard=fromZone.equals(Zone.HAND) || fromZone.equals(Zone.LIBRARY);
if (moveCardToLibraryWithInfo(card,source == null ? null : source.getSourceId(),game,fromZone,true,!hideCard)) {
successfulMovedCards.add(card);
}
}
break;
default :
throw new UnsupportedOperationException("to Zone not supported yet");
}
game.fireEvent(new ZoneChangeGroupEvent(successfulMovedCards,source == null ? null : source.getSourceId(),this.getId(),fromZone,toZone));
return successfulMovedCards.size() > 0;
}
