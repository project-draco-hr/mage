{
  if (damage > 0 && canDamage(game.getObject(sourceId),game)) {
    GameEvent event=new DamagePlayerEvent(playerId,sourceId,playerId,damage,preventable,combatDamage);
    event.setAppliedEffects(appliedEffects);
    if (!game.replaceEvent(event)) {
      int actualDamage=event.getAmount();
      if (actualDamage > 0) {
        UUID sourceControllerId=null;
        Abilities sourceAbilities=null;
        MageObject source=game.getPermanentOrLKIBattlefield(sourceId);
        if (source == null) {
          StackObject stackObject=game.getStack().getStackObject(sourceId);
          if (stackObject != null) {
            source=stackObject.getStackAbility().getSourceObject(game);
          }
 else {
            source=game.getObject(sourceId);
          }
          if (source instanceof Spell) {
            sourceAbilities=((Spell)source).getAbilities(game);
            sourceControllerId=((Spell)source).getControllerId();
          }
 else           if (source instanceof Card) {
            sourceAbilities=((Card)source).getAbilities(game);
            sourceControllerId=((Card)source).getOwnerId();
          }
 else           if (source instanceof CommandObject) {
            sourceControllerId=((CommandObject)source).getControllerId();
            sourceAbilities=((CommandObject)source).getAbilities();
          }
 else {
            source=null;
          }
        }
 else {
          sourceAbilities=((Permanent)source).getAbilities(game);
          sourceControllerId=((Permanent)source).getControllerId();
        }
        if (sourceAbilities != null && sourceAbilities.containsKey(InfectAbility.getInstance().getId())) {
          addCounters(CounterType.POISON.createInstance(actualDamage),game);
        }
 else {
          GameEvent damageToLifeLossEvent=new GameEvent(EventType.DAMAGE_CAUSES_LIFE_LOSS,playerId,sourceId,playerId,actualDamage,combatDamage);
          if (!game.replaceEvent(damageToLifeLossEvent)) {
            this.loseLife(damageToLifeLossEvent.getAmount(),game);
          }
        }
        if (sourceAbilities != null && sourceAbilities.containsKey(LifelinkAbility.getInstance().getId())) {
          Player player=game.getPlayer(sourceControllerId);
          player.gainLife(actualDamage,game);
        }
        game.fireEvent(new DamagedPlayerEvent(playerId,sourceId,playerId,actualDamage,combatDamage));
        return actualDamage;
      }
    }
  }
  return 0;
}
