{
  if (damage > 0 && canDamage(game.getObject(sourceId),game)) {
    GameEvent event=new DamagePlayerEvent(playerId,sourceId,playerId,damage,preventable,combatDamage);
    event.setAppliedEffects(appliedEffects);
    if (!game.replaceEvent(event)) {
      int actualDamage=event.getAmount();
      if (actualDamage > 0) {
        UUID sourceControllerId=null;
        MageObject source=game.getPermanentOrLKIBattlefield(sourceId);
        if (source == null) {
          source=game.getObject(sourceId);
          if (source instanceof Spell) {
            sourceControllerId=((Spell)source).getControllerId();
          }
 else {
            source=null;
          }
        }
 else {
          sourceControllerId=((Permanent)source).getControllerId();
        }
        if (source != null && (source.getAbilities().containsKey(InfectAbility.getInstance().getId()))) {
          addCounters(CounterType.POISON.createInstance(actualDamage),game);
        }
 else {
          GameEvent damageToLifeLossEvent=new GameEvent(EventType.DAMAGE_CAUSES_LIFE_LOSS,playerId,sourceId,playerId,actualDamage,combatDamage);
          if (!game.replaceEvent(damageToLifeLossEvent)) {
            this.loseLife(damageToLifeLossEvent.getAmount(),game);
          }
        }
        if (source != null && source.getAbilities().containsKey(LifelinkAbility.getInstance().getId())) {
          Player player=game.getPlayer(sourceControllerId);
          player.gainLife(actualDamage,game);
        }
        game.fireEvent(new DamagedPlayerEvent(playerId,sourceId,playerId,actualDamage,combatDamage));
        return actualDamage;
      }
    }
  }
  return 0;
}
