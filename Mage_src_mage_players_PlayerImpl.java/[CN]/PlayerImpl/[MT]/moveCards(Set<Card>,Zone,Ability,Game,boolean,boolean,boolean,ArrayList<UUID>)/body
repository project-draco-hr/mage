{
  if (cards.isEmpty()) {
    return true;
  }
  Set<Card> successfulMovedCards=new LinkedHashSet<>();
  Zone fromZone=null;
switch (toZone) {
case BATTLEFIELD:
    List<Permanent> permanents=new ArrayList<>();
  List<Permanent> permanentsEntered=new ArrayList<>();
for (Card card : cards) {
  UUID controllingPlayerId=byOwner ? card.getOwnerId() : source.getControllerId();
  fromZone=game.getState().getZone(card.getId());
  if (faceDown) {
    card.setFaceDown(true,game);
  }
  ZoneChangeEvent event=new ZoneChangeEvent(card.getId(),source.getSourceId(),controllingPlayerId,fromZone,Zone.BATTLEFIELD,appliedEffects,tapped);
  if (!game.replaceEvent(event)) {
    Permanent permanent=new PermanentCard(card,controllingPlayerId,game);
    permanents.add(permanent);
    card.checkForCountersToAdd(permanent,game);
    permanent.setTapped(tapped);
    permanent.setFaceDown(faceDown,game);
  }
  if (faceDown) {
    card.setFaceDown(false,game);
  }
}
game.setScopeRelevant(true);
for (Permanent permanent : permanents) {
fromZone=game.getState().getZone(permanent.getId());
if (permanent.entersBattlefield(source.getSourceId(),game,fromZone,true)) {
permanentsEntered.add(permanent);
}
}
game.setScopeRelevant(false);
game.applyEffects();
for (Permanent permanent : permanentsEntered) {
fromZone=game.getState().getZone(permanent.getId());
if (((Card)permanent).removeFromZone(game,fromZone,source.getSourceId())) {
permanent.updateZoneChangeCounter(game);
game.getContinuousEffects().setController(permanent.getId(),permanent.getControllerId());
game.addPermanent(permanent);
permanent.setZone(Zone.BATTLEFIELD,game);
game.setScopeRelevant(true);
successfulMovedCards.add(permanent);
game.addSimultaneousEvent(new ZoneChangeEvent(permanent,permanent.getControllerId(),fromZone,Zone.BATTLEFIELD));
}
}
break;
default :
throw new UnsupportedOperationException("to Zone not supported yet");
}
game.fireEvent(new ZoneChangeGroupEvent(successfulMovedCards,source == null ? null : source.getSourceId(),this.getId(),fromZone,toZone));
return successfulMovedCards.size() > 0;
}
