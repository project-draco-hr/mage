{
  LinkedHashMap<UUID,ActivatedAbility> useable=new LinkedHashMap<UUID,ActivatedAbility>();
  for (  ActivatedAbility ability : object.getAbilities().getActivatedAbilities(zone)) {
    if (ability.canActivate(playerId,game)) {
      useable.put(ability.getId(),ability);
    }
  }
  if (zone != Zone.HAND) {
    if (zone != Zone.BATTLEFIELD && game.getContinuousEffects().asThough(object.getId(),AsThoughEffectType.CAST,game)) {
      for (      ActivatedAbility ability : object.getAbilities().getActivatedAbilities(Zone.HAND)) {
        useable.put(ability.getId(),ability);
      }
    }
  }
  Abilities<ActivatedAbility> otherAbilities=game.getState().getOtherAbilities(object.getId(),zone);
  if (otherAbilities != null) {
    for (    ActivatedAbility ability : otherAbilities) {
      useable.put(ability.getId(),ability);
    }
  }
  return useable;
}
