{
  Set<UUID> playable=new HashSet<>();
  if (!shouldSkipGettingPlayable(game)) {
    ManaOptions available=getManaAvailable(game);
    available.addMana(manaPool.getMana());
    for (    Card card : hand.getCards(game)) {
      for (      ActivatedAbility ability : card.getAbilities().getPlayableAbilities(Zone.HAND)) {
        if (ability instanceof PlayLandAbility) {
          if (game.getContinuousEffects().preventedByRuleModification(GameEvent.getEvent(GameEvent.EventType.PLAY_LAND,ability.getSourceId(),ability.getSourceId(),playerId),ability,game,true)) {
            break;
          }
        }
        if (canPlay(ability,available,card,game)) {
          playable.add(card.getId());
          break;
        }
      }
    }
  }
  return playable;
}
