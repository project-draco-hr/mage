{
  Comparable aCom=null;
  Comparable bCom=null;
switch (column) {
case 0:
    aCom=1;
  bCom=1;
break;
case 1:
aCom=a.getName();
bCom=b.getName();
if (aCom.equals(bCom) && a.getExpansionSetCode().equals(b.getExpansionSetCode())) {
aCom=a.getCardNumber();
bCom=b.getCardNumber();
}
break;
case 2:
aCom=a.getConvertedManaCost();
bCom=b.getConvertedManaCost();
break;
case 3:
aCom=CardHelper.getColor(a);
bCom=CardHelper.getColor(b);
break;
case 4:
aCom=CardHelper.getType(a);
bCom=CardHelper.getType(b);
break;
case 5:
aCom=(float)-1;
bCom=(float)-1;
if (CardHelper.isCreature(a)) {
aCom=new Float(a.getPower() + "." + (a.getToughness().startsWith("-") ? "0" : a.getToughness()));
}
if (CardHelper.isCreature(b)) {
bCom=new Float(b.getPower() + "." + (b.getToughness().startsWith("-") ? "0" : b.getToughness()));
}
break;
case 6:
aCom=a.getRarity().toString();
bCom=b.getRarity().toString();
break;
case 7:
aCom=a.getExpansionSetCode();
bCom=b.getExpansionSetCode();
break;
case 8:
aCom=Integer.parseInt(a.getCardNumber().replaceAll("[\\D]",""));
bCom=Integer.parseInt(b.getCardNumber().replaceAll("[\\D]",""));
break;
default :
break;
}
if (ascending) {
return aCom.compareTo(bCom);
}
 else {
return bCom.compareTo(aCom);
}
}
