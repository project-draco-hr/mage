{
  super(card.getId(),card.getExpansionSetCode(),card.getCardNumber(),card.isFaceDown(),card.getUsesVariousArt(),card.getTokenSetCode());
  if (this.faceDown) {
    fillEmpty();
    return;
  }
  SplitCard splitCard=null;
  if (card.isSplitCard()) {
    splitCard=(SplitCard)card;
    rotate=true;
  }
 else {
    if (card instanceof Spell) {
switch (((Spell)card).getSpellAbility().getSpellAbilityType()) {
case SPLIT_FUSED:
        splitCard=(SplitCard)((Spell)card).getCard();
      rotate=true;
    break;
case SPLIT_LEFT:
case SPLIT_RIGHT:
  rotate=true;
break;
}
}
}
if (splitCard != null) {
this.isSplitCard=true;
leftSplitName=splitCard.getLeftHalfCard().getName();
leftSplitCosts=splitCard.getLeftHalfCard().getManaCost();
leftSplitRules=splitCard.getLeftHalfCard().getRules();
rightSplitName=splitCard.getRightHalfCard().getName();
rightSplitCosts=splitCard.getRightHalfCard().getManaCost();
rightSplitRules=splitCard.getRightHalfCard().getRules();
}
this.name=card.getImageName();
this.displayName=card.getName();
this.rules=card.getRules();
this.manaCost=card.getManaCost().getSymbols();
this.convertedManaCost=card.getManaCost().convertedManaCost();
if (card instanceof Permanent) {
this.mageObjectType=MageObjectType.PERMANENT;
Permanent permanent=(Permanent)card;
this.power=Integer.toString(card.getPower().getValue());
this.toughness=Integer.toString(card.getToughness().getValue());
this.loyalty=Integer.toString(permanent.getCounters().getCount(CounterType.LOYALTY));
this.pairedCard=permanent.getPairedCard();
if (!permanent.getControllerId().equals(permanent.getOwnerId())) {
controlledByOwner=false;
}
}
 else {
if (card.isCopy()) {
this.mageObjectType=MageObjectType.COPY_CARD;
}
 else {
this.mageObjectType=MageObjectType.CARD;
}
this.power=card.getPower().toString();
this.toughness=card.getToughness().toString();
this.loyalty="";
}
this.cardTypes=card.getCardType();
this.subTypes=card.getSubtype();
this.superTypes=card.getSupertype();
this.color=card.getColor();
this.canTransform=card.canTransform();
this.flipCard=card.isFlipCard();
if (card instanceof PermanentToken) {
this.isToken=true;
this.mageObjectType=MageObjectType.TOKEN;
this.rarity=Rarity.COMMON;
if (((PermanentToken)card).getToken().getOriginalCardNumber() > 0) {
this.expansionSetCode=((PermanentToken)card).getToken().getOriginalExpansionSetCode();
this.cardNumber=((PermanentToken)card).getToken().getOriginalCardNumber();
}
 else {
this.expansionSetCode=((PermanentToken)card).getExpansionSetCode();
}
this.rules=((PermanentToken)card).getRules();
this.type=((PermanentToken)card).getToken().getTokenType();
}
 else {
this.rarity=card.getRarity();
this.isToken=false;
}
if (card.getCounters() != null && !card.getCounters().isEmpty()) {
counters=new ArrayList<>();
for (Counter counter : card.getCounters().values()) {
counters.add(new CounterView(counter));
}
}
if (card.getSecondCardFace() != null) {
this.secondCardFace=new CardView(card.getSecondCardFace());
this.alternateName=secondCardFace.getName();
this.originalName=card.getName();
}
this.flipCard=card.isFlipCard();
if (card.isFlipCard() && card.getFlipCardName() != null) {
this.alternateName=card.getFlipCardName();
this.originalName=card.getName();
}
if (card instanceof Spell) {
this.mageObjectType=MageObjectType.SPELL;
Spell<?> spell=(Spell<?>)card;
for (SpellAbility spellAbility : spell.getSpellAbilities()) {
for (UUID modeId : spellAbility.getModes().getSelectedModes()) {
spellAbility.getModes().setMode(spellAbility.getModes().get(modeId));
if (spellAbility.getTargets().size() > 0) {
setTargets(spellAbility.getTargets());
}
}
}
if (spell.getSpellAbility().isModal()) {
Modes modes=spell.getSpellAbility().getModes();
for (UUID modeId : modes.getSelectedModes()) {
modes.setMode(modes.get(modeId));
this.rules.add("<span color='green'><i>Chosen mode: " + spell.getSpellAbility().getEffects().getText(modes.get(modeId)) + "</i></span>");
}
}
}
}
