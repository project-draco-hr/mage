{
  super(card.getId(),card.getExpansionSetCode(),card.getCardNumber(),card.isFaceDown());
  if (this.faceDown) {
    fillEmpty();
    return;
  }
  this.name=card.getName();
  this.rules=card.getRules();
  if (card instanceof Permanent) {
    this.power=Integer.toString(card.getPower().getValue());
    this.toughness=Integer.toString(card.getToughness().getValue());
    this.loyalty=Integer.toString(((Permanent)card).getCounters().getCount(CounterType.LOYALTY));
    this.pairedCard=((Permanent)card).getPairedCard();
  }
 else {
    this.power=card.getPower().toString();
    this.toughness=card.getToughness().toString();
    this.loyalty="";
  }
  this.cardTypes=card.getCardType();
  this.subTypes=card.getSubtype();
  this.superTypes=card.getSupertype();
  this.color=card.getColor();
  this.manaCost=card.getManaCost().getSymbols();
  this.convertedManaCost=card.getManaCost().convertedManaCost();
  this.canTransform=card.canTransform();
  if (card instanceof PermanentToken) {
    this.rarity=Rarity.COMMON;
  }
 else {
    this.rarity=card.getRarity();
  }
  if (card.getSecondCardFace() != null) {
    this.secondCardFace=new CardView(card.getSecondCardFace());
  }
  if (card instanceof Spell) {
    Spell<?> spell=(Spell<?>)card;
    if (spell.getSpellAbility().getTargets().size() > 0) {
      setTargets(spell.getSpellAbility().getTargets());
    }
  }
}
