{
  Player player=game.getPlayer(source.getControllerId());
  if (player == null) {
    return false;
  }
  int amount=0;
  TargetControlledPermanent sacrificeLand=new TargetControlledPermanent(0,Integer.MAX_VALUE,new FilterControlledLandPermanent("lands you control"),true);
  if (player.chooseTarget(Outcome.Sacrifice,sacrificeLand,source,game)) {
    for (    Object uuid : sacrificeLand.getTargets()) {
      Permanent land=game.getPermanent((UUID)uuid);
      if (land != null) {
        land.sacrifice(source.getSourceId(),game);
        amount++;
      }
    }
  }
  TargetCardInLibrary target=new TargetCardInLibrary(amount,new FilterLandCard("lands"));
  if (player.searchLibrary(target,game)) {
    if (target.getTargets().size() > 0) {
      for (      UUID cardId : (List<UUID>)target.getTargets()) {
        Card card=player.getLibrary().getCard(cardId,game);
        if (card != null) {
          player.putOntoBattlefieldWithInfo(card,game,Zone.LIBRARY,source.getControllerId(),true);
        }
      }
    }
    player.shuffleLibrary(game);
    return true;
  }
  player.shuffleLibrary(game);
  return false;
}
