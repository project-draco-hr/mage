{
  sessionState=SessionState.CONNECTING;
  try {
    InvokerLocator clientLocator=new InvokerLocator(connection.getURI());
    server=(MageServer)TransporterClient.createTransporterClient(clientLocator,MageServer.class);
    callbackClient=new Client(clientLocator,"callback");
    callbackClient.connect();
    Map<String,Object> metadata=new HashMap<String,Object>();
    metadata.put(Bisocket.IS_CALLBACK_SERVER,"true");
    CallbackHandler callbackHandler=new CallbackHandler();
    callbackClient.addListener(callbackHandler,metadata);
    this.sessionId=callbackClient.getSessionId();
    boolean registerResult=false;
    if (connection.getPassword().isEmpty())     registerResult=server.registerClient(connection.getUsername(),sessionId,client.getVersion());
 else     registerResult=server.registerAdmin(connection.getPassword(),sessionId,client.getVersion());
    if (registerResult) {
      sessionState=SessionState.CONNECTED;
      serverState=server.getServerState();
      logger.info("Connected to MAGE server at " + connection.getHost() + ":"+ connection.getPort());
      client.connected("Connected to " + connection.getHost() + ":"+ connection.getPort()+ " ");
      return true;
    }
    disconnect(false);
    client.showMessage("Unable to connect to server.");
  }
 catch (  MalformedURLException ex) {
    logger.fatal("",ex);
    client.showMessage("Unable to connect to server. " + ex.getMessage());
  }
catch (  Throwable t) {
    logger.fatal("Unable to connect to server - ",t);
    disconnect(false);
    client.showMessage("Unable to connect to server. " + t.getMessage());
  }
  return false;
}
