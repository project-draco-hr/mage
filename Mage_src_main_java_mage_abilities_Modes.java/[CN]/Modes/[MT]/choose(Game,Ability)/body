{
  if (this.size() > 1) {
    this.selectedModes.clear();
    this.duplicateModes.clear();
    Card card=game.getCard(source.getSourceId());
    if (card != null) {
      for (      Ability modeModifyingAbility : card.getAbilities()) {
        if (modeModifyingAbility instanceof OptionalAdditionalModeSourceCosts) {
          ((OptionalAdditionalModeSourceCosts)modeModifyingAbility).addOptionalAdditionalModeCosts(source,game);
        }
      }
    }
    if (this.size() == this.getMinModes() && !isEachModeMoreThanOnce()) {
      Set<UUID> onceSelectedModes=null;
      if (isEachModeOnlyOnce()) {
        onceSelectedModes=getAlreadySelectedModes(source,game);
      }
      for (      Mode mode : this.values()) {
        if ((!isEachModeOnlyOnce() || onceSelectedModes == null || !onceSelectedModes.contains(mode.getId())) && mode.getTargets().canChoose(source.getSourceId(),source.getControllerId(),game)) {
          this.addSelectedMode(mode.getId());
        }
      }
      if (isEachModeOnlyOnce()) {
        setAlreadySelectedModes(selectedModes,source,game);
      }
      return selectedModes.size() > 0;
    }
    UUID playerId=null;
    if (modeChooser == TargetController.OPPONENT) {
      TargetOpponent targetOpponent=new TargetOpponent();
      if (targetOpponent.choose(Outcome.Benefit,source.getControllerId(),source.getSourceId(),game)) {
        playerId=targetOpponent.getFirstTarget();
      }
    }
 else {
      playerId=source.getControllerId();
    }
    if (playerId == null) {
      return false;
    }
    Player player=game.getPlayer(playerId);
    this.currentMode=null;
    while (this.selectedModes.size() < this.getMaxModes()) {
      Mode choice=player.chooseMode(this,source,game);
      if (choice == null) {
        if (isEachModeOnlyOnce()) {
          setAlreadySelectedModes(selectedModes,source,game);
        }
        return this.selectedModes.size() >= this.getMinModes();
      }
      this.addSelectedMode(choice.getId());
      if (currentMode == null) {
        currentMode=choice;
      }
    }
    if (isEachModeOnlyOnce()) {
      setAlreadySelectedModes(selectedModes,source,game);
    }
    return true;
  }
 else {
    if (currentMode == null) {
      this.selectedModes.clear();
      Mode mode=this.values().iterator().next();
      this.addSelectedMode(mode.getId());
      this.setActiveMode(mode);
    }
    return true;
  }
}
