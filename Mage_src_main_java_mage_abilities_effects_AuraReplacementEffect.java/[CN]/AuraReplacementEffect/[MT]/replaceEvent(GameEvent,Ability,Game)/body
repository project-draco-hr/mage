{
  Zone fromZone=((ZoneChangeEvent)event).getFromZone();
  Card card=game.getCard(event.getTargetId());
  UUID sourceId=event.getSourceId();
  UUID controllerId=event.getPlayerId();
  if (game.getState().getValue(TransformAbility.VALUE_KEY_ENTER_TRANSFORMED + card.getId()) != null) {
    card=card.getSecondCardFace();
  }
  if (card.isFaceDown(game)) {
    return false;
  }
  Object object=game.getState().getValue("attachTo:" + card.getId());
  if (object != null && object instanceof PermanentCard) {
    return false;
  }
  UUID targetId=null;
  MageObject sourceObject=game.getObject(sourceId);
  boolean enchantCardInGraveyard=false;
  if (sourceObject instanceof StackAbility) {
    StackAbility stackAbility=(StackAbility)sourceObject;
    if (!stackAbility.getEffects().isEmpty()) {
      targetId=stackAbility.getEffects().get(0).getTargetPointer().getFirst(game,stackAbility);
    }
  }
  game.applyEffects();
  Player controllingPlayer=null;
  if (targetId == null) {
    SpellAbility spellAbility=card.getSpellAbility();
    if (spellAbility.getTargets().isEmpty()) {
      for (      Ability ability : card.getAbilities(game)) {
        if ((ability instanceof SpellAbility) && SpellAbilityType.BASE_ALTERNATE.equals(((SpellAbility)ability).getSpellAbilityType()) && !ability.getTargets().isEmpty()) {
          spellAbility=(SpellAbility)ability;
          break;
        }
      }
    }
    if (spellAbility.getTargets().isEmpty()) {
      return false;
    }
    Target target=spellAbility.getTargets().get(0).copy();
    Outcome auraOutcome=Outcome.BoostCreature;
    for (    Effect effect : spellAbility.getEffects()) {
      if (effect instanceof AttachEffect) {
        auraOutcome=effect.getOutcome();
        break;
      }
    }
    enchantCardInGraveyard=target instanceof TargetCardInGraveyard;
    if (target != null) {
      target.setNotTarget(true);
      target.clearChosen();
    }
    if (event.getPlayerId() != null) {
      controllingPlayer=game.getPlayer(event.getPlayerId());
    }
 else {
      controllingPlayer=game.getPlayer(card.getOwnerId());
    }
    if (target != null && controllingPlayer != null && controllingPlayer.choose(auraOutcome,target,card.getId(),game)) {
      targetId=target.getFirstTarget();
    }
  }
  Card targetCard=null;
  Permanent targetPermanent=null;
  if (enchantCardInGraveyard) {
    targetCard=game.getCard(targetId);
  }
 else {
    targetPermanent=game.getPermanent(targetId);
  }
  Player targetPlayer=game.getPlayer(targetId);
  if (targetCard != null || targetPermanent != null || targetPlayer != null) {
    card=game.getCard(event.getTargetId());
    card.removeFromZone(game,fromZone,sourceId);
    card.updateZoneChangeCounter(game);
    PermanentCard permanent=new PermanentCard(card,(controllingPlayer == null ? card.getOwnerId() : controllingPlayer.getId()),game);
    game.getBattlefield().addPermanent(permanent);
    card.setZone(Zone.BATTLEFIELD,game);
    if (permanent.entersBattlefield(event.getSourceId(),game,fromZone,true)) {
      if (targetCard != null) {
        permanent.attachTo(targetCard.getId(),game);
      }
 else       if (targetPermanent != null) {
        targetPermanent.addAttachment(permanent.getId(),game);
      }
 else       if (targetPlayer != null) {
        targetPlayer.addAttachment(permanent.getId(),game);
      }
      game.applyEffects();
      game.fireEvent(new ZoneChangeEvent(permanent,controllerId,fromZone,Zone.BATTLEFIELD));
      return true;
    }
  }
  return false;
}
