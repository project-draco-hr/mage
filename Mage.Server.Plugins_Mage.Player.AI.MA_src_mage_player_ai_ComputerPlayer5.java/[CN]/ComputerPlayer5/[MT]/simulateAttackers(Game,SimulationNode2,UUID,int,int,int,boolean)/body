{
  if (Thread.interrupted()) {
    Thread.currentThread().interrupt();
    logger.fine("interrupted");
    return GameStateEvaluator2.evaluate(playerId,game);
  }
  Integer val=null;
  SimulationNode2 bestNode=null;
  SimulatedPlayer2 attacker=(SimulatedPlayer2)game.getPlayer(attackerId);
  for (  Combat engagement : attacker.addAttackers(game)) {
    if (alpha >= beta) {
      break;
    }
    Game sim=game.copy();
    UUID defenderId=game.getOpponents(playerId).iterator().next();
    for (    CombatGroup group : engagement.getGroups()) {
      for (      UUID attackId : group.getAttackers()) {
        sim.getPlayer(attackerId).declareAttacker(attackId,defenderId,sim);
      }
    }
    sim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARED_ATTACKERS,playerId,playerId));
    SimulationNode2 newNode=new SimulationNode2(sim,depth,game.getActivePlayerId());
    if (logger.isLoggable(Level.FINE))     logger.fine("simulating attack -- node#: " + SimulationNode2.getCount());
    sim.checkStateAndTriggered();
    while (!sim.getStack().isEmpty()) {
      sim.getStack().resolve(sim);
      logger.fine("resolving triggered abilities");
      sim.applyEffects();
    }
    sim.fireEvent(GameEvent.getEvent(GameEvent.EventType.DECLARE_ATTACKERS_STEP_POST,sim.getActivePlayerId(),sim.getActivePlayerId()));
    Combat simCombat=sim.getCombat().copy();
    sim.getPhase().setStep(new DeclareBlockersStep());
    val=simulateCombat(sim,newNode,depth - 1,alpha,beta,counter);
    if (!attackerId.equals(playerId)) {
      if (val < beta) {
        beta=val;
        bestNode=newNode;
        node.setCombat(simCombat);
      }
    }
 else {
      if (val > alpha) {
        alpha=val;
        bestNode=newNode;
        node.setCombat(simCombat);
      }
    }
  }
  if (val == null)   val=GameStateEvaluator2.evaluate(playerId,game);
  if (bestNode != null) {
    node.children.clear();
    node.children.add(bestNode);
  }
  if (logger.isLoggable(Level.FINE))   logger.fine("returning -- combat attacker score: " + val + " depth:"+ depth+ " for player:"+ game.getPlayer(node.getPlayerId()).getName());
  return val;
}
