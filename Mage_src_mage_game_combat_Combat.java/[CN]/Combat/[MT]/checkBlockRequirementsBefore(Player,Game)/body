{
  for (  Permanent creature : game.getBattlefield().getActivePermanents(filterBlockers,player.getId(),game)) {
    if (game.getOpponents(attackerId).contains(creature.getControllerId())) {
      for (      Map.Entry entry : game.getContinuousEffects().getApplicableRequirementEffects(creature,game).entrySet()) {
        RequirementEffect effect=(RequirementEffect)entry.getKey();
        if (effect.mustBlock(game)) {
          for (          Ability ability : (HashSet<Ability>)entry.getValue()) {
            UUID attackId=effect.mustBlockAttacker(ability,game);
            Player defender=game.getPlayer(creature.getControllerId());
            if (attackId != null && defender != null) {
              if (creaturesForcedToBlockAttackers.containsKey(creature.getId())) {
                creaturesForcedToBlockAttackers.get(creature.getId()).add(attackId);
              }
 else {
                Set<UUID> forcingAttackers=new HashSet<UUID>();
                forcingAttackers.add(attackId);
                creaturesForcedToBlockAttackers.put(creature.getId(),forcingAttackers);
                defender.declareBlocker(defender.getId(),creature.getId(),attackId,game);
              }
            }
          }
        }
      }
    }
  }
}
