{
  for (  Permanent creature : player.getAvailableAttackers(game)) {
    for (    Map.Entry entry : game.getContinuousEffects().getApplicableRequirementEffects(creature,game).entrySet()) {
      RequirementEffect effect=(RequirementEffect)entry.getKey();
      if (effect.mustAttack(game)) {
        for (        Ability ability : (HashSet<Ability>)entry.getValue()) {
          UUID defenderId=effect.mustAttackDefender(ability,game);
          if (defenderId == null) {
            if (defenders.size() == 1) {
              player.declareAttacker(creature.getId(),defenders.iterator().next(),game);
            }
 else {
              TargetDefender target=new TargetDefender(defenders,creature.getId());
              target.setRequired(true);
              if (player.chooseTarget(Outcome.Damage,target,null,game)) {
                player.declareAttacker(creature.getId(),target.getFirstTarget(),game);
              }
            }
          }
 else {
            player.declareAttacker(creature.getId(),defenderId,game);
          }
        }
      }
    }
  }
}
