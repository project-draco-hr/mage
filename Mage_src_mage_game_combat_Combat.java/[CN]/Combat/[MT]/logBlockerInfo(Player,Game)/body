{
  boolean shownDefendingPlayer=false;
  for (  CombatGroup group : this.getGroups()) {
    if (group.defendingPlayerId.equals(defender.getId())) {
      if (!shownDefendingPlayer) {
        game.informPlayers(new StringBuilder("Attacked player: ").append(defender.getName()).toString());
        shownDefendingPlayer=true;
      }
      StringBuilder sb=new StringBuilder();
      for (      UUID attackingCreatureId : group.getAttackers()) {
        Permanent attackingCreature=game.getPermanent(attackingCreatureId);
        if (attackingCreature != null) {
          sb.append(attackingCreature.getName()).append(" (");
          sb.append(attackingCreature.getPower().getValue()).append("/").append(attackingCreature.getToughness().getValue()).append(") ");
        }
 else {
          attackingCreature=(Permanent)game.getLastKnownInformation(attackingCreatureId,Zone.BATTLEFIELD);
          if (attackingCreature != null) {
            sb.append(attackingCreature.getName()).append(" [left battlefield)] ");
          }
        }
      }
      if (group.getBlockers().size() > 0) {
        sb.append("blocked by ");
        for (        UUID blockingCreatureId : group.getBlockers()) {
          Permanent blockingCreature=game.getPermanent(blockingCreatureId);
          if (blockingCreature != null) {
            sb.append(blockingCreature.getName()).append(" (");
            sb.append(blockingCreature.getPower().getValue()).append("/").append(blockingCreature.getToughness().getValue()).append(") ");
          }
        }
      }
 else {
        sb.append("unblocked");
      }
      game.informPlayers(sb.toString());
    }
  }
}
