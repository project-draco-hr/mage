{
  this.attackerId=combat.attackerId;
  for (  CombatGroup group : combat.groups) {
    groups.add(group.copy());
  }
  defenders.addAll(combat.defenders);
  for (  Map.Entry<UUID,CombatGroup> group : combat.blockingGroups.entrySet()) {
    blockingGroups.put(group.getKey(),group.getValue());
  }
  this.useToughnessForDamage=combat.useToughnessForDamage;
  for (  Map.Entry<UUID,Set<UUID>> group : combat.numberCreaturesDefenderAttackedBy.entrySet()) {
    this.numberCreaturesDefenderAttackedBy.put(group.getKey(),group.getValue());
  }
  for (  Map.Entry<UUID,Set<UUID>> group : combat.creatureMustBlockAttackers.entrySet()) {
    this.creatureMustBlockAttackers.put(group.getKey(),group.getValue());
  }
  for (  Map.Entry<UUID,Set<UUID>> group : combat.creaturesForcedToAttack.entrySet()) {
    this.creaturesForcedToAttack.put(group.getKey(),group.getValue());
  }
  this.maxAttackers=combat.maxAttackers;
}
