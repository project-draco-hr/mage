{
  List<Card> booster=new ArrayList<Card>();
  if (!hasBoosters) {
    return booster;
  }
  CardCriteria criteria=new CardCriteria();
  criteria.setCodes(!hasBasicLands && parentSet != null ? parentSet.code : this.code).rarities(Rarity.LAND).doubleFaced(false);
  List<CardInfo> basicLand=CardRepository.instance.findCards(criteria);
  List<CardInfo> common=getCommon();
  criteria=new CardCriteria();
  criteria.setCodes(this.code).rarities(Rarity.UNCOMMON).doubleFaced(false);
  List<CardInfo> uncommon=CardRepository.instance.findCards(criteria);
  criteria=new CardCriteria();
  criteria.setCodes(this.code).rarities(Rarity.RARE).doubleFaced(false);
  List<CardInfo> rare=CardRepository.instance.findCards(criteria);
  criteria=new CardCriteria();
  criteria.setCodes(this.code).rarities(Rarity.MYTHIC).doubleFaced(false);
  List<CardInfo> mythic=CardRepository.instance.findCards(criteria);
  for (int i=0; i < numBoosterLands; i++) {
    addToBooster(booster,basicLand);
  }
  for (int i=0; i < numBoosterCommon; i++) {
    addToBooster(booster,common);
  }
  for (int i=0; i < numBoosterUncommon; i++) {
    addToBooster(booster,uncommon);
  }
  for (int i=0; i < numBoosterRare; i++) {
    if (ratioBoosterMythic > 0 && rnd.nextInt(ratioBoosterMythic) == 1) {
      addToBooster(booster,mythic);
    }
 else {
      addToBooster(booster,rare);
    }
  }
  if (numBoosterDoubleFaced > 0) {
    this.addDoubleFace(booster);
  }
  if (numBoosterSpecial > 0) {
    int specialCards=0;
    List<CardInfo> specialMythic=getSpecialMythic();
    if (specialMythic != null) {
      specialCards+=specialMythic.size();
    }
    List<CardInfo> specialRare=getSpecialRare();
    if (specialRare != null) {
      specialCards+=specialRare.size();
    }
    List<CardInfo> specialUncommon=getSpecialUncommon();
    if (specialUncommon != null) {
      specialCards+=specialUncommon.size();
    }
    List<CardInfo> specialCommon=getSpecialCommon();
    if (specialCommon != null) {
      specialCards+=specialCommon.size();
    }
    if (specialCards > 0) {
      for (int i=0; i < numBoosterSpecial; i++) {
        if (rnd.nextInt(15) < 10) {
          if (specialCommon != null) {
            addToBooster(booster,specialCommon);
          }
 else {
            i--;
          }
          continue;
        }
        if (rnd.nextInt(5) < 4) {
          if (specialUncommon != null) {
            addToBooster(booster,specialUncommon);
          }
 else {
            i--;
          }
          continue;
        }
        if (rnd.nextInt(8) < 7) {
          if (specialRare != null) {
            addToBooster(booster,specialRare);
          }
 else {
            i--;
          }
          continue;
        }
        if (specialMythic != null) {
          addToBooster(booster,specialMythic);
        }
 else {
          i--;
        }
      }
    }
  }
  return booster;
}
