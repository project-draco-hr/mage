{
  draftBooster.loadBooster(CardsViewUtil.convertSimple(draftPickView.getBooster()),bigCard);
  draftPicks.loadCards(CardsViewUtil.convertSimple(draftPickView.getPicks()),bigCard,null);
  this.draftBooster.clearCardEventListeners();
  this.draftBooster.addCardEventListener(new Listener<Event>(){
    @Override public void event(    Event event){
      if (event.getEventName().equals("pick-a-card")) {
        SimpleCardView source=(SimpleCardView)event.getSource();
        DraftPickView view=session.sendCardPick(draftId,source.getId());
        if (view != null) {
          draftBooster.loadBooster(emptyView,bigCard);
          draftPicks.loadCards(CardsViewUtil.convertSimple(view.getPicks()),bigCard,null);
          Plugins.getInstance().getActionCallback().hidePopup();
          setMessage("Waiting for other players");
        }
      }
    }
  }
);
  setMessage("Pick a card");
  countdown.stop();
  this.timeout=draftPickView.getTimeout();
  setTimeout(Integer.toString(timeout));
  if (timeout != 0) {
    countdown.start();
  }
}
