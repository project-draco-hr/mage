{
  if (line.startsWith("//")) {
    return;
  }
  if (line.length() == 0) {
    emptyLinesInARow++;
    if (emptyLinesInARow > 1) {
      sideboard=true;
    }
    return;
  }
 else {
    emptyLinesInARow=0;
  }
  if (line.toLowerCase().startsWith("sideboard")) {
    sideboard=true;
    return;
  }
  line=line.replace("\t"," ");
  int delim=line.indexOf(' ');
  if (delim < 0) {
    return;
  }
  String lineNum=line.substring(0,delim).trim();
  String lineName=line.substring(delim).replace("???","\'").trim();
  lineName=lineName.replace("&amp;","//").replace("?????","AE").replace("????","??");
  if (lineName.contains("//") && !lineName.contains(" // ")) {
    lineName=lineName.replace("//"," // ");
  }
  if (IGNORE_NAMES.contains(lineName)) {
    return;
  }
  try {
    int num=Integer.parseInt(lineNum);
    List<CardInfo> cards=CardRepository.instance.findCards(lineName);
    if (cards.isEmpty()) {
      sbMessage.append("Could not find card: '").append(lineName).append("' at line ").append(lineCount).append("\n");
    }
 else {
      Date lastReleaseDate=new GregorianCalendar(1900,1,1).getTime();
      CardInfo lastReleasedCard=null;
      for (      CardInfo cardinfo : cards) {
        ExpansionInfo set=ExpansionRepository.instance.getSetByCode(cardinfo.getSetCode());
        if (set != null) {
          if (lastReleaseDate == null || set.getReleaseDate().after(lastReleaseDate)) {
            lastReleasedCard=cardinfo;
            lastReleaseDate=set.getReleaseDate();
          }
        }
      }
      if (lastReleasedCard == null) {
        lastReleasedCard=cards.get(0);
      }
      for (int i=0; i < num; i++) {
        if (!sideboard) {
          deckList.getCards().add(new DeckCardInfo(lastReleasedCard.getName(),lastReleasedCard.getCardNumber(),lastReleasedCard.getSetCode()));
        }
 else {
          deckList.getSideboard().add(new DeckCardInfo(lastReleasedCard.getName(),lastReleasedCard.getCardNumber(),lastReleasedCard.getSetCode()));
        }
      }
    }
  }
 catch (  NumberFormatException nfe) {
    sbMessage.append("Invalid number: ").append(lineNum).append(" at line ").append(lineCount).append("\n");
  }
}
