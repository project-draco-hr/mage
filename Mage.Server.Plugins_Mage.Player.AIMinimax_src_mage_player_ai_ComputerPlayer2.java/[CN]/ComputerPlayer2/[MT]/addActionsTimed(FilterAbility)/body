{
  FutureTask<Integer> task=new FutureTask<Integer>(new Callable<Integer>(){
    public Integer call() throws Exception {
      return addActions(root,filter,Integer.MIN_VALUE,Integer.MAX_VALUE);
    }
  }
);
  pool.execute(task);
  try {
    task.get(Config.maxThinkSeconds,TimeUnit.SECONDS);
  }
 catch (  TimeoutException e) {
    logger.debug("simulating - timed out");
    task.cancel(true);
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ex) {
      logger.fatal("can't sleep");
    }
  }
catch (  ExecutionException e) {
    logger.fatal("Simulation error",e);
    task.cancel(true);
  }
catch (  InterruptedException e) {
    logger.fatal("Simulation interrupted",e);
    task.cancel(true);
  }
}
