{
  UUID opponentId=(UUID)this.getValue("PsychicSurgeryOpponent");
  Player player=game.getPlayer(source.getControllerId());
  Player opponent=game.getPlayer(opponentId);
  if (player != null && opponent != null) {
    Cards cards=new CardsImpl(Zone.PICK);
    int count=Math.min(player.getLibrary().size(),2);
    for (int i=0; i < count; i++) {
      Card card=opponent.getLibrary().removeFromTop(game);
      if (card != null) {
        cards.add(card);
      }
    }
    player.lookAtCards("Psychic Surgery",cards,game);
    if (!cards.isEmpty() && player.chooseUse(Outcome.Exile,"Do you wish to exile a card?",game)) {
      TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to exile"));
      if (player.choose(Outcome.Exile,cards,target,game)) {
        Card card=cards.get(target.getFirstTarget(),game);
        if (card != null) {
          cards.remove(card);
          card.moveToZone(Zone.EXILED,source.getId(),game,false);
        }
      }
    }
    TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to put on top of his library"));
    target.setRequired(true);
    while (cards.size() > 1) {
      player.choose(Outcome.Neutral,cards,target,game);
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.moveToZone(Zone.LIBRARY,source.getId(),game,true);
      }
      target.clearChosen();
    }
    if (cards.size() == 1) {
      Card card=cards.get(cards.iterator().next(),game);
      card.moveToZone(Zone.LIBRARY,source.getId(),game,true);
    }
    return true;
  }
  return false;
}
