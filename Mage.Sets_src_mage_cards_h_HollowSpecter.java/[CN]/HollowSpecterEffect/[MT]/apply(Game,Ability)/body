{
  Player targetPlayer=game.getPlayer(this.getTargetPointer().getFirst(game,source));
  Player controller=game.getPlayer(source.getControllerId());
  if (targetPlayer != null && controller != null && controller.chooseUse(Outcome.BoostCreature,"Do you want to to pay {X}?",source,game)) {
    int costX=controller.announceXMana(0,Integer.MAX_VALUE,"Announce the value for {X}",game,source);
    Cost cost=new GenericManaCost(costX);
    int amountToReveal=costX;
    Cards revealedCards=new CardsImpl();
    if (cost.pay(source,game,source.getSourceId(),source.getControllerId(),false,null)) {
      if (amountToReveal > 0 && targetPlayer.getHand().size() > amountToReveal) {
        Cards cardsInHand=new CardsImpl();
        cardsInHand.addAll(targetPlayer.getHand());
        TargetCard target=new TargetCard(amountToReveal,Zone.HAND,new FilterCard());
        if (targetPlayer.choose(Outcome.Discard,cardsInHand,target,game)) {
          List<UUID> targets=target.getTargets();
          for (          UUID targetId : targets) {
            Card card=game.getCard(targetId);
            if (card != null) {
              revealedCards.add(card);
            }
          }
        }
      }
 else {
        revealedCards.addAll(targetPlayer.getHand());
      }
      TargetCard targetInHand=new TargetCard(Zone.HAND,new FilterCard("card to discard"));
      if (!revealedCards.isEmpty()) {
        targetPlayer.revealCards("Hollow Specter",revealedCards,game);
        Card card=null;
        if (revealedCards.size() > 1) {
          controller.choose(Outcome.Discard,revealedCards,targetInHand,game);
          card=revealedCards.get(targetInHand.getFirstTarget(),game);
        }
 else {
          card=revealedCards.getRandom(game);
        }
        if (card != null) {
          targetPlayer.discard(card,source,game);
        }
      }
    }
    return true;
  }
  return false;
}
