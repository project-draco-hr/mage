{
  ThreadUtils.threadPool2.submit(new Runnable(){
    @Override public void run(){
      ThreadUtils.sleep(tooltipDelay);
      if (tooltipCard == null || !tooltipCard.equals(data.card) || session == null || !popupTextWindowOpen || !enlargedWindowState.equals(EnlargedWindowState.CLOSED)) {
        return;
      }
      try {
        final Component popupContainer=MageFrame.getUI().getComponent(MageComponents.POPUP_CONTAINER);
        Component popup2=MageFrame.getUI().getComponent(MageComponents.CARD_INFO_PANE);
        ((CardInfoPane)popup2).setCard(data.card,popupContainer);
        showPopup(popupContainer,popup2);
      }
 catch (      InterruptedException e) {
        LOGGER.warn(e.getMessage());
      }
    }
    public void showPopup(    final Component popupContainer,    final Component infoPane) throws InterruptedException {
      final Component c=MageFrame.getUI().getComponent(MageComponents.DESKTOP_PANE);
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          if (!popupTextWindowOpen || !enlargedWindowState.equals(EnlargedWindowState.CLOSED)) {
            return;
          }
          if (data.locationOnScreen == null) {
            data.locationOnScreen=data.component.getLocationOnScreen();
          }
          Point location=new Point((int)data.locationOnScreen.getX() + data.popupOffsetX - 40,(int)data.locationOnScreen.getY() + data.popupOffsetY - 40);
          location=GuiDisplayUtil.keepComponentInsideParent(location,parentPoint,infoPane,parentComponent);
          location.translate(-parentPoint.x,-parentPoint.y);
          popupContainer.setLocation(location);
          popupContainer.setVisible(true);
          c.repaint();
        }
      }
);
    }
  }
);
}
