{
  Player controller=game.getPlayer(source.getControllerId());
  Player targetPlayer=game.getPlayer(source.getFirstTarget());
  Card sourceCard=game.getCard(source.getSourceId());
  if (controller != null && targetPlayer != null && sourceCard != null) {
    Cards cardsInHand=new CardsImpl();
    cardsInHand.addAll(targetPlayer.getHand());
    int count=Math.min(cardsInHand.size(),3);
    TargetCard target=new TargetCard(count,Zone.HAND,new FilterCard());
    Cards revealedCards=new CardsImpl();
    if (targetPlayer.chooseTarget(Outcome.Discard,cardsInHand,target,source,game)) {
      List<UUID> targets=target.getTargets();
      for (      UUID targetId : targets) {
        Card card=game.getCard(targetId);
        if (card != null) {
          revealedCards.add(card);
        }
      }
    }
    int cardsToDiscard=Math.min(revealedCards.size(),2);
    TargetCard targetInHand=new TargetCard(cardsToDiscard,cardsToDiscard,Zone.HAND,new FilterCard("card to discard"));
    if (!revealedCards.isEmpty()) {
      targetPlayer.revealCards("Noggin Whack",revealedCards,game);
      controller.chooseTarget(Outcome.Exile,revealedCards,targetInHand,source,game);
      for (      UUID cardId : (List<UUID>)targetInHand.getTargets()) {
        Card card=game.getCard(cardId);
        if (card != null) {
          card.moveToZone(Zone.GRAVEYARD,source.getSourceId(),game,true);
          game.informPlayers(new StringBuilder(sourceCard.getName()).append(": Discarded card ").append(card.getName()).toString());
        }
      }
    }
    return true;
  }
  return false;
}
