{
  int tableFontSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_TABLE_FONT_SIZE,14);
  tableFont=new java.awt.Font("Arial",0,tableFontSize);
  tableRowHeight=tableFontSize + 4;
  tableHeaderHeight=tableFontSize + 10;
  symbolTableSize=tableFontSize;
  flagHeight=tableFontSize - 2;
  balloonTooltipFont=new Font("Arial",0,tableFontSize);
  if (tableFontSize > 15) {
    symbolEditorSize=tableFontSize - 5;
    dividerBarSize=10 + (tableFontSize / 4);
    scrollBarSize=14 + (tableFontSize / 4);
  }
 else {
    symbolEditorSize=tableFontSize;
    dividerBarSize=10;
    scrollBarSize=14;
  }
  int dialogFontSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_DIALOG_FONT_SIZE,14);
  menuFont=new Font("Arial",0,dialogFontSize);
  gameRequestsFont=new Font("Arial",0,dialogFontSize);
  int feedbackFontSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_FEEDBACK_AREA_SIZE,14);
  gameDialogAreaFontSizeBig=feedbackFontSize;
  gameDialogAreaFontSizeTooltip=feedbackFontSize - 2;
  gameDialogAreaFontSizeSmall=(feedbackFontSize / 2) + 2;
  gameDialogAreaTextHeight=GUISizeHelper.gameDialogAreaFontSizeBig + GUISizeHelper.gameDialogAreaFontSizeSmall + 30;
  gameDialogAreaButtonHigh=feedbackFontSize;
  gameDialogAreaFont=new Font("Arial",0,feedbackFontSize);
  gameDialogButtonHeight=feedbackFontSize + 6;
  gameDialogButtonWidth=feedbackFontSize * 2 + 40;
  symbolDialogSize=feedbackFontSize;
  int chatFontSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CHAT_FONT_SIZE,14);
  chatFont=new java.awt.Font("Arial",0,chatFontSize);
  symbolChatSize=chatFontSize;
  cardTooltipFontSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_TOOLTIP_SIZE,14);
  symbolTooltipSize=cardTooltipFontSize;
  int handCardSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_HAND_SIZE,14);
  handCardDimension=new Dimension(CARD_IMAGE_WIDTH * handCardSize / 42,CARD_IMAGE_HEIGHT * handCardSize / 42);
  stackWidth=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_STACK_WIDTH,30);
  int otherZonesCardSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_OTHER_ZONES_SIZE,14);
  otherZonesCardDimension=new Dimension(CARD_IMAGE_WIDTH * otherZonesCardSize / 42,CARD_IMAGE_HEIGHT * otherZonesCardSize / 42);
  if (PreferencesDialog.getCachedValue(PreferencesDialog.KEY_CARD_RENDERING_FALLBACK,"false").equals("false")) {
    otherZonesCardVerticalOffset=CardRenderer.getCardTopHeight(otherZonesCardDimension.width);
  }
 else {
    if (otherZonesCardSize > 29) {
      otherZonesCardVerticalOffset=otherZonesCardDimension.height / 8;
    }
 else {
      otherZonesCardVerticalOffset=otherZonesCardDimension.height / 10;
    }
  }
  int battlefieldCardMinSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_BATTLEFIELD_MIN_SIZE,10);
  battlefieldCardMinDimension=new Dimension(CARD_IMAGE_WIDTH * battlefieldCardMinSize / 42,CARD_IMAGE_HEIGHT * battlefieldCardMinSize / 42);
  int battlefieldCardMaxSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_BATTLEFIELD_MAX_SIZE,14);
  battlefieldCardMaxDimension=new Dimension(CARD_IMAGE_WIDTH * battlefieldCardMaxSize / 42,CARD_IMAGE_HEIGHT * battlefieldCardMaxSize / 42);
  int editorCardSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_EDITOR_SIZE,14);
  editorCardDimension=new Dimension(CARD_IMAGE_WIDTH * editorCardSize / 42,CARD_IMAGE_HEIGHT * editorCardSize / 42);
  if (PreferencesDialog.getCachedValue(PreferencesDialog.KEY_CARD_RENDERING_FALLBACK,"false").equals("false")) {
    editorCardOffsetSize=CardRenderer.getCardTopHeight(editorCardDimension.width);
  }
 else {
    editorCardOffsetSize=2 * PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_CARD_OFFSET_SIZE,14) - 10;
  }
  enlargedImageHeight=25 * PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GUI_ENLARGED_IMAGE_SIZE,20);
}
