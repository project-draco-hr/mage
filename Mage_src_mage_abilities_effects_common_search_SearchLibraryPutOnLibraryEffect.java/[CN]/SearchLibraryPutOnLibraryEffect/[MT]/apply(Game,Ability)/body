{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=game.getObject(source.getSourceId());
  if (controller == null || sourceObject == null) {
    return false;
  }
  if (controller.searchLibrary(target,game)) {
    List<Card> cards=new ArrayList<>();
    for (    UUID cardId : (List<UUID>)target.getTargets()) {
      Card card=controller.getLibrary().remove(cardId,game);
      if (card != null) {
        cards.add(card);
      }
    }
    Cards foundCards=new CardsImpl();
    foundCards.addAll(cards);
    if (reveal) {
      controller.revealCards(sourceObject.getLogName(),foundCards,game);
    }
    if (forceShuffle) {
      controller.shuffleLibrary(game);
    }
    if (cards.size() > 0) {
      game.informPlayers(controller.getName() + " moves " + cards.size()+ " card"+ (cards.size() == 1 ? " " : "s ")+ "on top of his or her library");
    }
    for (    Card card : cards) {
      card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,true);
    }
    return true;
  }
  if (forceShuffle) {
    controller.shuffleLibrary(game);
  }
  return false;
}
