{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    List<Card> cardsToManifest=new ArrayList<>(2);
    Permanent sourcePermanent=game.getPermanent(source.getSourceId());
    Card sourceCard=game.getCard(source.getSourceId());
    if (sourcePermanent != null && sourceCard != null) {
      controller.moveCardToExileWithInfo(sourcePermanent,sourcePermanent.getId(),sourcePermanent.getIdName(),source.getSourceId(),game,Zone.BATTLEFIELD,true);
      cardsToManifest.add(sourceCard);
    }
    if (sourcePermanent != null && controller.getLibrary().size() > 0) {
      Card cardFromLibrary=controller.getLibrary().removeFromTop(game);
      controller.moveCardToExileWithInfo(cardFromLibrary,sourcePermanent.getId(),sourcePermanent.getIdName(),source.getSourceId(),game,Zone.LIBRARY,true);
      cardsToManifest.add(cardFromLibrary);
    }
    Collections.shuffle(cardsToManifest);
    game.fireUpdatePlayersEvent();
    Ability newSource=source.copy();
    newSource.setWorksFaceDown(true);
    for (    Card card : cardsToManifest) {
      ManaCosts manaCosts=null;
      if (card.getCardType().contains(CardType.CREATURE)) {
        manaCosts=card.getSpellAbility().getManaCosts();
        if (manaCosts == null) {
          manaCosts=new ManaCostsImpl("{0}");
        }
      }
      MageObjectReference objectReference=new MageObjectReference(card.getId(),card.getZoneChangeCounter(game) + 1,game);
      game.addEffect(new BecomesFaceDownCreatureEffect(manaCosts,objectReference,Duration.Custom,FaceDownType.MANIFESTED),newSource);
    }
    Set<Card> toBattlefield=new LinkedHashSet();
    toBattlefield.addAll(cardsToManifest);
    controller.moveCards(toBattlefield,Zone.BATTLEFIELD,source,game,false,true,false,null);
    return true;
  }
  return false;
}
