{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    ChoiceColorOrArtifact choice=new ChoiceColorOrArtifact();
    while (!choice.isChosen()) {
      if (!controller.canRespond()) {
        return false;
      }
      controller.choose(outcome,choice,game);
    }
    FilterCard protectionFilter=new FilterCard();
    if (choice.isArtifactSelected()) {
      protectionFilter.add(new CardTypePredicate(CardType.ARTIFACT));
    }
 else {
      protectionFilter.add(new ColorPredicate(choice.getColor()));
    }
    protectionFilter.setMessage(choice.getChoice());
    ProtectionAbility protectionAbility=new ProtectionAbility(protectionFilter);
    ContinuousEffect effect=new GainAbilitySourceEffect(protectionAbility,Duration.EndOfTurn);
    game.addEffect(effect,source);
    return true;
  }
  return false;
}
