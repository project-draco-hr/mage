{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=source.getSourceObject(game);
  if (controller != null && sourceObject != null) {
    if (controller.getLibrary().size() > 0) {
      Card card=controller.getLibrary().getFromTop(game);
      if (card == null) {
        return false;
      }
      controller.revealCards(sourceObject.getIdName(),new CardsImpl(card),game);
      if (card.getCardType().contains(CardType.CREATURE)) {
        FilterControlledCreaturePermanent filter=new FilterControlledCreaturePermanent();
        boolean found=false;
        for (        Permanent permanent : game.getBattlefield().getAllActivePermanents(filter,controller.getId(),game)) {
          if (CardUtil.shareSubtypes(card,permanent,game)) {
            found=true;
            break;
          }
        }
        if (found) {
          game.informPlayers(sourceObject.getLogName() + ": Found a creature that shares a creature type with the revealed card.");
          if (controller.chooseUse(Outcome.Benefit,"Cast the card?",source,game)) {
            controller.cast(card.getSpellAbility(),game,true);
          }
 else {
            game.informPlayers(sourceObject.getLogName() + ": " + controller.getLogName()+ " canceled casting the card.");
            controller.getLibrary().putOnBottom(card,game);
          }
        }
 else {
          game.informPlayers(sourceObject.getLogName() + ": No creature that shares a creature type with the revealed card.");
          controller.getLibrary().putOnBottom(card,game);
        }
      }
 else {
        game.informPlayers(sourceObject.getLogName() + ": Put " + card.getLogName()+ " on the bottom.");
        controller.getLibrary().putOnBottom(card,game);
      }
      return true;
    }
  }
  return false;
}
