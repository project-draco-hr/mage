{
  boolean canBeKilledByOne=false;
  boolean canKillAll=true;
  boolean canKillAllDangerous=true;
  boolean isWorthLessThanAllKillers=true;
  boolean canBeBlocked=false;
  int numberOfPossibleBlockers=0;
  int life=game.getPlayer(defenderId).getLife();
  int poison=game.getPlayer(defenderId).getCounters().getCount(CounterType.POISON);
  if (!isEffectiveAttacker(game,attackingPlayerId,defenderId,attacker,life,poison)) {
    return false;
  }
  for (  Permanent defender : blockers) {
    if (defender.canBlock(attacker.getId(),game)) {
      numberOfPossibleBlockers+=1;
      SurviveInfo info=CombatUtil.willItSurvive(game,attackingPlayerId,defenderId,attacker,defender);
      if (info.isAttackerDied()) {
        boolean canBeReallyKilled=true;
        for (        Ability ability : attacker.getAbilities()) {
          if (ability instanceof UndyingAbility) {
            if (attacker.getCounters().getCount(CounterType.P1P1) == 0) {
              canBeReallyKilled=false;
            }
          }
        }
        if (canBeReallyKilled) {
          canBeKilledByOne=true;
          if (GameStateEvaluator2.evaluateCreature(defender,game) <= GameStateEvaluator2.evaluateCreature(attacker,game)) {
            isWorthLessThanAllKillers=false;
          }
        }
      }
      if (info.isBlockerDied()) {
        canKillAll=false;
        if (defender.getAbilities().contains(WitherAbility.getInstance()) || defender.getAbilities().contains(InfectAbility.getInstance())) {
          canKillAllDangerous=false;
        }
      }
    }
  }
  if (canKillAll && !CombatUtil.canBlock(game,attacker) && isWorthLessThanAllKillers) {
    System.out.println(attacker.getName() + " = attacking because they can't block, expecting to kill or damage player");
    return true;
  }
  if (numberOfPossibleBlockers >= 1) {
    canBeBlocked=true;
  }
switch (aggressionRate) {
case 4:
    if (canKillAll || (canKillAllDangerous && !canBeKilledByOne) || !canBeBlocked) {
      System.out.println(attacker.getName() + " = attacking expecting to at least trade with something");
      return true;
    }
case 3:
  if ((canKillAll && isWorthLessThanAllKillers) || (canKillAllDangerous && !canBeKilledByOne) || !canBeBlocked) {
    System.out.println(attacker.getName() + " = attacking expecting to kill creature or cause damage, or is unblockable");
    return true;
  }
case 2:
if ((canKillAll && !canBeKilledByOne) || !canBeBlocked) {
  System.out.println(attacker.getName() + " = attacking expecting to survive or attract group block");
  return true;
}
case 1:
if (!canBeBlocked) {
System.out.println(attacker.getName() + " = attacking expecting not to be blocked");
return true;
}
default :
break;
}
return false;
}
