{
  if (action instanceof PassAbility)   return false;
  int newVal=GameStateEvaluator2.evaluate(playerId,sim);
  SimulationNode2 test=node.getParent();
  while (test != null) {
    if (test.getPlayerId().equals(playerId)) {
      if (test.getAbilities() != null && test.getAbilities().size() == 1) {
        if (action.toString().equals(test.getAbilities().get(0).toString())) {
          if (test.getParent() != null) {
            Game prevGame=node.getGame();
            if (prevGame != null) {
              int oldVal=GameStateEvaluator2.evaluate(playerId,prevGame);
              if (oldVal >= newVal) {
                return true;
              }
            }
          }
        }
      }
    }
    test=test.getParent();
  }
  return false;
}
