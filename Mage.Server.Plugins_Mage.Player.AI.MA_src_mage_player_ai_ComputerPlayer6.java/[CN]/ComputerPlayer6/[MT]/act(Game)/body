{
  if (actions == null || actions.size() == 0) {
    pass();
  }
 else {
    boolean usedStack=false;
    while (actions.peek() != null) {
      Ability ability=actions.poll();
      logger.info(new StringBuilder("Act -------------> [").append(game.getPlayer(playerId).getName()).append("] Action: ").append(ability.toString()).toString());
      if (ability.getTargets().size() > 0) {
        for (        Target target : ability.getTargets()) {
          for (          UUID id : target.getTargets()) {
            target.updateTarget(id,game);
          }
        }
        Player player=game.getPlayer(ability.getFirstTarget());
        if (player != null) {
          logger.info("targets = " + player.getName());
        }
      }
      this.activateAbility((ActivatedAbility)ability,game);
      if (ability.isUsesStack()) {
        usedStack=true;
      }
      if (!suggested.isEmpty() && !(ability instanceof PassAbility)) {
        Iterator<String> it=suggested.iterator();
        while (it.hasNext()) {
          Card card=game.getCard(ability.getSourceId());
          String action=it.next();
          logger.info("action=" + action + ";card="+ card);
          if (action.equals(card.getName())) {
            logger.info("removed from suggested=" + action);
            it.remove();
          }
        }
      }
    }
    if (usedStack) {
      pass();
    }
  }
}
