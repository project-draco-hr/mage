{
  Random random=new Random();
  Set<String> landSets=new HashSet<String>();
  for (  String setCode : deck.getExpansionSetCodes()) {
    ExpansionInfo expansionInfo=ExpansionRepository.instance.getSetByCode(setCode);
    if (expansionInfo.hasBasicLands()) {
      landSets.add(expansionInfo.getCode());
    }
  }
  if (landSets.isEmpty()) {
    for (    String setCode : deck.getExpansionSetCodes()) {
      ExpansionInfo expansionInfo=ExpansionRepository.instance.getSetByCode(setCode);
      ExpansionInfo[] blockSets=ExpansionRepository.instance.getSetsFromBlock(expansionInfo.getBlockName());
      for (      ExpansionInfo blockSet : blockSets) {
        if (blockSet.hasBasicLands()) {
          landSets.add(blockSet.getCode());
        }
      }
    }
  }
  if (landSets.isEmpty()) {
    Random generator=new Random();
    List<ExpansionInfo> basicLandSets=ExpansionRepository.instance.getSetsWithBasicLandsByReleaseDate();
    if (basicLandSets.size() > 0) {
      landSets.add(basicLandSets.get(generator.nextInt(basicLandSets.size())).getCode());
    }
  }
  if (landSets.isEmpty()) {
    throw new IllegalArgumentException("No set with basic land was found");
  }
  CardCriteria criteria=new CardCriteria();
  if (!landSets.isEmpty()) {
    criteria.setCodes(landSets.toArray(new String[landSets.size()]));
  }
  criteria.rarities(Rarity.LAND).name(landName);
  List<CardInfo> cards=CardRepository.instance.findCards(criteria);
  if (cards.isEmpty()) {
    return;
  }
  for (int i=0; i < number; i++) {
    Card land=cards.get(random.nextInt(cards.size())).getCard();
    deck.getCards().add(land);
  }
}
