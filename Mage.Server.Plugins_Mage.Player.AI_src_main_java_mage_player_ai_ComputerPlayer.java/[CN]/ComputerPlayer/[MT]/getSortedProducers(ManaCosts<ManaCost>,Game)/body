{
  List<Permanent> unsorted=this.getAvailableManaProducers(game);
  unsorted.addAll(this.getAvailableManaProducersWithCost(game));
  Map<Permanent,Integer> scored=new HashMap<>();
  for (  Permanent permanent : unsorted) {
    int score=0;
    for (    ManaCost cost : unpaid) {
      Abilities:       for (      ManaAbility ability : permanent.getAbilities().getAvailableManaAbilities(Zone.BATTLEFIELD,game)) {
        for (        Mana netMana : ability.getNetMana(game)) {
          if (cost.testPay(netMana)) {
            score++;
            break Abilities;
          }
        }
      }
    }
    if (score > 0) {
      score+=permanent.getAbilities().getAvailableManaAbilities(Zone.BATTLEFIELD,game).size();
      score+=permanent.getAbilities().getActivatedAbilities(Zone.BATTLEFIELD).size();
      if (!permanent.getCardType().contains(CardType.LAND)) {
        score+=2;
      }
 else       if (permanent.getCardType().contains(CardType.CREATURE)) {
        score+=2;
      }
    }
    scored.put(permanent,score);
  }
  return sortByValue(scored);
}
