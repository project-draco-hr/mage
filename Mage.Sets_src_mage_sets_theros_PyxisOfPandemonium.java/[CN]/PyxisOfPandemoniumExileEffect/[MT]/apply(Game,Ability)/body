{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    Map<String,UUID> exileIds;
    String valueKey=CardUtil.getCardZoneString("exileIds",source.getSourceId(),game);
    Object object=game.getState().getValue(valueKey);
    if (object != null && object instanceof Map) {
      exileIds=(Map<String,UUID>)object;
    }
 else {
      exileIds=new HashMap<>();
      game.getState().setValue(valueKey,exileIds);
    }
    for (    UUID playerId : controller.getInRange()) {
      Player player=game.getPlayer(playerId);
      if (player != null) {
        if (player.getLibrary().size() > 0) {
          Card card=player.getLibrary().removeFromTop(game);
          String exileKey=new StringBuilder(playerId.toString()).append(CardUtil.getCardExileZoneId(game,source)).toString();
          UUID exileId=exileIds.get(exileKey);
          if (exileId == null) {
            exileId=UUID.randomUUID();
            exileIds.put(exileKey,exileId);
          }
          card.setFaceDown(true);
          player.moveCardToExileWithInfo(card,exileId,new StringBuilder("Pyxis of Pandemonium (").append(player.getName()).append(")").toString(),source.getSourceId(),game,Zone.LIBRARY);
        }
      }
    }
    return true;
  }
  return false;
}
