{
  if (logger.isLoggable(Level.FINE))   logger.fine("chooseTarget: " + outcome.toString() + ":"+ target.toString());
  UUID opponentId=game.getOpponents(playerId).iterator().next();
  if (target instanceof TargetPlayer) {
    if (outcome.isGood()) {
      if (target.canTarget(playerId,game)) {
        target.add(playerId,game);
        return true;
      }
    }
 else {
      if (target.canTarget(playerId,game)) {
        target.add(opponentId,game);
        return true;
      }
    }
  }
  if (target instanceof TargetDiscard) {
    findPlayables(game);
    if (unplayable.size() > 0) {
      for (int i=unplayable.size() - 1; i >= 0; i--) {
        if (target.canTarget(unplayable.values().toArray(new Card[0])[i].getId(),game)) {
          target.add(unplayable.values().toArray(new Card[0])[i].getId(),game);
          return true;
        }
      }
    }
    if (hand.size() > 0) {
      if (target.canTarget(hand.toArray(new UUID[0])[0],game)) {
        target.add(hand.toArray(new UUID[0])[0],game);
        return true;
      }
    }
  }
  if (target instanceof TargetControlledPermanent) {
    List<Permanent> targets;
    targets=threats(playerId,((TargetControlledPermanent)target).getFilter(),game);
    if (!outcome.isGood())     Collections.reverse(targets);
    for (    Permanent permanent : targets) {
      if (((TargetControlledPermanent)target).canTarget(playerId,permanent.getId(),null,game) && !target.getTargets().contains(permanent.getId())) {
        target.add(permanent.getId(),game);
        return true;
      }
    }
  }
  if (target instanceof TargetPermanent) {
    List<Permanent> targets;
    if (outcome.isGood()) {
      targets=threats(playerId,((TargetPermanent)target).getFilter(),game);
    }
 else {
      targets=threats(opponentId,((TargetPermanent)target).getFilter(),game);
    }
    for (    Permanent permanent : targets) {
      if (((TargetPermanent)target).canTarget(playerId,permanent.getId(),null,game) && !target.getTargets().contains(permanent.getId())) {
        target.add(permanent.getId(),game);
        return true;
      }
    }
  }
  return false;
}
