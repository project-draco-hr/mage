{
  Player controller=game.getPlayer(source.getControllerId());
  Card sourceCard=game.getCard(source.getSourceId());
  Map<UUID,Integer> payLife=new HashMap<>();
  int currentLifePaid;
  int totalPaidLife;
  if (controller != null) {
    PlayerList playerList=game.getState().getPlayerList().copy();
    while (!playerList.get().equals(source.getControllerId()) && controller.canRespond()) {
      playerList.getNext();
    }
    Player currentPlayer=game.getPlayer(playerList.get());
    UUID firstInactivePlayer=null;
    while (controller.canRespond()) {
      if (firstInactivePlayer == null) {
        firstInactivePlayer=currentPlayer.getId();
      }
      if (currentPlayer != null && currentPlayer.canRespond() && game.getState().getPlayersInRange(controller.getId(),game).contains(currentPlayer.getId())) {
        currentLifePaid=0;
        totalPaidLife=0;
        if (currentPlayer.chooseUse(Outcome.AIDontUseIt,"Pay life?",source,game)) {
          totalPaidLife=currentPlayer.getAmount(0,controller.getLife(),"Pay how many life?",game);
          if (totalPaidLife > 0) {
            currentPlayer.loseLife(totalPaidLife,game);
            if (payLife.get(currentPlayer.getId()) == null) {
              payLife.put(currentPlayer.getId(),totalPaidLife);
            }
 else {
              currentLifePaid=payLife.get(currentPlayer.getId());
              payLife.put(currentPlayer.getId(),currentLifePaid + totalPaidLife);
            }
          }
          game.informPlayers(new StringBuilder(sourceCard.getName()).append(": ").append(currentPlayer.getLogName()).append(" pays ").append(payLife.get(currentPlayer.getId())).append(" life").toString());
          firstInactivePlayer=null;
        }
      }
      playerList.getNext();
      currentPlayer=game.getPlayer(playerList.get());
      if (currentPlayer.getId().equals(firstInactivePlayer)) {
        break;
      }
    }
    RatToken token=new RatToken();
    for (    Map.Entry<UUID,Integer> entry : payLife.entrySet()) {
      Player player=game.getPlayer(entry.getKey());
      if (player != null) {
        token.putOntoBattlefield(entry.getValue(),game,source.getSourceId(),player.getId());
      }
    }
  }
  return true;
}
