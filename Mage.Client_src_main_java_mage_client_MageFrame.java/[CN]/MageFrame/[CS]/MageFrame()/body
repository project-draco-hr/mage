{
  setTitle("Mage, version 0.5.1");
  EDTExceptionHandler.registerExceptionHandler();
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      exitApp();
    }
  }
);
  try {
    UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
  }
 catch (  Exception ex) {
    logger.log(Level.SEVERE,null,ex);
  }
  Plugins.getInstance().loadPlugins();
  initComponents();
  setSize(1024,768);
  this.setExtendedState(JFrame.MAXIMIZED_BOTH);
  session=new Session(this);
  connectDialog=new ConnectDialog();
  combat=new CombatDialog();
  pickNumber=new PickNumberDialog();
  desktopPane.add(connectDialog,JLayeredPane.POPUP_LAYER);
  desktopPane.add(combat,JLayeredPane.POPUP_LAYER);
  combat.hideDialog();
  desktopPane.add(pickNumber,JLayeredPane.POPUP_LAYER);
  session.getUI().addComponent(MageComponents.DESKTOP_PANE,desktopPane);
  JComponent cardInfoPane=Plugins.getInstance().getCardInfoPane();
  cardInfoPane.setSize(161,221);
  cardInfoPane.setPreferredSize(new Dimension(161,221));
  cardInfoPane.setVisible(false);
  session.getUI().addComponent(MageComponents.CARD_INFO_PANE,cardInfoPane);
  desktopPane.add(cardInfoPane,JLayeredPane.POPUP_LAYER);
  String filename="/background.jpg";
  try {
    if (Plugins.getInstance().isThemePluginLoaded()) {
      Map<String,JComponent> ui=new HashMap<String,JComponent>();
      backgroundPane=(ImagePanel)Plugins.getInstance().updateTablePanel(ui);
    }
 else {
      InputStream is=this.getClass().getResourceAsStream(filename);
      BufferedImage background=ImageIO.read(is);
      backgroundPane=new ImagePanel(background,ImagePanel.SCALED);
    }
    backgroundPane.setSize(1024,768);
    desktopPane.add(backgroundPane,JLayeredPane.DEFAULT_LAYER);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  filename="/label-mage.png";
  try {
    InputStream is=this.getClass().getResourceAsStream(filename);
    float ratio=1179.0f / 678.0f;
    titleRectangle=new Rectangle(640,(int)(640 / ratio));
    if (is != null) {
      BufferedImage image=ImageIO.read(is);
      title=new JLabel();
      title.setIcon(new ImageIcon(image));
      backgroundPane.setLayout(null);
      backgroundPane.add(title);
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  filename="/icon-mage.png";
  try {
    InputStream is=this.getClass().getResourceAsStream(filename);
    if (is != null) {
      BufferedImage image=ImageIO.read(is);
      setIconImage(image);
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  desktopPane.add(ArrowBuilder.getArrowsPanel(),JLayeredPane.DRAG_LAYER);
  desktopPane.addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      int width=((JComponent)e.getSource()).getWidth();
      int height=((JComponent)e.getSource()).getHeight();
      backgroundPane.setSize(width,height);
      JPanel arrowsPanel=ArrowBuilder.getArrowsPanelRef();
      if (arrowsPanel != null)       arrowsPanel.setSize(width,height);
      if (title != null) {
        title.setBounds((int)(width - titleRectangle.getWidth()) / 2,(int)(height - titleRectangle.getHeight()) / 2,titleRectangle.width,titleRectangle.height);
      }
    }
  }
);
  if (Plugins.getInstance().isCardPluginLoaded()) {
    Separator separator=new javax.swing.JToolBar.Separator();
    mageToolbar.add(separator);
    JButton btnDownloadSymbols=new JButton("Symbols");
    btnDownloadSymbols.setBorder(javax.swing.BorderFactory.createEmptyBorder(1,1,1,1));
    btnDownloadSymbols.setFocusable(false);
    btnDownloadSymbols.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnDownloadSymbols.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnDownloadSymbols.addActionListener(new java.awt.event.ActionListener(){
      public void actionPerformed(      java.awt.event.ActionEvent evt){
        btnSymbolsActionPerformed(evt);
      }
    }
);
    mageToolbar.add(btnDownloadSymbols);
    separator=new javax.swing.JToolBar.Separator();
    mageToolbar.add(separator);
    JButton btnDownload=new JButton("Images");
    btnDownload.setBorder(javax.swing.BorderFactory.createEmptyBorder(1,1,1,1));
    btnDownload.setFocusable(false);
    btnDownload.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnDownload.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnDownload.addActionListener(new java.awt.event.ActionListener(){
      public void actionPerformed(      java.awt.event.ActionEvent evt){
        btnImagesActionPerformed(evt);
      }
    }
);
    mageToolbar.add(btnDownload);
  }
  if (Plugins.getInstance().isCounterPluginLoaded()) {
    int i=Plugins.getInstance().getGamesPlayed();
    JLabel label=new JLabel("  Games played: " + String.valueOf(i));
    desktopPane.add(label,JLayeredPane.DEFAULT_LAYER + 1);
    label.setVisible(true);
    label.setForeground(Color.white);
    label.setBounds(0,0,180,30);
  }
  session.getUI().addButton(MageComponents.TABLES_MENU_BUTTON,btnGames);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      if (autoConnect())       enableButtons();
 else       disableButtons();
    }
  }
);
}
