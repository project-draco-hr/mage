{
  System.setProperty("java.util.Arrays.useLegacyMergeSort","true");
  LOGGER.info("Starting MAGE client version " + VERSION);
  LOGGER.info("Logging level: " + LOGGER.getEffectiveLevel());
  startTime=System.currentTimeMillis();
  Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
    @Override public void uncaughtException(    Thread t,    Throwable e){
      LOGGER.fatal(null,e);
    }
  }
);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      for (      String arg : args) {
        if (arg.startsWith(LITE_MODE_ARG)) {
          liteMode=true;
        }
        if (arg.startsWith(GRAY_MODE_ARG)) {
          grayMode=true;
        }
        if (arg.startsWith(FILL_SCREEN_ARG)) {
          fullscreenMode=true;
        }
      }
      if (!liteMode) {
        final SplashScreen splash=SplashScreen.getSplashScreen();
        if (splash != null) {
          Graphics2D g=splash.createGraphics();
          if (g != null) {
            renderSplashFrame(g);
          }
          splash.update();
        }
      }
      instance=new MageFrame();
      instance.setVisible(true);
    }
  }
);
}
