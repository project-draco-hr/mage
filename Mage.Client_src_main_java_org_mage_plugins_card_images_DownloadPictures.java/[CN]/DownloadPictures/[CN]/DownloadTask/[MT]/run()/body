{
  try {
    File temporaryFile=new File(Constants.IO.imageBaseDir + File.separator + card.hashCode()+ "."+ card.getName()+ ".jpg");
    String imagePath=CardImageUtils.getImagePath(card,imagesPath);
    TFile outputFile=new TFile(imagePath);
    if (!outputFile.exists()) {
      outputFile.getParentFile().mkdirs();
    }
    File existingFile=new File(imagePath.replaceFirst("\\w{3}.zip",""));
    if (existingFile.exists()) {
      new TFile(existingFile).cp_rp(outputFile);
synchronized (sync) {
        update(cardIndex + 1);
      }
      existingFile.delete();
      File parent=existingFile.getParentFile();
      if (parent != null && parent.isDirectory() && parent.list().length == 0) {
        parent.delete();
      }
      return;
    }
    BufferedInputStream in=new BufferedInputStream(url.openConnection(p).getInputStream());
    BufferedOutputStream out=new BufferedOutputStream(new TFileOutputStream(temporaryFile));
    byte[] buf=new byte[1024];
    int len;
    while ((len=in.read(buf)) != -1) {
      if (cancel) {
        in.close();
        out.flush();
        out.close();
        temporaryFile.delete();
        return;
      }
      out.write(buf,0,len);
    }
    in.close();
    out.flush();
    out.close();
    if (card.isTwoFacedCard()) {
      BufferedImage image=ImageIO.read(temporaryFile);
      if (image.getHeight() == 470) {
        BufferedImage renderedImage=new BufferedImage(265,370,BufferedImage.TYPE_INT_RGB);
        renderedImage.getGraphics();
        Graphics2D graphics2D=renderedImage.createGraphics();
        if (card.isTwoFacedCard() && card.isSecondSide()) {
          graphics2D.drawImage(image,0,0,265,370,313,62,578,432,null);
        }
 else {
          graphics2D.drawImage(image,0,0,265,370,41,62,306,432,null);
        }
        graphics2D.dispose();
        writeImageToFile(renderedImage,outputFile);
      }
 else {
        new TFile(temporaryFile).cp_rp(outputFile);
      }
      temporaryFile.delete();
    }
 else {
      new TFile(temporaryFile).cp_rp(outputFile);
      temporaryFile.delete();
    }
  }
 catch (  Exception e) {
    log.error(e,e);
  }
synchronized (sync) {
    update(cardIndex + 1);
  }
}
