{
  try {
    createDirForCard(card,imagesPath);
    boolean withCollectorId=false;
    if (card.getName().equals("Forest") || card.getName().equals("Mountain") || card.getName().equals("Swamp")|| card.getName().equals("Island")|| card.getName().equals("Plains")) {
      withCollectorId=true;
    }
    File fileOut=new File(CardImageUtils.getImagePath(card,withCollectorId));
    BufferedInputStream in=new BufferedInputStream(url.openConnection(p).getInputStream());
    BufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(fileOut));
    byte[] buf=new byte[1024];
    int len=0;
    while ((len=in.read(buf)) != -1) {
      if (cancel) {
        in.close();
        out.flush();
        out.close();
        fileOut.delete();
      }
      out.write(buf,0,len);
    }
    in.close();
    out.flush();
    out.close();
    if (card.isTwoFacedCard()) {
      BufferedImage image=ImageIO.read(fileOut);
      if (image.getHeight() == 470) {
        BufferedImage renderedImage=new BufferedImage(265,370,BufferedImage.TYPE_INT_RGB);
        renderedImage.getGraphics();
        Graphics2D graphics2D=renderedImage.createGraphics();
        if (card.isTwoFacedCard() && card.isSecondSide()) {
          graphics2D.drawImage(image,0,0,265,370,313,62,578,432,null);
        }
 else {
          graphics2D.drawImage(image,0,0,265,370,41,62,306,432,null);
        }
        graphics2D.dispose();
        writeImageToFile(renderedImage,fileOut);
      }
    }
synchronized (sync) {
      update(cardIndex + 1);
    }
  }
 catch (  Exception e) {
    log.error(e,e);
  }
}
