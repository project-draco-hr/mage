{
switch (mayActivate) {
case ANY:
    break;
case NOT_YOU:
  if (controlsAbility(playerId,game)) {
    return false;
  }
break;
case OPPONENT:
if (!game.getPlayer(controllerId).hasOpponent(playerId,game)) {
return false;
}
break;
case YOU:
if (!controlsAbility(playerId,game)) {
return false;
}
break;
case CONTROLLER_ATTACHED_TO:
Permanent enchantment=game.getPermanent(getSourceId());
if (enchantment != null && enchantment.getAttachedTo() != null) {
Permanent enchanted=game.getPermanent(enchantment.getAttachedTo());
if (enchanted != null && enchanted.getControllerId().equals(playerId)) {
break;
}
}
return false;
}
if (timing == TimingRule.INSTANT || game.canPlaySorcery(playerId) || game.getContinuousEffects().asThough(sourceId,AsThoughEffectType.ACTIVATE_AS_INSTANT,this,controllerId,game)) {
if (costs.canPay(this,sourceId,controllerId,game) && canChooseTarget(game)) {
this.activatorId=playerId;
return true;
}
}
return false;
}
