{
  StringBuilder sb=new StringBuilder();
  int numberPaid=0;
  for (  Object cost : spell.getSpellAbility().getOptionalCosts()) {
    if (cost instanceof KickerManaCost) {
      if (((KickerManaCost)cost).isPaid()) {
        if (numberPaid == 0) {
          sb.append(" with ").append(((KickerManaCost)cost).getText(true));
        }
 else {
          sb.append(" and ").append(((KickerManaCost)cost).getText(true));
        }
        ++numberPaid;
      }
    }
  }
  if (numberPaid > 0) {
    sb.append(" kicker");
  }
  int multikickerCount=0;
  Card card=game.getCard(this.getSourceId());
  if (card != null) {
    for (    Ability ability : card.getAbilities()) {
      if (ability instanceof MultikickerAbility) {
        multikickerCount=((MultikickerAbility)ability).getActivateCount();
      }
    }
  }
  if (multikickerCount > 0) {
    sb.append(" with ").append(multikickerCount).append(multikickerCount > 1 ? " times" : " time").append(" multikicker");
  }
  return sb.toString();
}
