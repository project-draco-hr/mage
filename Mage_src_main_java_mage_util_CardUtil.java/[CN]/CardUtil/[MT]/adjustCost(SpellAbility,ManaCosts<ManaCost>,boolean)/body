{
  ManaCosts<ManaCost> previousCost=spellAbility.getManaCostsToPay();
  ManaCosts<ManaCost> adjustedCost=new ManaCostsImpl<>();
  for (  VariableCost vCost : previousCost.getVariableCosts()) {
    if (vCost instanceof VariableManaCost) {
      adjustedCost.add((VariableManaCost)vCost);
    }
  }
  Mana reduceMana=new Mana();
  for (  ManaCost manaCost : manaCostsToReduce) {
    if (manaCost instanceof MonoHybridManaCost) {
      reduceMana.add(Mana.GenericMana(2));
    }
 else {
      reduceMana.add(manaCost.getMana());
    }
  }
  ManaCosts<ManaCost> manaCostToCheckForColorless=new ManaCostsImpl<>();
  for (  ManaCost newManaCost : previousCost) {
    Mana mana=newManaCost.getMana();
    if (!(newManaCost instanceof MonoHybridManaCost) && mana.getGeneric() > 0) {
      manaCostToCheckForColorless.add(newManaCost);
      continue;
    }
    boolean hybridMana=newManaCost instanceof HybridManaCost;
    if (mana.getBlack() > 0 && reduceMana.getBlack() > 0) {
      if (reduceMana.getBlack() > mana.getBlack()) {
        reduceMana.setBlack(reduceMana.getBlack() - mana.getBlack());
        mana.setBlack(0);
      }
 else {
        mana.setBlack(mana.getBlack() - reduceMana.getBlack());
        reduceMana.setBlack(0);
      }
      if (hybridMana) {
        continue;
      }
    }
    if (mana.getRed() > 0 && reduceMana.getRed() > 0) {
      if (reduceMana.getRed() > mana.getRed()) {
        reduceMana.setRed(reduceMana.getRed() - mana.getRed());
        mana.setRed(0);
      }
 else {
        mana.setRed(mana.getRed() - reduceMana.getRed());
        reduceMana.setRed(0);
      }
      if (hybridMana) {
        continue;
      }
    }
    if (mana.getBlue() > 0 && reduceMana.getBlue() > 0) {
      if (reduceMana.getBlue() > mana.getBlue()) {
        reduceMana.setBlue(reduceMana.getBlue() - mana.getBlue());
        mana.setBlue(0);
      }
 else {
        mana.setBlue(mana.getBlue() - reduceMana.getBlue());
        reduceMana.setBlue(0);
      }
      if (hybridMana) {
        continue;
      }
    }
    if (mana.getGreen() > 0 && reduceMana.getGreen() > 0) {
      if (reduceMana.getGreen() > mana.getGreen()) {
        reduceMana.setGreen(reduceMana.getGreen() - mana.getGreen());
        mana.setGreen(0);
      }
 else {
        mana.setGreen(mana.getGreen() - reduceMana.getGreen());
        reduceMana.setGreen(0);
      }
      if (hybridMana) {
        continue;
      }
    }
    if (mana.getWhite() > 0 && reduceMana.getWhite() > 0) {
      if (reduceMana.getWhite() > mana.getWhite()) {
        reduceMana.setWhite(reduceMana.getWhite() - mana.getWhite());
        mana.setWhite(0);
      }
 else {
        mana.setWhite(mana.getWhite() - reduceMana.getWhite());
        reduceMana.setWhite(0);
      }
      if (hybridMana) {
        continue;
      }
    }
    if (mana.count() > 0) {
      if (newManaCost instanceof MonoHybridManaCost) {
        if (mana.count() == 2) {
          reduceMana.setGeneric(reduceMana.getGeneric() - 2);
          continue;
        }
      }
      manaCostToCheckForColorless.add(newManaCost);
    }
  }
  int reduceAmount;
  if (convertToGeneric) {
    reduceAmount=reduceMana.count();
  }
 else {
    reduceAmount=reduceMana.getGeneric();
  }
  if (reduceAmount > 0) {
    for (    ManaCost newManaCost : manaCostToCheckForColorless) {
      Mana mana=newManaCost.getMana();
      if (mana.getGeneric() == 0 || reduceAmount == 0) {
        adjustedCost.add(newManaCost);
        continue;
      }
      if (newManaCost instanceof MonoHybridManaCost) {
        if (reduceAmount > 1) {
          reduceAmount-=2;
          mana.clear();
        }
        continue;
      }
      if (mana.getGeneric() > 0) {
        if (reduceAmount > mana.getGeneric()) {
          reduceAmount-=mana.getGeneric();
          mana.setGeneric(0);
        }
 else {
          mana.setGeneric(mana.getGeneric() - reduceAmount);
          reduceAmount=0;
        }
      }
      if (mana.count() > 0) {
        adjustedCost.add(0,new GenericManaCost(mana.count()));
      }
    }
  }
 else {
    adjustedCost.addAll(manaCostToCheckForColorless);
  }
  if (adjustedCost.isEmpty()) {
    adjustedCost.add(new GenericManaCost(0));
  }
  adjustedCost.setSourceFilter(previousCost.getSourceFilter());
  spellAbility.getManaCostsToPay().clear();
  spellAbility.getManaCostsToPay().addAll(adjustedCost);
}
