{
  FilterMana mana=new FilterMana();
  mana.setBlack(card.getManaCost().getText().matches(regexBlack));
  mana.setBlue(card.getManaCost().getText().matches(regexBlue));
  mana.setGreen(card.getManaCost().getText().matches(regexGreen));
  mana.setRed(card.getManaCost().getText().matches(regexRed));
  mana.setWhite(card.getManaCost().getText().matches(regexWhite));
  for (  String rule : card.getRules()) {
    rule=rule.replaceAll("(?i)<i.*?</i>","");
    if (!mana.isBlack() && rule.matches(regexBlack)) {
      mana.setBlack(true);
    }
    if (!mana.isBlue() && rule.matches(regexBlue)) {
      mana.setBlue(true);
    }
    if (!mana.isGreen() && rule.matches(regexGreen)) {
      mana.setGreen(true);
    }
    if (!mana.isRed() && rule.matches(regexRed)) {
      mana.setRed(true);
    }
    if (!mana.isWhite() && rule.matches(regexWhite)) {
      mana.setWhite(true);
    }
  }
  if (card.isTransformable()) {
    Card secondCard=card.getSecondCardFace();
    ObjectColor color=secondCard.getColor(null);
    mana.setBlack(mana.isBlack() || color.isBlack());
    mana.setGreen(mana.isGreen() || color.isGreen());
    mana.setRed(mana.isRed() || color.isRed());
    mana.setBlue(mana.isBlue() || color.isBlue());
    mana.setWhite(mana.isWhite() || color.isWhite());
    for (    String rule : secondCard.getRules()) {
      rule=rule.replaceAll("(?i)<i.*?</i>","");
      if (!mana.isBlack() && rule.matches(regexBlack)) {
        mana.setBlack(true);
      }
      if (!mana.isBlue() && rule.matches(regexBlue)) {
        mana.setBlue(true);
      }
      if (!mana.isGreen() && rule.matches(regexGreen)) {
        mana.setGreen(true);
      }
      if (!mana.isRed() && rule.matches(regexRed)) {
        mana.setRed(true);
      }
      if (!mana.isWhite() && rule.matches(regexWhite)) {
        mana.setWhite(true);
      }
    }
  }
  return mana;
}
