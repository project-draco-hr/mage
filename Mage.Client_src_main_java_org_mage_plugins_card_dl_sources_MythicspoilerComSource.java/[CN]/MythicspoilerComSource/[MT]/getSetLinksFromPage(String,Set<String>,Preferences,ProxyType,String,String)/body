{
  Map<String,String> pageLinks=new HashMap<>();
  String urlDocument;
  Document doc;
  if (proxyType.equals(ProxyType.NONE)) {
    urlDocument=pageUrl;
    doc=Jsoup.connect(urlDocument).get();
  }
 else {
    String proxyServer=prefs.get("proxyAddress","");
    int proxyPort=Integer.parseInt(prefs.get("proxyPort","0"));
    URL url=new URL(pageUrl);
    Proxy proxy=new Proxy(Proxy.Type.HTTP,new InetSocketAddress(proxyServer,proxyPort));
    HttpURLConnection uc=(HttpURLConnection)url.openConnection(proxy);
    uc.connect();
    String line;
    StringBuffer tmp=new StringBuffer();
    BufferedReader in=new BufferedReader(new InputStreamReader(uc.getInputStream()));
    while ((line=in.readLine()) != null) {
      tmp.append(line);
    }
    doc=Jsoup.parse(String.valueOf(tmp));
  }
  Elements cardsImages=doc.select("img[src^=cards/]");
  if (!aliasesStart.isEmpty()) {
    for (    String text : aliasesStart) {
      cardsImages.addAll(doc.select("img[src^=" + text + "]"));
    }
  }
  for (  Element cardsImage : cardsImages) {
    String cardLink=cardsImage.attr("src");
    String cardName=null;
    if (cardLink.startsWith("cards/") && cardLink.endsWith(".jpg")) {
      cardName=cardLink.substring(6,cardLink.length() - 4);
    }
 else     if (aliasesStart.contains(cardLink)) {
      cardName=cardLink.substring(0,cardLink.length() - 4);
      ;
    }
    if (cardName != null && !cardName.isEmpty()) {
      if (cardNameAliases.containsKey(cardSet + "-" + cardName)) {
        cardName=cardNameAliases.get(cardSet + "-" + cardName);
      }
 else {
        if (cardName.endsWith("1") || cardName.endsWith("2") || cardName.endsWith("3")|| cardName.endsWith("4")|| cardName.endsWith("5")) {
          if (!cardName.startsWith("forest") && !cardName.startsWith("swamp") && !cardName.startsWith("mountain")&& !cardName.startsWith("island")&& !cardName.startsWith("plains")) {
            cardName=cardName.substring(0,cardName.length() - 1);
          }
        }
      }
      pageLinks.put(cardName,baseUrl + cardLink);
    }
  }
  return pageLinks;
}
