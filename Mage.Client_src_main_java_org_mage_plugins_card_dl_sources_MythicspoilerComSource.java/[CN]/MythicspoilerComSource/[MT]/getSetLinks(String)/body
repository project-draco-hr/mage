{
  Map<String,String> setLinks=new HashMap<>();
  try {
    String setNames=setsAliases.get(cardSet.toLowerCase());
    Set<String> aliasesStart=new HashSet<>();
    if (cardNameAliasesStart.containsKey(cardSet)) {
      aliasesStart.addAll(cardNameAliasesStart.get(cardSet));
    }
    if (setNames == null) {
      setNames=cardSet.toLowerCase();
    }
    Preferences prefs=MageFrame.getPreferences();
    Connection.ProxyType proxyType=Connection.ProxyType.valueByText(prefs.get("proxyType","None"));
    for (    String setName : setNames.split("\\^")) {
      String URLSetName=URLEncoder.encode(setName,"UTF-8");
      String baseUrl="http://mythicspoiler.com/" + URLSetName + "/";
      Map<String,String> pageLinks=getSetLinksFromPage(cardSet,aliasesStart,prefs,proxyType,baseUrl,baseUrl);
      setLinks.putAll(pageLinks);
      try {
        String doubleFacedUrl=baseUrl + "dfc.html";
        pageLinks=getSetLinksFromPage(cardSet,aliasesStart,prefs,proxyType,baseUrl,doubleFacedUrl);
        setLinks.putAll(pageLinks);
      }
 catch (      Exception ex) {
      }
    }
  }
 catch (  IOException ex) {
    System.out.println("Exception when parsing the mythicspoiler page: " + ex.getMessage());
  }
  return setLinks;
}
