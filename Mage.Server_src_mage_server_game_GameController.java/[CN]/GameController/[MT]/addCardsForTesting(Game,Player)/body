{
  try {
    File f=new File(Constants.INIT_FILE_PATH);
    Pattern pattern=Pattern.compile("([a-zA-Z]*):([\\w]*):([a-zA-Z ,.!\\d]*):([\\d]*)");
    if (!f.exists()) {
      System.err.println("WARN! Couldn't find init file: " + Constants.INIT_FILE_PATH);
      return;
    }
    System.err.println("Parsing init.txt for player : " + player.getName());
    Scanner scanner=new Scanner(f);
    while (scanner.hasNextLine()) {
      String line=scanner.nextLine().trim();
      if (line.startsWith("#"))       continue;
      Matcher m=pattern.matcher(line);
      if (m.matches()) {
        String zone=m.group(1);
        String nickname=m.group(2);
        if (nickname.equals(player.getName())) {
          Zone gameZone;
          if ("hand".equalsIgnoreCase(zone)) {
            gameZone=Zone.HAND;
          }
 else           if ("battlefield".equalsIgnoreCase(zone)) {
            gameZone=Zone.BATTLEFIELD;
          }
 else           if ("graveyard".equalsIgnoreCase(zone)) {
            gameZone=Zone.GRAVEYARD;
          }
 else {
            continue;
          }
          String cardName=m.group(3);
          Integer amount=Integer.parseInt(m.group(4));
          for (int i=0; i < amount; i++) {
            Card card=CardImpl.createCard(cardName);
            if (card != null) {
              Set<Card> cards=new HashSet<Card>();
              cards.add(card);
              game.loadCards(cards,player.getId());
              swapWithAnyCard(game,player,card,gameZone);
            }
 else {
              System.err.println("ERROR! Couldn't create a card: " + cardName);
            }
          }
        }
 else {
          System.err.println("WARN! Was skipped: " + line);
        }
      }
 else {
        System.err.println("WARN! Init string wasn't parsed: " + line);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
