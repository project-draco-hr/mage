{
  logger.debug("--- Server state ----------------------------------------------");
  Collection<User> users=UserManager.getInstance().getUsers();
  logger.debug("--------User: " + users.size() + " [userId | since | lock | name -----------------------");
  for (  User user : users) {
    logger.debug(user.getId() + " | " + formatter.format(user.getConnectionTime())+ " | "+ (SessionManager.getInstance().getSession(user.getSessionId()).isLocked() ? "L" : "-")+ " | "+ user.getName()+ " ("+ user.getUserState().toString()+ " - "+ user.getPingInfo()+ ")");
  }
  ArrayList<ChatSession> chatSessions=ChatManager.getInstance().getChatSessions();
  logger.debug("------- ChatSessions: " + chatSessions.size() + " ----------------------------------");
  for (  ChatSession chatSession : chatSessions) {
    logger.debug(chatSession.getChatId() + " " + formatter.format(chatSession.getCreateTime())+ " "+ chatSession.getInfo()+ " "+ chatSession.getClients().values().toString());
  }
  logger.debug("------- Games: " + GameManager.getInstance().getNumberActiveGames() + " --------------------------------------------");
  logger.debug(" Active Game Worker: " + ThreadExecutor.getInstance().getActiveThreads(ThreadExecutor.getInstance().getGameExecutor()));
  for (  Entry<UUID,GameController> entry : GameManager.getInstance().getGameController().entrySet()) {
    logger.debug(entry.getKey() + entry.getValue().getPlayerNameList());
  }
  logger.debug("--- Server state END ------------------------------------------");
}
