{
  logger.info("Table expire checking...");
  Date now=new Date();
  List<UUID> toRemove=new ArrayList<UUID>();
  for (  Table table : tables.values()) {
    if (!table.getState().equals(TableState.FINISHED)) {
      long diff=(now.getTime() - table.getCreateTime().getTime()) / EXPIRE_TIME_UNIT_VALUE;
      if (diff >= EXPIRE_TIME) {
        logger.info("Table expired: id = " + table.getId() + ", created_by="+ table.getControllerName()+ ". Removing...");
        toRemove.add(table.getId());
      }
 else       if (!table.isTournament()) {
        boolean canBeRemoved=true;
        for (        MatchPlayer matchPlayer : table.getMatch().getPlayers()) {
          Player player=matchPlayer.getPlayer();
          if (player != null && player.isHuman()) {
            canBeRemoved=false;
          }
          if (table.isTournamentSubTable() && table.getTournament().getEndTime() == null) {
            canBeRemoved=false;
          }
        }
        if (canBeRemoved) {
          logger.info("Table with no human player: id = " + table.getId() + ", created_by="+ table.getControllerName()+ ". Removing...");
          toRemove.add(table.getId());
        }
      }
    }
  }
  for (  UUID tableId : toRemove) {
    try {
      removeTable(tableId);
    }
 catch (    Exception e) {
      logger.error(e);
    }
  }
}
