{
  if (logger.isDebugEnabled()) {
    debugServerState();
  }
  logger.debug("TABLE HEALTH CHECK");
  List<UUID> toRemove=new ArrayList<>();
  for (  Table table : tables.values()) {
    if (!table.getState().equals(TableState.FINISHED)) {
      logger.debug(table.getId() + " [" + table.getName()+ "] "+ formatter.format(table.getStartTime())+ " ("+ table.getState().toString()+ ") "+ (table.isTournament() ? "- Tournament" : ""));
      TableController tableController=getController(table.getId());
      if (tableController != null) {
        if (table.isTournament()) {
          if (!tableController.isTournamentStillValid()) {
            toRemove.add(table.getId());
          }
        }
 else {
          if (!tableController.isMatchTableStillValid()) {
            toRemove.add(table.getId());
          }
        }
      }
    }
  }
  for (  UUID tableId : toRemove) {
    try {
      removeTable(tableId);
    }
 catch (    Exception e) {
      logger.error(e);
    }
  }
  logger.debug("TABLE HEALTH CHECK - END");
}
