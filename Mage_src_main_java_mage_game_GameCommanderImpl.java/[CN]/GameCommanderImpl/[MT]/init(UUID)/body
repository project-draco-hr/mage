{
  Ability ability=new SimpleStaticAbility(Zone.COMMAND,new InfoEffect("Commander effects"));
  for (  UUID playerId : state.getPlayerList(startingPlayerId)) {
    Player player=getPlayer(playerId);
    if (player != null) {
      while (player.getSideboard().size() > 0) {
        Card commander=this.getCard(player.getSideboard().iterator().next());
        if (commander != null) {
          player.addCommanderId(commander.getId());
          commander.moveToZone(Zone.COMMAND,null,this,true);
          commander.getAbilities().setControllerId(player.getId());
          ability.addEffect(new CommanderReplacementEffect(commander.getId(),alsoHand,alsoLibrary));
          ability.addEffect(new CommanderCostModification(commander.getId()));
          getState().setValue(commander.getId() + "_castCount",0);
          CommanderInfoWatcher watcher=new CommanderInfoWatcher(commander.getId(),CHECK_COMMANDER_DAMAGE);
          getState().getWatchers().add(watcher);
          watcher.addCardInfoToCommander(this);
        }
      }
    }
  }
  this.getState().addAbility(ability,null);
  super.init(choosingPlayerId);
  if (startingPlayerSkipsDraw) {
    state.getTurnMods().add(new TurnMod(startingPlayerId,PhaseStep.DRAW));
  }
}
