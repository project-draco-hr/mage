{
  UUID opponentId=this.getTargetPointer().getFirst(game,source);
  if (opponentId != null) {
    FilterCreaturePermanent filter=new FilterCreaturePermanent();
    filter.add(Predicates.or(new ControllerIdPredicate(source.getControllerId()),new ControllerIdPredicate(opponentId)));
    new UntapAllEffect(filter).apply(game,source);
    Set<UUID> yourCreatures=new HashSet<>();
    Set<UUID> opponentCreatures=new HashSet<>();
    for (    Permanent permanent : game.getBattlefield().getActivePermanents(new FilterControlledCreaturePermanent(),source.getControllerId(),source.getSourceId(),game)) {
      yourCreatures.add(permanent.getId());
    }
    FilterCreaturePermanent filterOpponent=new FilterCreaturePermanent();
    filterOpponent.add(new ControllerIdPredicate(opponentId));
    for (    Permanent permanent : game.getBattlefield().getActivePermanents(filterOpponent,source.getControllerId(),source.getSourceId(),game)) {
      opponentCreatures.add(permanent.getId());
    }
    for (    UUID creatureId : yourCreatures) {
      ContinuousEffect effect=new GainControlTargetEffect(Duration.EndOfTurn,opponentId);
      effect.setTargetPointer(new FixedTarget(creatureId));
      game.addEffect(effect,source);
    }
    for (    UUID creatureId : opponentCreatures) {
      ContinuousEffect effect=new GainControlTargetEffect(Duration.EndOfTurn);
      effect.setTargetPointer(new FixedTarget(creatureId));
      game.addEffect(effect,source);
    }
    game.addEffect(new GainAbilityAllEffect(HasteAbility.getInstance(),Duration.EndOfTurn,filter),source);
    return true;
  }
  return false;
}
