{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=game.getObject(source.getSourceId());
  Card chosenCard=game.getCard(getTargetPointer().getFirst(game,source));
  if (chosenCard != null && sourceObject != null && controller != null) {
    Player owner=game.getPlayer(chosenCard.getOwnerId());
    if (owner == null) {
      return false;
    }
    FilterCard filterNamedCard=new FilterCard();
    filterNamedCard.add(new NamePredicate(chosenCard.getName()));
    for (    Card checkCard : owner.getGraveyard().getCards(game)) {
      if (checkCard.getName().equals(chosenCard.getName())) {
        controller.moveCardToExileWithInfo(checkCard,null,"",source.getSourceId(),game,Zone.GRAVEYARD,true);
      }
    }
    filterNamedCard.setMessage("card named " + chosenCard.getName() + " in the hand of "+ owner.getName());
    TargetCardInHand targetCardInHand=new TargetCardInHand(0,Integer.MAX_VALUE,filterNamedCard);
    if (controller.choose(Outcome.Exile,owner.getHand(),targetCardInHand,game)) {
      List<UUID> targets=targetCardInHand.getTargets();
      for (      UUID targetId : targets) {
        Card targetCard=owner.getHand().get(targetId,game);
        if (targetCard != null) {
          controller.moveCardToExileWithInfo(targetCard,null,"",source.getSourceId(),game,Zone.HAND,true);
        }
      }
    }
    filterNamedCard.setMessage("card named " + chosenCard.getName() + " in the library of "+ owner.getName());
    TargetCardInLibrary targetCardInLibrary=new TargetCardInLibrary(0,Integer.MAX_VALUE,filterNamedCard);
    if (controller.searchLibrary(targetCardInLibrary,game,owner.getId())) {
      List<UUID> targets=targetCardInLibrary.getTargets();
      for (      UUID targetId : targets) {
        Card targetCard=owner.getLibrary().getCard(targetId,game);
        if (targetCard != null) {
          controller.moveCardToExileWithInfo(targetCard,null,"",source.getSourceId(),game,Zone.LIBRARY,true);
        }
      }
    }
    owner.shuffleLibrary(game);
    return true;
  }
  return false;
}
