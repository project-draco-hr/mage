{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=game.getObject(source.getSourceId());
  Card chosenCard=game.getCard(getTargetPointer().getFirst(game,source));
  if (chosenCard != null && sourceObject != null && controller != null) {
    Player owner=game.getPlayer(chosenCard.getOwnerId());
    if (owner == null) {
      return false;
    }
    FilterCard filterNamedCards=new FilterCard();
    filterNamedCards.add(new NamePredicate(chosenCard.getName()));
    for (    Card checkCard : owner.getGraveyard().getCards(game)) {
      if (checkCard.getName().equals(chosenCard.getName())) {
        controller.moveCardToExileWithInfo(checkCard,null,"",source.getSourceId(),game,Zone.GRAVEYARD);
      }
    }
    TargetCardInHand targetCardsHand=new TargetCardInHand(0,Integer.MAX_VALUE,filterNamedCards);
    controller.chooseTarget(outcome,owner.getGraveyard(),targetCardsHand,source,game);
    for (    UUID cardId : targetCardsHand.getTargets()) {
      Card card=game.getCard(cardId);
      if (card != null) {
        controller.moveCardToExileWithInfo(card,null,"",source.getSourceId(),game,Zone.HAND);
      }
    }
    TargetCardInLibrary targetCardsLibrary=new TargetCardInLibrary(0,Integer.MAX_VALUE,filterNamedCards);
    controller.searchLibrary(targetCardsLibrary,game,owner.getId());
    for (    UUID cardId : targetCardsLibrary.getTargets()) {
      Card card=game.getCard(cardId);
      if (card != null) {
        controller.moveCardToExileWithInfo(card,null,"",source.getSourceId(),game,Zone.LIBRARY);
      }
    }
    owner.shuffleLibrary(game);
    return true;
  }
  return false;
}
