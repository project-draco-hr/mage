{
switch (arg1) {
case 0:
    return tables[arg0].getTableName();
case 1:
  return tables[arg0].getControllerName();
case 2:
return tables[arg0].getGameType();
case 3:
return Integer.toString(tables[arg0].getWins());
case 4:
return tables[arg0].getDeckType();
case 5:
return tables[arg0].getAdditionalInfo();
case 6:
return tables[arg0].getTableState().toString();
case 7:
return timeFormatter.format(tables[arg0].getCreateTime());
case 8:
switch (tables[arg0].getTableState()) {
case WAITING:
String owner=tables[arg0].getControllerName();
if (session != null && owner.equals(session.getUserName())) {
return "Remove";
}
return "Join";
case DUELING:
owner=tables[arg0].getControllerName();
if (session != null && owner.equals(session.getUserName())) {
return "Remove";
}
if (tables[arg0].isTournament()) {
return "None";
}
 else {
return "Watch";
}
case FINISHED:
owner=tables[arg0].getControllerName();
if (session != null && owner.equals(session.getUserName())) {
return "Remove";
}
return "None";
default :
return "";
}
case 9:
return tables[arg0].isTournament();
case 10:
if (!tables[arg0].getGames().isEmpty()) {
return tables[arg0].getGames().get(0);
}
return null;
case 11:
return tables[arg0].getTableId();
}
return "";
}
