{
  tableModel=new TableTableModel();
  initComponents();
  tableTables.createDefaultColumnsFromModel();
  Action join=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      int modelRow=Integer.valueOf(e.getActionCommand());
      UUID tableId=UUID.fromString((String)tableModel.getValueAt(modelRow,0));
      UUID gameId=(UUID)tableModel.getValueAt(modelRow,6);
      String state=(String)tableModel.getValueAt(modelRow,4);
      boolean isTournament=(Boolean)tableModel.getValueAt(modelRow,5);
      if (state.equals("Join")) {
        if (isTournament) {
          logger.info("Joining tournament " + tableId);
          if (session.joinTournamentTable(roomId,tableId,session.getUserName(),"Human"))           tableWaitingDialog.showDialog(roomId,tableId,true);
        }
 else {
          logger.info("Joining table " + tableId);
          joinTableDialog.showDialog(roomId,tableId);
          if (joinTableDialog.isJoined())           tableWaitingDialog.showDialog(roomId,tableId,false);
        }
      }
 else       if (state.equals("Watch")) {
        logger.info("Watching table " + tableId);
        if (!session.watchTable(roomId,tableId))         hideTables();
      }
 else       if (state.equals("Replay")) {
        logger.info("Replaying game " + gameId);
        if (!session.replayGame(gameId))         hideTables();
      }
    }
  }
;
  ButtonColumn buttonColumn=new ButtonColumn(tableTables,join,4);
  jSplitPane1.setOpaque(false);
  jScrollPane1.setOpaque(false);
  jPanel1.setOpaque(false);
  jScrollPane1.getViewport().setBackground(new Color(20,20,20,150));
}
