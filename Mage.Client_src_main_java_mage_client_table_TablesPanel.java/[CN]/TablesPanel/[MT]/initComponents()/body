{
  java.awt.GridBagConstraints gridBagConstraints;
  jPanelTop=new javax.swing.JPanel();
  btnNewTable=new javax.swing.JButton();
  btnNewTournament=new javax.swing.JButton();
  filterBar1=new javax.swing.JToolBar();
  btnStateWaiting=new javax.swing.JToggleButton();
  btnStateActive=new javax.swing.JToggleButton();
  btnStateFinished=new javax.swing.JToggleButton();
  jSeparator1=new javax.swing.JToolBar.Separator();
  btnTypeMatch=new javax.swing.JToggleButton();
  btnTypeTourneyConstructed=new javax.swing.JToggleButton();
  btnTypeTourneyLimited=new javax.swing.JToggleButton();
  jSeparator4=new javax.swing.JToolBar.Separator();
  btnSkillBeginner=new javax.swing.JToggleButton();
  btnSkillCasual=new javax.swing.JToggleButton();
  btnSkillSerious=new javax.swing.JToggleButton();
  filterBar2=new javax.swing.JToolBar();
  btnFormatBlock=new javax.swing.JToggleButton();
  btnFormatStandard=new javax.swing.JToggleButton();
  btnFormatModern=new javax.swing.JToggleButton();
  btnFormatLegacy=new javax.swing.JToggleButton();
  btnFormatVintage=new javax.swing.JToggleButton();
  jSeparator3=new javax.swing.JToolBar.Separator();
  btnFormatCommander=new javax.swing.JToggleButton();
  btnFormatTinyLeader=new javax.swing.JToggleButton();
  jSeparator2=new javax.swing.JToolBar.Separator();
  btnFormatLimited=new javax.swing.JToggleButton();
  btnFormatOther=new javax.swing.JToggleButton();
  btnQuickStart=new javax.swing.JButton();
  jSplitPane1=new javax.swing.JSplitPane();
  jPanelTables=new javax.swing.JPanel();
  jSplitPaneTables=new javax.swing.JSplitPane();
  jScrollPaneTablesActive=new javax.swing.JScrollPane();
  tableTables=new javax.swing.JTable();
  jScrollPaneTablesFinished=new javax.swing.JScrollPane();
  tableCompleted=new javax.swing.JTable();
  chatPanelMain=new mage.client.table.PlayersChatPanel();
  jPanelBottom=new javax.swing.JPanel();
  jLabel1=new javax.swing.JLabel();
  jLabel2=new javax.swing.JLabel();
  jButtonNext=new javax.swing.JButton();
  setLayout(new java.awt.GridBagLayout());
  jPanelTop.setBackground(java.awt.Color.white);
  jPanelTop.setOpaque(false);
  btnNewTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/match_new.png")));
  btnNewTable.setToolTipText("Creates a new match table.");
  btnNewTable.setMargin(new java.awt.Insets(2,2,2,2));
  btnNewTable.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnNewTableActionPerformed(evt);
    }
  }
);
  btnNewTournament.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/tourney_new.png")));
  btnNewTournament.setToolTipText("Creates a new tourney table.");
  btnNewTournament.setMargin(new java.awt.Insets(2,2,2,2));
  btnNewTournament.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnNewTournamentActionPerformed(evt);
    }
  }
);
  filterBar1.setFloatable(false);
  filterBar1.setForeground(new java.awt.Color(102,102,255));
  filterBar1.setFocusable(false);
  filterBar1.setOpaque(false);
  btnStateWaiting.setSelected(true);
  btnStateWaiting.setToolTipText("Shows all tables waiting for players.");
  btnStateWaiting.setActionCommand("stateWait");
  btnStateWaiting.setFocusPainted(false);
  btnStateWaiting.setFocusable(false);
  btnStateWaiting.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnStateWaiting.setRequestFocusEnabled(false);
  btnStateWaiting.setVerifyInputWhenFocusTarget(false);
  btnStateWaiting.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnStateWaiting.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnStateWaiting);
  btnStateActive.setSelected(true);
  btnStateActive.setToolTipText("Shows all tables with active matches.");
  btnStateActive.setActionCommand("stateActive");
  btnStateActive.setFocusPainted(false);
  btnStateActive.setFocusable(false);
  btnStateActive.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnStateActive.setRequestFocusEnabled(false);
  btnStateActive.setVerifyInputWhenFocusTarget(false);
  btnStateActive.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnStateActive.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnStateActive);
  btnStateFinished.setSelected(true);
  btnStateFinished.setToolTipText("<HTML>Toggles the visibility of the table of completed <br>matches and tournaments in the lower area.\n<br>Showing the last 50 finished matches.");
  btnStateFinished.setActionCommand("stateFinished");
  btnStateFinished.setFocusPainted(false);
  btnStateFinished.setFocusable(false);
  btnStateFinished.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnStateFinished.setRequestFocusEnabled(false);
  btnStateFinished.setVerifyInputWhenFocusTarget(false);
  btnStateFinished.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnStateFinished.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnStateFinishedActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnStateFinished);
  filterBar1.add(jSeparator1);
  btnTypeMatch.setSelected(true);
  btnTypeMatch.setText("Matches");
  btnTypeMatch.setToolTipText("Shows all non tournament tables.");
  btnTypeMatch.setActionCommand("typeMatch");
  btnTypeMatch.setFocusPainted(false);
  btnTypeMatch.setFocusable(false);
  btnTypeMatch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnTypeMatch.setRequestFocusEnabled(false);
  btnTypeMatch.setVerifyInputWhenFocusTarget(false);
  btnTypeMatch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnTypeMatch.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnTypeMatch);
  btnTypeTourneyConstructed.setSelected(true);
  btnTypeTourneyConstructed.setText("Constructed tourn.");
  btnTypeTourneyConstructed.setToolTipText("Shows all constructed tournament tables.");
  btnTypeTourneyConstructed.setActionCommand("typeTourneyConstructed");
  btnTypeTourneyConstructed.setFocusPainted(false);
  btnTypeTourneyConstructed.setFocusable(false);
  btnTypeTourneyConstructed.setRequestFocusEnabled(false);
  btnTypeTourneyConstructed.setVerifyInputWhenFocusTarget(false);
  btnTypeTourneyConstructed.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnTypeTourneyConstructed);
  btnTypeTourneyLimited.setSelected(true);
  btnTypeTourneyLimited.setText("Limited tourn.");
  btnTypeTourneyLimited.setToolTipText("Shows all limited tournament tables.");
  btnTypeTourneyLimited.setActionCommand("typeTourneyLimited");
  btnTypeTourneyLimited.setFocusPainted(false);
  btnTypeTourneyLimited.setFocusable(false);
  btnTypeTourneyLimited.setMaximumSize(new java.awt.Dimension(72,20));
  btnTypeTourneyLimited.setRequestFocusEnabled(false);
  btnTypeTourneyLimited.setVerifyInputWhenFocusTarget(false);
  btnTypeTourneyLimited.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnTypeTourneyLimited);
  filterBar1.add(jSeparator4);
  btnSkillBeginner.setSelected(true);
  btnSkillBeginner.setText("Beginner");
  btnSkillBeginner.setToolTipText("Shows all tables with skill level beginner.");
  btnSkillBeginner.setActionCommand("typeMatch");
  btnSkillBeginner.setFocusPainted(false);
  btnSkillBeginner.setFocusable(false);
  btnSkillBeginner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnSkillBeginner.setRequestFocusEnabled(false);
  btnSkillBeginner.setVerifyInputWhenFocusTarget(false);
  btnSkillBeginner.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnSkillBeginner.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnSkillBeginner);
  btnSkillCasual.setSelected(true);
  btnSkillCasual.setText("Casual");
  btnSkillCasual.setToolTipText("Shows all tables with skill level casual.");
  btnSkillCasual.setActionCommand("typeMatch");
  btnSkillCasual.setFocusPainted(false);
  btnSkillCasual.setFocusable(false);
  btnSkillCasual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnSkillCasual.setRequestFocusEnabled(false);
  btnSkillCasual.setVerifyInputWhenFocusTarget(false);
  btnSkillCasual.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnSkillCasual.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnSkillCasual);
  btnSkillSerious.setSelected(true);
  btnSkillSerious.setText("Serious");
  btnSkillSerious.setToolTipText("Shows all tables with skill level serious.");
  btnSkillSerious.setActionCommand("typeMatch");
  btnSkillSerious.setFocusPainted(false);
  btnSkillSerious.setFocusable(false);
  btnSkillSerious.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnSkillSerious.setRequestFocusEnabled(false);
  btnSkillSerious.setVerifyInputWhenFocusTarget(false);
  btnSkillSerious.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnSkillSerious.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar1.add(btnSkillSerious);
  filterBar2.setFloatable(false);
  filterBar2.setFocusable(false);
  filterBar2.setOpaque(false);
  btnFormatBlock.setSelected(true);
  btnFormatBlock.setText("Block");
  btnFormatBlock.setToolTipText("Block constructed formats.");
  btnFormatBlock.setFocusPainted(false);
  btnFormatBlock.setFocusable(false);
  btnFormatBlock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatBlock.setRequestFocusEnabled(false);
  btnFormatBlock.setVerifyInputWhenFocusTarget(false);
  btnFormatBlock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatBlock.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatBlock);
  btnFormatStandard.setSelected(true);
  btnFormatStandard.setText("Standard");
  btnFormatStandard.setToolTipText("Standard format.");
  btnFormatStandard.setFocusPainted(false);
  btnFormatStandard.setFocusable(false);
  btnFormatStandard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatStandard.setRequestFocusEnabled(false);
  btnFormatStandard.setVerifyInputWhenFocusTarget(false);
  btnFormatStandard.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatStandard.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatStandard);
  btnFormatModern.setSelected(true);
  btnFormatModern.setText("Modern");
  btnFormatModern.setToolTipText("Modern format.");
  btnFormatModern.setFocusPainted(false);
  btnFormatModern.setFocusable(false);
  btnFormatModern.setRequestFocusEnabled(false);
  btnFormatModern.setVerifyInputWhenFocusTarget(false);
  btnFormatModern.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatModern);
  btnFormatLegacy.setSelected(true);
  btnFormatLegacy.setText("Legacy");
  btnFormatLegacy.setToolTipText("Legacy format.");
  btnFormatLegacy.setFocusPainted(false);
  btnFormatLegacy.setFocusable(false);
  btnFormatLegacy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatLegacy.setRequestFocusEnabled(false);
  btnFormatLegacy.setVerifyInputWhenFocusTarget(false);
  btnFormatLegacy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatLegacy.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatLegacy);
  btnFormatVintage.setSelected(true);
  btnFormatVintage.setText("Vintage");
  btnFormatVintage.setToolTipText("Vintage format.");
  btnFormatVintage.setFocusPainted(false);
  btnFormatVintage.setFocusable(false);
  btnFormatVintage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatVintage.setRequestFocusEnabled(false);
  btnFormatVintage.setVerifyInputWhenFocusTarget(false);
  btnFormatVintage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatVintage.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatVintage);
  filterBar2.add(jSeparator3);
  btnFormatCommander.setSelected(true);
  btnFormatCommander.setText("Commander");
  btnFormatCommander.setToolTipText("Commander format.");
  btnFormatCommander.setFocusPainted(false);
  btnFormatCommander.setFocusable(false);
  btnFormatCommander.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatCommander.setRequestFocusEnabled(false);
  btnFormatCommander.setVerifyInputWhenFocusTarget(false);
  btnFormatCommander.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatCommander.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatCommander);
  btnFormatTinyLeader.setSelected(true);
  btnFormatTinyLeader.setText("Tiny Leader");
  btnFormatTinyLeader.setToolTipText("Tiny Leader format.");
  btnFormatTinyLeader.setFocusPainted(false);
  btnFormatTinyLeader.setFocusable(false);
  btnFormatTinyLeader.setRequestFocusEnabled(false);
  btnFormatTinyLeader.setVerifyInputWhenFocusTarget(false);
  btnFormatTinyLeader.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatTinyLeader);
  filterBar2.add(jSeparator2);
  btnFormatLimited.setSelected(true);
  btnFormatLimited.setText("Limited");
  btnFormatLimited.setToolTipText("Limited format.");
  btnFormatLimited.setFocusPainted(false);
  btnFormatLimited.setFocusable(false);
  btnFormatLimited.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnFormatLimited.setRequestFocusEnabled(false);
  btnFormatLimited.setVerifyInputWhenFocusTarget(false);
  btnFormatLimited.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnFormatLimited.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatLimited);
  btnFormatOther.setSelected(true);
  btnFormatOther.setText("Other");
  btnFormatOther.setToolTipText("Other formats (Pauper, Extended, etc.)");
  btnFormatOther.setFocusPainted(false);
  btnFormatOther.setFocusable(false);
  btnFormatOther.setRequestFocusEnabled(false);
  btnFormatOther.setVerifyInputWhenFocusTarget(false);
  btnFormatOther.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnFilterActionPerformed(evt);
    }
  }
);
  filterBar2.add(btnFormatOther);
  btnQuickStart.setText("Quick Start");
  btnQuickStart.setFocusable(false);
  btnQuickStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnQuickStart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnQuickStart.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnQuickStartActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout jPanelTopLayout=new javax.swing.GroupLayout(jPanelTop);
  jPanelTop.setLayout(jPanelTopLayout);
  jPanelTopLayout.setHorizontalGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanelTopLayout.createSequentialGroup().addContainerGap().addComponent(btnNewTable).addGap(6,6,6).addComponent(btnNewTournament).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,false).addComponent(filterBar1,javax.swing.GroupLayout.DEFAULT_SIZE,491,Short.MAX_VALUE).addComponent(filterBar2,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnQuickStart).addContainerGap(835,Short.MAX_VALUE)));
  jPanelTopLayout.setVerticalGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanelTopLayout.createSequentialGroup().addContainerGap().addGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnNewTable).addComponent(btnNewTournament)).addGroup(jPanelTopLayout.createSequentialGroup().addGroup(jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(filterBar1,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(btnQuickStart)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(filterBar2,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE))).addContainerGap()));
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  add(jPanelTop,gridBagConstraints);
  jSplitPane1.setBorder(null);
  jSplitPane1.setDividerSize(10);
  jSplitPane1.setResizeWeight(1.0);
  jSplitPaneTables.setBorder(null);
  jSplitPaneTables.setDividerSize(10);
  jSplitPaneTables.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
  jSplitPaneTables.setResizeWeight(0.5);
  jScrollPaneTablesActive.setBorder(null);
  jScrollPaneTablesActive.setViewportBorder(null);
  tableTables.setModel(this.tableModel);
  jScrollPaneTablesActive.setViewportView(tableTables);
  jSplitPaneTables.setLeftComponent(jScrollPaneTablesActive);
  jScrollPaneTablesFinished.setBorder(null);
  jScrollPaneTablesFinished.setViewportBorder(null);
  jScrollPaneTablesFinished.setMinimumSize(new java.awt.Dimension(23,0));
  tableCompleted.setModel(this.matchesModel);
  jScrollPaneTablesFinished.setViewportView(tableCompleted);
  jSplitPaneTables.setRightComponent(jScrollPaneTablesFinished);
  javax.swing.GroupLayout jPanelTablesLayout=new javax.swing.GroupLayout(jPanelTables);
  jPanelTables.setLayout(jPanelTablesLayout);
  jPanelTablesLayout.setHorizontalGroup(jPanelTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSplitPaneTables,javax.swing.GroupLayout.DEFAULT_SIZE,23,Short.MAX_VALUE));
  jPanelTablesLayout.setVerticalGroup(jPanelTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSplitPaneTables,javax.swing.GroupLayout.DEFAULT_SIZE,643,Short.MAX_VALUE));
  jSplitPane1.setLeftComponent(jPanelTables);
  jSplitPane1.setRightComponent(chatPanelMain);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridy=1;
  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  gridBagConstraints.weightx=1.0;
  gridBagConstraints.weighty=1.0;
  add(jSplitPane1,gridBagConstraints);
  jPanelBottom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jPanelBottom.setPreferredSize(new java.awt.Dimension(664,39));
  jLabel1.setFont(new java.awt.Font("Tahoma",1,11));
  jLabel1.setText("Message of the Day:");
  jLabel1.setAlignmentY(0.3F);
  jLabel2.setText("You are playing Mage version 0.7.5. Welcome! -- Mage dev team --");
  jButtonNext.setText("Next");
  jButtonNext.setMaximumSize(new java.awt.Dimension(55,25));
  jButtonNext.setMinimumSize(new java.awt.Dimension(55,25));
  jButtonNext.setPreferredSize(new java.awt.Dimension(55,25));
  jButtonNext.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonNextActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout jPanelBottomLayout=new javax.swing.GroupLayout(jPanelBottom);
  jPanelBottom.setLayout(jPanelBottomLayout);
  jPanelBottomLayout.setHorizontalGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanelBottomLayout.createSequentialGroup().addComponent(jButtonNext,javax.swing.GroupLayout.PREFERRED_SIZE,65,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2,javax.swing.GroupLayout.DEFAULT_SIZE,1350,Short.MAX_VALUE).addContainerGap()));
  jPanelBottomLayout.setVerticalGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanelBottomLayout.createSequentialGroup().addGroup(jPanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonNext,javax.swing.GroupLayout.PREFERRED_SIZE,17,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2).addComponent(jLabel1)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridy=2;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  add(jPanelBottom,gridBagConstraints);
}
