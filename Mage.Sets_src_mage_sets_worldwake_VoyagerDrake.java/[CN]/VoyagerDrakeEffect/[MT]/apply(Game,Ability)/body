{
  FilterCreaturePermanent filter=new FilterCreaturePermanent();
  filter.add(new CardTypePredicate(CardType.CREATURE));
  Player you=game.getPlayer(source.getControllerId());
  Permanent permanent=game.getPermanent(source.getSourceId());
  if (permanent != null) {
    for (    Ability ability : permanent.getAbilities()) {
      if (ability instanceof MultikickerAbility) {
        int count=Math.min(game.getBattlefield().countAll(filter,game),((MultikickerAbility)ability).getActivateCount());
        TargetCreaturePermanent target=new TargetCreaturePermanent(0,count,filter,false);
        if (you != null) {
          if (target.canChoose(source.getControllerId(),game) && target.choose(Constants.Outcome.AddAbility,source.getControllerId(),source.getId(),game)) {
            if (!target.getTargets().isEmpty()) {
              List<UUID> targets=target.getTargets();
              for (              UUID targetId : targets) {
                Permanent creature=game.getPermanent(targetId);
                if (creature != null) {
                  ContinuousEffect effect=new GainAbilityTargetEffect(FlyingAbility.getInstance(),Constants.Duration.EndOfTurn);
                  effect.setTargetPointer(new FixedTarget(creature.getId()));
                  game.addEffect(effect,source);
                }
              }
              return true;
            }
          }
        }
      }
    }
  }
  return false;
}
