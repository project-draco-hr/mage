{
  boolean changed=false;
  for (  CardView card : cardsView.values()) {
    if (!cards.containsKey(card.getId())) {
      addCard(card,bigCard,gameId);
      changed=true;
    }
    cards.get(card.getId()).update(card);
  }
  for (Iterator<Entry<UUID,MageCard>> i=cards.entrySet().iterator(); i.hasNext(); ) {
    Entry<UUID,MageCard> entry=i.next();
    if (!cardsView.containsKey(entry.getKey())) {
      removeCard(entry.getKey());
      i.remove();
      changed=true;
    }
  }
  if (!mouseHandlingEnabled) {
synchronized (this) {
      if (!mouseHandlingEnabled) {
        mouseHandlingEnabled=true;
        jScrollPane1.addMouseListener(new MageMouseAdapter(cardArea,gameId));
        jScrollPane1.addMouseMotionListener(new MageMouseMotionAdapter(cardArea,bigCard));
      }
    }
  }
  cardArea.setPreferredSize(new Dimension(cards.size() * Config.dimensions.frameWidth,Config.dimensions.frameHeight));
  cardArea.revalidate();
  cardArea.repaint();
  this.revalidate();
  this.repaint();
  if (changed) {
    layoutCards(Config.dimensions);
  }
  return changed;
}
