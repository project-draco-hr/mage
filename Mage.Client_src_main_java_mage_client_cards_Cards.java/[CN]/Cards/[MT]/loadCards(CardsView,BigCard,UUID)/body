{
  boolean changed=false;
  for (Iterator<Entry<UUID,MageCard>> i=cards.entrySet().iterator(); i.hasNext(); ) {
    Entry<UUID,MageCard> entry=i.next();
    if (!cardsView.containsKey(entry.getKey())) {
      removeCard(entry.getKey());
      i.remove();
      changed=true;
    }
  }
  for (  CardView card : cardsView.values()) {
    if (dontDisplayTapped) {
      if (card instanceof PermanentView) {
        ((PermanentView)card).overrideTapped(false);
      }
    }
    if (card instanceof StackAbilityView) {
      CardView tmp=((StackAbilityView)card).getSourceCard();
      tmp.overrideRules(card.getRules());
      tmp.setIsAbility(true);
      tmp.overrideTargets(card.getTargets());
      tmp.overrideId(card.getId());
      card=tmp;
    }
    if (!cards.containsKey(card.getId())) {
      addCard(card,bigCard,gameId);
      changed=true;
    }
    cards.get(card.getId()).update(card);
  }
  if (changed) {
    layoutCards(getCardDimension());
  }
  if (!isVisibleIfEmpty) {
    cardArea.setVisible(cards.size() > 0);
  }
  cardArea.setPreferredSize(new Dimension((int)(cards.size() * (getCardDimension().getWidth() + GAP_X)),(int)(getCardDimension().getHeight())));
  cardArea.revalidate();
  cardArea.repaint();
  this.revalidate();
  this.repaint();
  return changed;
}
