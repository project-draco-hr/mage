{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent sourceObject=game.getPermanentOrLKIBattlefield(source.getSourceId());
  if (controller != null && sourceObject != null) {
    UUID defendingPlayerId=game.getCombat().getDefendingPlayerId(source.getSourceId(),game);
    for (    UUID playerId : game.getState().getPlayersInRange(controller.getId(),game)) {
      if (playerId != defendingPlayerId && controller.hasOpponent(playerId,game)) {
        Player opponent=game.getPlayer(playerId);
        if (opponent != null && controller.chooseUse(Outcome.PutCreatureInPlay,"Put a copy of " + sourceObject.getIdName() + " onto battlefield attacking "+ opponent.getName()+ "?",source,game)) {
          PutTokenOntoBattlefieldCopyTargetEffect effect=new PutTokenOntoBattlefieldCopyTargetEffect(controller.getId(),null,false,1,true,true,playerId);
          effect.setTargetPointer(new FixedTarget(sourceObject,game));
          effect.apply(game,source);
          for (          Permanent tokenPermanent : effect.getAddedPermanent()) {
            ExileTargetEffect exileEffect=new ExileTargetEffect();
            exileEffect.setTargetPointer(new FixedTarget(tokenPermanent,game));
            DelayedTriggeredAbility delayedAbility=new AtTheEndOfCombatDelayedTriggeredAbility(exileEffect);
            delayedAbility.setSourceId(source.getSourceId());
            delayedAbility.setControllerId(source.getControllerId());
            delayedAbility.setSourceObject(source.getSourceObject(game),game);
            game.addDelayedTriggeredAbility(delayedAbility);
          }
        }
      }
    }
    return true;
  }
  return false;
}
