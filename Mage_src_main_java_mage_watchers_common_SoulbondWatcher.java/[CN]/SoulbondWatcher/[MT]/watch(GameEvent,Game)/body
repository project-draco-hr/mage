{
  if (event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD) {
    Permanent permanent=game.getPermanent(event.getTargetId());
    if (permanent != null && permanent.getCardType().contains(CardType.CREATURE)) {
      if (permanent.getAbilities().contains(SoulbondAbility.getInstance())) {
        Player controller=game.getPlayer(permanent.getControllerId());
        if (controller != null) {
          Cards cards=new CardsImpl();
          cards.add(permanent);
          controller.lookAtCards("Soulbond",cards,game);
          if (controller.chooseUse(Outcome.Benefit,"Use Soulbond?",null,game)) {
            TargetControlledPermanent target=new TargetControlledPermanent(filter);
            target.setNotTarget(true);
            if (target.canChoose(permanent.getId(),controller.getId(),game)) {
              if (controller.choose(Outcome.Benefit,target,permanent.getId(),game)) {
                Permanent chosen=game.getPermanent(target.getFirstTarget());
                if (chosen != null) {
                  chosen.setPairedCard(permanent.getId());
                  permanent.setPairedCard(chosen.getId());
                  if (!game.isSimulation()) {
                    game.informPlayers(new StringBuilder(controller.getLogName()).append(" souldbonds ").append(permanent.getLogName()).append(" with ").append(chosen.getName()).toString());
                  }
                }
              }
            }
          }
        }
      }
      if (permanent.getPairedCard() == null) {
        Player controller=null;
        for (        Permanent chosen : game.getBattlefield().getActivePermanents(filter,permanent.getControllerId(),permanent.getId(),game)) {
          if (!chosen.getId().equals(permanent.getId()) && chosen.getAbilities().contains(SoulbondAbility.getInstance()) && chosen.getPairedCard() == null) {
            if (controller == null) {
              controller=game.getPlayer(permanent.getControllerId());
            }
            if (controller != null) {
              Cards cards=new CardsImpl();
              cards.add(chosen);
              controller.lookAtCards("Soulbond",cards,game);
              if (controller.chooseUse(Outcome.Benefit,"Use Soulbond for recent " + permanent.getLogName() + "?",SoulbondAbility.getInstance(),game)) {
                chosen.setPairedCard(permanent.getId());
                permanent.setPairedCard(chosen.getId());
                if (!game.isSimulation()) {
                  game.informPlayers(new StringBuilder(controller.getLogName()).append(" souldbonds ").append(permanent.getLogName()).append(" with ").append(chosen.getName()).toString());
                }
                break;
              }
            }
          }
        }
      }
    }
  }
}
