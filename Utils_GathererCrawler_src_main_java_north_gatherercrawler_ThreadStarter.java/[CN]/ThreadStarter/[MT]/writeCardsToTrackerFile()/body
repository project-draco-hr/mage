{
  Set<String> knownSets=new TreeSet<String>();
  knownSets.add("Fifth Edition");
  knownSets.add("Eighth Edition");
  knownSets.add("Ninth Edition");
  knownSets.add("Tenth Edition");
  knownSets.add("Magic 2010");
  knownSets.add("Magic 2011");
  knownSets.add("Magic 2012");
  knownSets.add("Planechase");
  knownSets.add("Duel Decks: Elspeth vs. Tezzeret");
  knownSets.add("Tempest");
  knownSets.add("Urza's Saga");
  knownSets.add("Invasion");
  knownSets.add("Planeshift");
  knownSets.add("Apocalypse");
  knownSets.add("Onslaught");
  knownSets.add("Mirrodin");
  knownSets.add("Darksteel");
  knownSets.add("Fifth Dawn");
  knownSets.add("Champions of Kamigawa");
  knownSets.add("Betrayers of Kamigawa");
  knownSets.add("Saviors of Kamigawa");
  knownSets.add("Ravnica: City of Guilds");
  knownSets.add("Guildpact");
  knownSets.add("Dissension");
  knownSets.add("Time Spiral");
  knownSets.add("Time Spiral \"Timeshifted\"");
  knownSets.add("Planar Chaos");
  knownSets.add("Future Sight");
  knownSets.add("Lorwyn");
  knownSets.add("Morningtide");
  knownSets.add("Shadowmoor");
  knownSets.add("Eventide");
  knownSets.add("Shards of Alara");
  knownSets.add("Conflux");
  knownSets.add("Alara Reborn");
  knownSets.add("Zendikar");
  knownSets.add("Worldwake");
  knownSets.add("Rise of the Eldrazi");
  knownSets.add("Scars of Mirrodin");
  knownSets.add("Mirrodin Besieged");
  knownSets.add("New Phyrexia");
  knownSets.add("Innistrad");
  knownSets.add("Dark Ascension");
  knownSets.add("Avacyn Restored");
  try {
    FileWriter fstream=new FileWriter("mtg-cards-tracker-data.txt");
    BufferedWriter out=new BufferedWriter(fstream);
    Iterator<Card> iterator=sortedCards.iterator();
    while (iterator.hasNext()) {
      Card card=iterator.next();
      if (knownSets.contains(card.getExpansion())) {
        String cardLine=card.toString();
        out.write(replaceSpecialChards(cardLine));
        out.newLine();
        if (card.getOtherSide() != null) {
          cardLine=card.getOtherSide().toString();
          out.write(replaceSpecialChards(cardLine));
          out.newLine();
        }
      }
    }
    out.close();
  }
 catch (  Exception e) {
    System.err.println("Error: " + e.getMessage());
  }
}
