{
  Graphics2D g2d=(Graphics2D)g;
  g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  if (alpha != 1.0f) {
    AlphaComposite composite=AlphaComposite.getInstance(AlphaComposite.SRC_ATOP,alpha);
    g2d.setComposite(composite);
  }
  if (!hasImage) {
    g2d.setColor(new Color(30,200,200,120));
  }
 else {
    g2d.setColor(new Color(0,0,0,0));
  }
  int cornerSize=Math.max(4,Math.round(cardWidth * ROUNDED_CORNER_SIZE));
  g2d.fillRoundRect(cardXOffset,cardYOffset,cardWidth,cardHeight,cornerSize,cornerSize);
  if (isSelected) {
    g2d.setColor(Color.green);
    g2d.fillRoundRect(cardXOffset + 1,cardYOffset + 1,cardWidth - 2,cardHeight - 2,cornerSize,cornerSize);
  }
 else   if (isChoosable) {
    g2d.setColor(new Color(250,250,0,230));
    g2d.fillRoundRect(cardXOffset + 1,cardYOffset + 1,cardWidth - 2,cardHeight - 2,cornerSize,cornerSize);
  }
  if (isPlayable) {
    g2d.setColor(new Color(250,250,0,200));
    g2d.fillRoundRect(cardXOffset + 1,cardYOffset + 1,cardWidth - 2,cardHeight - 2,cornerSize,cornerSize);
  }
  if (canAttack) {
    g2d.setColor(new Color(0,0,150,180));
    g2d.fillRoundRect(cardXOffset + 1,cardYOffset + 1,cardWidth - 2,cardHeight - 2,cornerSize,cornerSize);
  }
}
