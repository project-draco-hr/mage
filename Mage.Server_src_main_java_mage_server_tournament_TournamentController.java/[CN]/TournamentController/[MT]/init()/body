{
  tournament.addTableEventListener(new Listener<TableEvent>(){
    @Override public void event(    TableEvent event){
switch (event.getEventType()) {
case INFO:
        ChatManager.getInstance().broadcast(chatId,"",event.getMessage(),MessageColor.BLACK);
      logger.finest(tournament.getId() + " " + event.getMessage());
    break;
case START_DRAFT:
  startDraft(event.getDraft());
break;
case START_MATCH:
startMatch(event.getPair(),event.getMatchOptions());
break;
case SUBMIT_DECK:
submitDeck(event.getPlayerId(),event.getDeck());
break;
}
}
}
);
tournament.addPlayerQueryEventListener(new Listener<PlayerQueryEvent>(){
@Override public void event(PlayerQueryEvent event){
switch (event.getQueryType()) {
case CONSTRUCT:
construct(event.getPlayerId(),event.getDeck(),event.getMax());
break;
}
}
}
);
for (TournamentPlayer player : tournament.getPlayers()) {
if (!player.getPlayer().isHuman()) {
player.setJoined();
logger.info("player " + player.getPlayer().getId() + " has joined tournament "+ tournament.getId());
ChatManager.getInstance().broadcast(chatId,"",player.getPlayer().getName() + " has joined the tournament",MessageColor.BLACK);
}
}
checkStart();
}
