{
  if (currentGame != null) {
    logger.debug("Resetting previous game and creating new one!");
    currentGame=null;
    System.gc();
  }
  Game game=new TwoPlayerDuel(MultiplayerAttackOption.LEFT,RangeOfInfluence.ONE,0,20);
  playerA=createNewPlayer("PlayerA");
  playerA.setTestMode(true);
  logger.debug("Loading deck...");
  Deck deck=Deck.load(DeckImporterUtil.importDeck("RB Aggro.dck"),false,false);
  logger.debug("Done!");
  if (deck.getCards().size() < 40) {
    throw new IllegalArgumentException("Couldn't load deck, deck size=" + deck.getCards().size());
  }
  game.loadCards(deck.getCards(),playerA.getId());
  game.addPlayer(playerA,deck);
  playerB=createNewPlayer("PlayerB");
  playerB.setTestMode(true);
  Deck deck2=Deck.load(DeckImporterUtil.importDeck("RB Aggro.dck"),false,false);
  if (deck2.getCards().size() < 40) {
    throw new IllegalArgumentException("Couldn't load deck, deck size=" + deck2.getCards().size());
  }
  game.loadCards(deck2.getCards(),playerB.getId());
  game.addPlayer(playerB,deck2);
  activePlayer=playerA;
  currentGame=game;
  stopOnTurn=2;
  stopAtStep=PhaseStep.UNTAP;
  for (  Player player : currentGame.getPlayers().values()) {
    TestPlayer testPlayer=(TestPlayer)player;
    getCommands(testPlayer).clear();
    getLibraryCards(testPlayer).clear();
    getHandCards(testPlayer).clear();
    getBattlefieldCards(testPlayer).clear();
    getGraveCards(testPlayer).clear();
  }
  gameOptions=new GameOptions();
}
