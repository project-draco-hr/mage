{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    Permanent permanent=game.getPermanent(this.getTargetPointer().getFirst(game,source));
    if (permanent != null) {
      if (permanent.getCounters(game).size() > 0) {
        if (permanent.getCounters(game).size() == 1) {
          for (          Counter counter : permanent.getCounters(game).values()) {
            Counter newCounter=new Counter(counter.getName());
            permanent.addCounters(newCounter,game);
          }
        }
 else {
          Choice choice=new ChoiceImpl(true);
          Set<String> choices=new HashSet<>(permanent.getCounters(game).size());
          for (          Counter counter : permanent.getCounters(game).values()) {
            choices.add(counter.getName());
          }
          choice.setChoices(choices);
          choice.setMessage("Choose a counter");
          controller.choose(Outcome.Benefit,choice,game);
          for (          Counter counter : permanent.getCounters(game).values()) {
            if (counter.getName().equals(choice.getChoice())) {
              Counter newCounter=new Counter(counter.getName());
              permanent.addCounters(newCounter,game);
              break;
            }
          }
        }
      }
    }
 else {
      Player player=game.getPlayer(this.getTargetPointer().getFirst(game,source));
      if (player != null) {
        if (player.getCounters().size() > 0) {
          if (player.getCounters().size() == 1) {
            for (            Counter counter : player.getCounters().values()) {
              Counter newCounter=new Counter(counter.getName());
              player.addCounters(newCounter,game);
            }
          }
 else {
            Choice choice=new ChoiceImpl(true);
            Set<String> choices=new HashSet<>(player.getCounters().size());
            for (            Counter counter : player.getCounters().values()) {
              choices.add(counter.getName());
            }
            choice.setChoices(choices);
            choice.setMessage("Choose a counter");
            controller.choose(Outcome.Benefit,choice,game);
            for (            Counter counter : player.getCounters().values()) {
              if (counter.getName().equals(choice.getChoice())) {
                Counter newCounter=new Counter(counter.getName());
                player.addCounters(newCounter,game);
                break;
              }
            }
          }
        }
      }
    }
  }
  return false;
}
