{
  Set<UUID> controllers=new HashSet<UUID>();
  for (  UUID permanentId : targetPointer.getTargets(game,source)) {
    Permanent permanent=game.getPermanent(permanentId);
    if (permanent != null) {
      controllers.add(permanent.getControllerId());
    }
  }
  if (withSource) {
    controllers.add(source.getControllerId());
  }
  if (controllers.size() != 2) {
    this.discarded=true;
    return;
  }
  this.lockedControllers=new HashMap<UUID,UUID>();
  Iterator<UUID> it=controllers.iterator();
  UUID firstController=it.next();
  UUID secondController=it.next();
  if (withSource) {
    Permanent targetPermanent=game.getPermanent(targetPointer.getFirst(game,source));
    Permanent sourcePermanent=game.getPermanent(source.getSourceId());
    if (targetPermanent != null && sourcePermanent != null) {
      this.lockedControllers.put(targetPermanent.getId(),sourcePermanent.getControllerId());
      this.lockedControllers.put(sourcePermanent.getId(),targetPermanent.getControllerId());
    }
  }
 else {
    for (    UUID permanentId : targetPointer.getTargets(game,source)) {
      Permanent permanent=game.getPermanent(permanentId);
      if (permanent != null) {
        this.lockedControllers.put(permanent.getId(),permanent.getControllerId().equals(firstController) ? secondController : firstController);
      }
    }
  }
}
