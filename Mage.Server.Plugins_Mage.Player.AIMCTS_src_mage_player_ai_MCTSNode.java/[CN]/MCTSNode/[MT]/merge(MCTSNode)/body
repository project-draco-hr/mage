{
  if (!stateValue.equals(merge.stateValue)) {
    logger.info("mismatched merge states");
    return;
  }
  this.visits+=merge.visits;
  this.wins+=merge.wins;
  List<MCTSNode> mergeChildren=new ArrayList<MCTSNode>();
  for (  MCTSNode child : merge.children) {
    mergeChildren.add(child);
  }
  for (  MCTSNode child : children) {
    for (    MCTSNode mergeChild : mergeChildren) {
      if (mergeChild.action != null && child.action != null) {
        if (mergeChild.action.toString().equals(child.action.toString())) {
          if (!mergeChild.stateValue.equals(child.stateValue)) {
            logger.info("mismatched merge states");
            mergeChildren.remove(mergeChild);
          }
 else {
            child.merge(mergeChild);
            mergeChildren.remove(mergeChild);
          }
          break;
        }
      }
 else {
        if (mergeChild.combat.getValue().equals(child.combat.getValue())) {
          if (!mergeChild.stateValue.equals(child.stateValue)) {
            logger.info("mismatched merge states");
            mergeChildren.remove(mergeChild);
          }
 else {
            child.merge(mergeChild);
            mergeChildren.remove(mergeChild);
          }
          break;
        }
      }
    }
  }
  if (!mergeChildren.isEmpty()) {
    for (    MCTSNode child : mergeChildren) {
      child.parent=this;
      children.add(child);
    }
  }
}
