{
  boolean result;
  if (this.getCardType().contains(CardType.INSTANT) || this.getCardType().contains(CardType.SORCERY)) {
    int index=0;
    result=false;
    boolean legalParts=false;
    for (    SpellAbility spellAbility : this.spellAbilities) {
      legalParts|=spellAbilityHasLegalParts(spellAbility,game);
    }
    if (legalParts) {
      for (      SpellAbility spellAbility : this.spellAbilities) {
        if (spellAbilityHasLegalParts(spellAbility,game)) {
          for (          UUID modeId : spellAbility.getModes().getSelectedModes()) {
            spellAbility.getModes().setMode(spellAbility.getModes().get(modeId));
            if (spellAbility.getTargets().stillLegal(spellAbility,game)) {
              if (!spellAbility.getSpellAbilityType().equals(SpellAbilityType.SPLICE)) {
                updateOptionalCosts(index);
              }
              result|=spellAbility.resolve(game);
            }
          }
          index++;
        }
      }
      if (!copiedSpell) {
        for (        Effect effect : ability.getEffects()) {
          if (effect instanceof PostResolveEffect) {
            ((PostResolveEffect)effect).postResolve(card,ability,controllerId,game);
            return result;
          }
        }
        if (!card.isCopy() && game.getState().getZone(card.getId()) == Zone.STACK) {
          card.moveToZone(Zone.GRAVEYARD,ability.getId(),game,false);
        }
      }
      return result;
    }
    game.informPlayers(getName() + " has been fizzled.");
    counter(null,game);
    return false;
  }
 else   if (this.getCardType().contains(CardType.ENCHANTMENT) && this.getSubtype().contains("Aura")) {
    if (ability.getTargets().stillLegal(ability,game)) {
      updateOptionalCosts(0);
      boolean bestow=this.getSpellAbility() instanceof BestowAbility;
      if (bestow) {
        card.getCardType().remove(CardType.CREATURE);
      }
      if (card.putOntoBattlefield(game,fromZone,ability.getId(),controllerId)) {
        if (bestow) {
          card.getCardType().add(CardType.CREATURE);
        }
        game.getState().handleSimultaneousEvent(game);
        return ability.resolve(game);
      }
      if (bestow) {
        card.getCardType().add(CardType.CREATURE);
      }
      return false;
    }
    if (this.getSpellAbility() instanceof BestowAbility) {
      updateOptionalCosts(0);
      result=card.putOntoBattlefield(game,fromZone,ability.getId(),controllerId);
      game.getState().handleSimultaneousEvent(game);
      return result;
    }
 else {
      game.informPlayers(getName() + " has been fizzled.");
      counter(null,game);
      return false;
    }
  }
 else {
    updateOptionalCosts(0);
    result=card.putOntoBattlefield(game,fromZone,ability.getId(),controllerId);
    game.getState().handleSimultaneousEvent(game);
    return result;
  }
}
