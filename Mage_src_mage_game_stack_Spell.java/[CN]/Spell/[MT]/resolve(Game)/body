{
  boolean result;
  if (this.getCardType().contains(CardType.INSTANT) || this.getCardType().contains(CardType.SORCERY)) {
    int index=0;
    result=false;
    boolean legalParts=false;
    boolean notTargeted=true;
    for (    SpellAbility spellAbility : this.spellAbilities) {
      if (hasTargets(spellAbility,game)) {
        notTargeted=false;
        legalParts|=spellAbilityHasLegalParts(spellAbility,game);
      }
    }
    if (notTargeted || legalParts) {
      for (      SpellAbility spellAbility : this.spellAbilities) {
        if (spellAbilityHasLegalParts(spellAbility,game)) {
          for (          UUID modeId : spellAbility.getModes().getSelectedModes()) {
            spellAbility.getModes().setActiveMode(modeId);
            if (spellAbility.getTargets().stillLegal(spellAbility,game)) {
              if (!spellAbility.getSpellAbilityType().equals(SpellAbilityType.SPLICE)) {
                updateOptionalCosts(index);
              }
              result|=spellAbility.resolve(game);
            }
          }
          index++;
        }
      }
      if (game.getState().getZone(card.getMainCard().getId()) == Zone.STACK) {
        if (isCopy() == card.isCopy()) {
          Player player=game.getPlayer(getControllerId());
          if (player != null) {
            player.moveCards(card,Zone.STACK,Zone.GRAVEYARD,ability,game);
          }
        }
      }
      return result;
    }
    if (!game.isSimulation()) {
      game.informPlayers(getName() + " has been fizzled.");
    }
    counter(null,game);
    return false;
  }
 else   if (this.getCardType().contains(CardType.ENCHANTMENT) && this.getSubtype().contains("Aura")) {
    if (ability.getTargets().stillLegal(ability,game)) {
      updateOptionalCosts(0);
      boolean bestow=ability instanceof BestowAbility;
      if (bestow) {
        card.getCardType().remove(CardType.CREATURE);
        card.getSubtype().add("Aura");
      }
      if (card.putOntoBattlefield(game,Zone.STACK,ability.getSourceId(),controllerId)) {
        if (bestow) {
          Permanent permanent=game.getPermanent(card.getId());
          if (permanent != null && permanent instanceof PermanentCard) {
            permanent.setSpellAbility(ability);
            ((PermanentCard)permanent).getCard().getCardType().add(CardType.CREATURE);
            ((PermanentCard)permanent).getCard().getSubtype().remove("Aura");
          }
        }
        return ability.resolve(game);
      }
      if (bestow) {
        card.getCardType().add(CardType.CREATURE);
      }
      return false;
    }
    if (this.getSpellAbility() instanceof BestowAbility) {
      updateOptionalCosts(0);
      result=card.putOntoBattlefield(game,Zone.STACK,ability.getSourceId(),controllerId);
      return result;
    }
 else {
      if (!game.isSimulation()) {
        game.informPlayers(getName() + " has been fizzled.");
      }
      counter(null,game);
      return false;
    }
  }
 else {
    updateOptionalCosts(0);
    result=card.putOntoBattlefield(game,Zone.STACK,ability.getSourceId(),controllerId,false,faceDown);
    return result;
  }
}
