{
  Player player=game.getPlayer(playerId);
  if (player != null) {
    for (    SpellAbility spellAbility : spellAbilities) {
      for (      Target target : spellAbility.getTargets()) {
        Target newTarget=target.copy();
        newTarget.clearChosen();
        for (        UUID targetId : target.getTargets()) {
          MageObject object=game.getObject(targetId);
          String name=null;
          if (object == null) {
            Player targetPlayer=game.getPlayer(targetId);
            if (targetPlayer != null) {
              name=targetPlayer.getName();
            }
          }
 else {
            name=object.getName();
          }
          if (name != null && (forceChange || player.chooseUse(spellAbility.getEffects().get(0).getOutcome(),"Change current target (" + name + ")?",game))) {
            if (forceChange && target.possibleTargets(this.getSourceId(),playerId,game).size() > 1) {
              int iteration=0;
              do {
                if (iteration > 0) {
                  game.informPlayer(player,"You may only select exactly one target that must be different from the origin target!");
                }
                iteration++;
                newTarget.clearChosen();
                player.chooseTarget(spellAbility.getEffects().get(0).getOutcome(),newTarget,spellAbility,game);
              }
 while (targetId.equals(newTarget.getFirstTarget()) || newTarget.getTargets().size() != 1);
            }
 else {
              if (!player.chooseTarget(spellAbility.getEffects().get(0).getOutcome(),newTarget,spellAbility,game)) {
                newTarget.addTarget(targetId,spellAbility,game,false);
              }
            }
          }
 else {
            newTarget.addTarget(targetId,spellAbility,game,false);
          }
        }
        target.clearChosen();
        for (        UUID newTargetId : newTarget.getTargets()) {
          target.addTarget(newTargetId,spellAbility,game,false);
        }
      }
    }
    return true;
  }
  return false;
}
