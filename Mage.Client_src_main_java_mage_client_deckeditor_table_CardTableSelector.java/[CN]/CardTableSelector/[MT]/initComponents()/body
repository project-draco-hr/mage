{
  tbColor=new javax.swing.JToolBar();
  rdoRed=new javax.swing.JRadioButton();
  rdoGreen=new javax.swing.JRadioButton();
  rdoBlue=new javax.swing.JRadioButton();
  rdoBlack=new javax.swing.JRadioButton();
  rdoWhite=new javax.swing.JRadioButton();
  rdoColorless=new javax.swing.JRadioButton();
  cbExpansionSet=new javax.swing.JComboBox();
  btnBooster=new javax.swing.JButton();
  btnClear=new javax.swing.JButton();
  jScrollPane1=new javax.swing.JScrollPane();
  mainTable=new JTable();
  tbTypes=new javax.swing.JToolBar();
  rdoLand=new javax.swing.JRadioButton();
  rdoCreatures=new javax.swing.JRadioButton();
  rdoArtifacts=new javax.swing.JRadioButton();
  rdoEnchantments=new javax.swing.JRadioButton();
  rdoInstants=new javax.swing.JRadioButton();
  rdoSorceries=new javax.swing.JRadioButton();
  rdoPlaneswalkers=new javax.swing.JRadioButton();
  chkPiles=new javax.swing.JCheckBox();
  cbSortBy=new javax.swing.JComboBox();
  tbColor.setFloatable(false);
  tbColor.setRollover(true);
  rdoRed.setSelected(true);
  rdoRed.setText("Red ");
  rdoRed.setFocusable(false);
  rdoRed.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoRed.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoRed.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoRedActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoRed);
  rdoGreen.setSelected(true);
  rdoGreen.setText("Green ");
  rdoGreen.setFocusable(false);
  rdoGreen.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoGreen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoGreen.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoGreenActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoGreen);
  rdoBlue.setSelected(true);
  rdoBlue.setText("Blue ");
  rdoBlue.setFocusable(false);
  rdoBlue.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoBlue.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoBlue.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoBlueActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoBlue);
  rdoBlack.setSelected(true);
  rdoBlack.setText("Black ");
  rdoBlack.setFocusable(false);
  rdoBlack.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoBlack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoBlack.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoBlackActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoBlack);
  rdoWhite.setSelected(true);
  rdoWhite.setText("White ");
  rdoWhite.setFocusable(false);
  rdoWhite.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoWhite.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoWhite.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoWhiteActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoWhite);
  rdoColorless.setSelected(true);
  rdoColorless.setText("Colorless ");
  rdoColorless.setFocusable(false);
  rdoColorless.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoColorless.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoColorless.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoColorlessActionPerformed(evt);
    }
  }
);
  tbColor.add(rdoColorless);
  cbExpansionSet.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1","Item 2","Item 3","Item 4"}));
  cbExpansionSet.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbExpansionSetActionPerformed(evt);
    }
  }
);
  tbColor.add(cbExpansionSet);
  btnBooster.setText("Open Booster");
  btnBooster.setFocusable(false);
  btnBooster.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnBooster.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnBooster.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBoosterActionPerformed(evt);
    }
  }
);
  tbColor.add(btnBooster);
  btnClear.setText("Clear");
  btnClear.setFocusable(false);
  btnClear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  btnClear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  btnClear.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnClearActionPerformed(evt);
    }
  }
);
  tbColor.add(btnClear);
  mainModel=new TableModel();
  mainModel.addListeners(mainTable);
  mainTable.setModel(mainModel);
  mainTable.setForeground(Color.white);
  DefaultTableCellRenderer myRenderer=(DefaultTableCellRenderer)mainTable.getDefaultRenderer(String.class);
  myRenderer.setBackground(new Color(0,0,0,100));
  mainTable.getColumnModel().getColumn(0).setMaxWidth(0);
  mainTable.getColumnModel().getColumn(0).setPreferredWidth(10);
  mainTable.getColumnModel().getColumn(1).setPreferredWidth(110);
  mainTable.getColumnModel().getColumn(2).setPreferredWidth(90);
  mainTable.getColumnModel().getColumn(3).setPreferredWidth(50);
  mainTable.getColumnModel().getColumn(4).setPreferredWidth(170);
  mainTable.getColumnModel().getColumn(5).setPreferredWidth(30);
  mainTable.getColumnModel().getColumn(6).setPreferredWidth(15);
  mainTable.getColumnModel().getColumn(7).setPreferredWidth(15);
  jScrollPane1.setViewportView(mainTable);
  tbTypes.setFloatable(false);
  tbTypes.setRollover(true);
  rdoLand.setSelected(true);
  rdoLand.setFocusable(false);
  rdoLand.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoLand.setLabel("Land ");
  rdoLand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoLand.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoLandActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoLand);
  rdoCreatures.setSelected(true);
  rdoCreatures.setFocusable(false);
  rdoCreatures.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoCreatures.setLabel("Creatures ");
  rdoCreatures.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoCreatures.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoCreaturesActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoCreatures);
  rdoArtifacts.setSelected(true);
  rdoArtifacts.setText("Artifacts ");
  rdoArtifacts.setFocusable(false);
  rdoArtifacts.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoArtifacts.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoArtifacts.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoArtifactsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoArtifacts);
  rdoEnchantments.setSelected(true);
  rdoEnchantments.setText("Enchantments ");
  rdoEnchantments.setFocusable(false);
  rdoEnchantments.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoEnchantments.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoEnchantments.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoEnchantmentsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoEnchantments);
  rdoInstants.setSelected(true);
  rdoInstants.setText("Instants ");
  rdoInstants.setFocusable(false);
  rdoInstants.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoInstants.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoInstants.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoInstantsActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoInstants);
  rdoSorceries.setSelected(true);
  rdoSorceries.setText("Sorceries ");
  rdoSorceries.setFocusable(false);
  rdoSorceries.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoSorceries.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoSorceries.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoSorceriesActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoSorceries);
  rdoPlaneswalkers.setSelected(true);
  rdoPlaneswalkers.setText("Planeswalkers ");
  rdoPlaneswalkers.setFocusable(false);
  rdoPlaneswalkers.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  rdoPlaneswalkers.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  rdoPlaneswalkers.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rdoPlaneswalkersActionPerformed(evt);
    }
  }
);
  tbTypes.add(rdoPlaneswalkers);
  chkPiles.setText("Piles");
  chkPiles.setFocusable(false);
  chkPiles.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  chkPiles.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  chkPiles.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      chkPilesActionPerformed(evt);
    }
  }
);
  tbTypes.add(chkPiles);
  cbSortBy.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1","Item 2","Item 3","Item 4"}));
  cbSortBy.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbSortByActionPerformed(evt);
    }
  }
);
  tbTypes.add(cbSortBy);
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(this);
  this.setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(tbColor,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE).addComponent(tbTypes,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,917,Short.MAX_VALUE));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(tbColor,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0,0,0).addComponent(tbTypes,javax.swing.GroupLayout.PREFERRED_SIZE,25,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0,0,0).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,316,Short.MAX_VALUE)));
}
