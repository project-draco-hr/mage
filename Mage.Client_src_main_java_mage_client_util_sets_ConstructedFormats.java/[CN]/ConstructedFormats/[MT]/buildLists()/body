{
  final Map<String,ExpansionInfo> expansionInfo=new HashMap<>();
  formats.clear();
  for (  ExpansionInfo set : ExpansionRepository.instance.getAll()) {
    expansionInfo.put(set.getName(),set);
    formats.add(set.getName());
    if (set.getType().equals(SetType.CORE) || set.getType().equals(SetType.EXPANSION) || set.getType().equals(SetType.SUPPLEMENTAL_STANDARD_LEGAL)) {
      if (STANDARD_CARDS.getSetCodes().contains(set.getCode())) {
        if (underlyingSetCodesPerFormat.get(STANDARD) == null) {
          underlyingSetCodesPerFormat.put(STANDARD,new ArrayList<String>());
        }
        underlyingSetCodesPerFormat.get(STANDARD).add(set.getCode());
      }
      if (set.getReleaseDate().after(extendedDate)) {
        if (underlyingSetCodesPerFormat.get(EXTENDED) == null) {
          underlyingSetCodesPerFormat.put(EXTENDED,new ArrayList<String>());
        }
        underlyingSetCodesPerFormat.get(EXTENDED).add(set.getCode());
      }
      if (set.getReleaseDate().after(frontierDate)) {
        if (underlyingSetCodesPerFormat.get(FRONTIER) == null) {
          underlyingSetCodesPerFormat.put(FRONTIER,new ArrayList<String>());
        }
        underlyingSetCodesPerFormat.get(FRONTIER).add(set.getCode());
      }
      if (set.getReleaseDate().after(modernDate)) {
        if (underlyingSetCodesPerFormat.get(MODERN) == null) {
          underlyingSetCodesPerFormat.put(MODERN,new ArrayList<String>());
        }
        underlyingSetCodesPerFormat.get(MODERN).add(set.getCode());
      }
    }
    if (underlyingSetCodesPerFormat.get(set.getName()) == null) {
      underlyingSetCodesPerFormat.put(set.getName(),new ArrayList<String>());
    }
    underlyingSetCodesPerFormat.get(set.getName()).add(set.getCode());
    if (set.getType().equals(SetType.EXPANSION) && set.getBlockName() != null) {
      String blockDisplayName=getBlockDisplayName(set.getBlockName());
      if (underlyingSetCodesPerFormat.get(blockDisplayName) == null) {
        underlyingSetCodesPerFormat.put(blockDisplayName,new ArrayList<String>());
      }
      underlyingSetCodesPerFormat.get(blockDisplayName).add(set.getCode());
      if (expansionInfo.get(blockDisplayName) == null) {
        expansionInfo.put(blockDisplayName,set);
        formats.add(blockDisplayName);
      }
      if (expansionInfo.get(blockDisplayName).getReleaseDate().after(set.getReleaseDate())) {
        expansionInfo.put(blockDisplayName,set);
      }
    }
    if (set.getType().equals(SetType.SUPPLEMENTAL) && set.getBlockName() != null) {
      if (expansionInfo.get(set.getBlockName()) == null) {
        expansionInfo.put(set.getBlockName(),set);
      }
      if (expansionInfo.get(set.getBlockName()).getReleaseDate().before(set.getReleaseDate())) {
        expansionInfo.put(set.getBlockName(),set);
      }
    }
  }
  Collections.sort(formats,new Comparator<String>(){
    @Override public int compare(    String name1,    String name2){
      ExpansionInfo expansionInfo1=expansionInfo.get(name1);
      ExpansionInfo expansionInfo2=expansionInfo.get(name2);
      if (expansionInfo1.getType().compareTo(expansionInfo2.getType()) == 0) {
        SetType setType=expansionInfo1.getType();
        if (setType.equals(SetType.EXPANSION)) {
          if (expansionInfo1.getBlockName() == null) {
            if (expansionInfo2.getBlockName() == null) {
              return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
            }
            return 1;
          }
          if (expansionInfo2.getBlockName() == null) {
            return -1;
          }
          if (name1.endsWith("Block") && name2.endsWith("Block")) {
            return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
          }
          if (name1.endsWith("Block")) {
            if (expansionInfo1.getBlockName().equals(expansionInfo2.getBlockName())) {
              return -1;
            }
          }
          if (name2.endsWith("Block")) {
            if (expansionInfo1.getBlockName().equals(expansionInfo2.getBlockName())) {
              return 1;
            }
          }
          return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
        }
 else         if (setType.equals(SetType.SUPPLEMENTAL)) {
          if (expansionInfo1.getBlockName() == null) {
            if (expansionInfo2.getBlockName() == null) {
              return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
            }
            return -1;
          }
          if (expansionInfo2.getBlockName() == null) {
            return 1;
          }
          if (expansionInfo1.getBlockName().equals(expansionInfo2.getBlockName())) {
            if (expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate()) == 0) {
              return name1.compareTo(name2);
            }
            return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
          }
          if (expansionInfo1.getBlockName().startsWith("Duel Decks")) {
            if (expansionInfo1.getBlockName().startsWith("Duel Decks: Anthology")) {
              return 1;
            }
            return 1;
          }
          if (expansionInfo2.getBlockName().startsWith("Duel Decks")) {
            return -1;
          }
          ExpansionInfo blockInfo1=expansionInfo.get(expansionInfo1.getBlockName());
          ExpansionInfo blockInfo2=expansionInfo.get(expansionInfo2.getBlockName());
          return blockInfo2.getReleaseDate().compareTo(blockInfo1.getReleaseDate());
        }
 else {
          return expansionInfo2.getReleaseDate().compareTo(expansionInfo1.getReleaseDate());
        }
      }
      return expansionInfo1.getType().compareTo(expansionInfo2.getType());
    }
  }
);
  if (!formats.isEmpty()) {
    formats.add(0,MODERN);
    formats.add(0,FRONTIER);
    formats.add(0,EXTENDED);
    formats.add(0,STANDARD);
  }
  formats.add(0,ALL);
}
