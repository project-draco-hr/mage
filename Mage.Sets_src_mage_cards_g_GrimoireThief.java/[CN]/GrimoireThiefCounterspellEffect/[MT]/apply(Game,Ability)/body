{
  Cards cards=new CardsImpl();
  MageObject sourceObject=game.getObject(source.getSourceId());
  Set<UUID> exileZones=(Set<UUID>)game.getState().getValue(GrimoireThief.VALUE_PREFIX + source.getSourceId().toString());
  if (exileZones != null) {
    for (    ExileZone exileZone : game.getExile().getExileZones()) {
      if (!exileZone.isEmpty()) {
        cards.addAll(exileZone.getCards(game));
      }
    }
    for (    Card card : cards.getCards(game)) {
      card.setFaceDown(false,game);
    }
    for (    Card card : cards.getCards(game)) {
      for (Iterator<StackObject> iterator=game.getStack().iterator(); iterator.hasNext(); ) {
        StackObject stackObject=iterator.next();
        MageObject mageObject=game.getObject(card.getId());
        if (mageObject instanceof SplitCard) {
          if (stackObject instanceof Spell && (stackObject.getName().contains(((SplitCard)mageObject).getLeftHalfCard().getName()) || stackObject.getName().contains(((SplitCard)mageObject).getRightHalfCard().getName()))) {
            Spell spell=(Spell)stackObject;
            spell.counter(source.getSourceId(),game);
            game.informPlayers(sourceObject.getLogName() + ": the split-card spell named " + spell.getName()+ " was countered.");
          }
        }
        if (stackObject instanceof Spell && stackObject.getName().contains(card.getName())) {
          Spell spell=(Spell)stackObject;
          spell.counter(source.getSourceId(),game);
          game.informPlayers(sourceObject.getLogName() + ": the spell named " + spell.getName()+ " was countered.");
        }
      }
    }
    return true;
  }
  return false;
}
