{
  if (booster instanceof CardsView && booster.size() == 0) {
    emptyGrid=true;
  }
 else {
    if (!emptyGrid) {
      AudioManager.playOnDraftSelect();
    }
    emptyGrid=false;
  }
  this.bigCard=bigCard;
  this.removeAll();
  int maxRows=4;
  int numColumns=5;
  int curColumn=0;
  int curRow=0;
  int offsetX=5;
  int offsetY=3;
  CardDimensions cardDimension=null;
  int maxCards;
  double scale;
  for (int i=1; i < maxRows; i++) {
    scale=(double)(this.getHeight() / i) / Constants.FRAME_MAX_HEIGHT;
    cardDimension=new CardDimensions(scale);
    maxCards=this.getWidth() / (cardDimension.frameWidth + offsetX);
    if ((maxCards * i) >= booster.size()) {
      numColumns=booster.size() / i;
      if (booster.size() % i > 0) {
        numColumns++;
      }
      break;
    }
  }
  if (cardDimension != null) {
    Rectangle rectangle=new Rectangle(cardDimension.frameWidth,cardDimension.frameHeight);
    Dimension dimension=new Dimension(cardDimension.frameWidth,cardDimension.frameHeight);
    List<CardView> sortedCards=new ArrayList<>(booster.values());
    Collections.sort(sortedCards,new CardViewRarityComparator());
    for (    CardView card : sortedCards) {
      MageCard cardImg=Plugins.getInstance().getMageCard(card,bigCard,dimension,null,true);
      cardImg.addMouseListener(this);
      add(cardImg);
      cardImg.update(card);
      rectangle.setLocation(curColumn * (cardDimension.frameWidth + offsetX) + offsetX,curRow * (rectangle.height + offsetY) + offsetY);
      cardImg.setBounds(rectangle);
      cardImg.setCardBounds(rectangle.x,rectangle.y,rectangle.width,rectangle.height);
      curColumn++;
      if (curColumn == numColumns) {
        curColumn=0;
        curRow++;
      }
    }
    repaint();
  }
 else {
    logger.warn("Draft Grid - no possible fit of cards");
  }
}
