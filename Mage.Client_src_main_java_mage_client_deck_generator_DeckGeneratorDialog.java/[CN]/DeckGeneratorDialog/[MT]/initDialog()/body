{
  JPanel p0=new JPanel();
  p0.setLayout(new BoxLayout(p0,BoxLayout.Y_AXIS));
  JLabel text=new JLabel("Choose color for your deck: ");
  text.setAlignmentX(Component.CENTER_ALIGNMENT);
  p0.add(text);
  p0.add(Box.createVerticalStrut(5));
  String chosen=MageFrame.getPreferences().get("genDeckColor","u");
  final ColorsChooser colorsChooser=new ColorsChooser(chosen);
  p0.add(colorsChooser);
  p0.add(Box.createVerticalStrut(5));
  JLabel text2=new JLabel("(X - random color)");
  text2.setAlignmentX(Component.CENTER_ALIGNMENT);
  p0.add(text2);
  p0.add(Box.createVerticalStrut(5));
  JPanel jPanel=new JPanel();
  JLabel text3=new JLabel("Choose sets:");
  cbSets=new JComboBox(ConstructedFormats.getTypes());
  cbSets.setSelectedIndex(0);
  cbSets.setPreferredSize(new Dimension(300,25));
  cbSets.setMaximumSize(new Dimension(300,25));
  cbSets.setAlignmentX(Component.LEFT_ALIGNMENT);
  jPanel.add(text3);
  jPanel.add(cbSets);
  p0.add(jPanel);
  String prefSet=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_DECK_GENERATOR_SET,null);
  if (prefSet != null) {
    cbSets.setSelectedItem(prefSet);
  }
  p0.add(Box.createVerticalStrut(5));
  JPanel jPanel2=new JPanel();
  JLabel textDeckSize=new JLabel("Deck size:");
  cbDeckSize=new JComboBox(new String[]{"40","60"});
  cbDeckSize.setSelectedIndex(0);
  cbDeckSize.setPreferredSize(new Dimension(300,25));
  cbDeckSize.setMaximumSize(new Dimension(300,25));
  cbDeckSize.setAlignmentX(Component.LEFT_ALIGNMENT);
  jPanel2.add(textDeckSize);
  jPanel2.add(cbDeckSize);
  p0.add(jPanel2);
  String prefSize=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_DECK_GENERATOR_DECK_SIZE,"60");
  if (prefSet != null) {
    cbDeckSize.setSelectedItem(prefSize);
  }
  p0.add(Box.createVerticalStrut(5));
  JPanel jCheckBoxes=new JPanel();
  cSingleton=new JCheckBox("Singleton",false);
  cSingleton.setToolTipText("Allow only a single copy of each non-land card in your deck.");
  String singletonEnabled=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_DECK_GENERATOR_SINGLETON,"false");
  cSingleton.setSelected(Boolean.valueOf(singletonEnabled));
  jCheckBoxes.add(cSingleton);
  cArtifacts=new JCheckBox("Artifacts",false);
  cArtifacts.setToolTipText("Use artifacts and artifact creatures in your deck.");
  String artifactEnabled=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_DECK_GENERATOR_ARTIFACTS,"false");
  cArtifacts.setSelected(Boolean.valueOf(artifactEnabled));
  jCheckBoxes.add(cArtifacts);
  cNonBasicLands=new JCheckBox("Non-basic Lands",false);
  cNonBasicLands.setToolTipText("Use non-basic lands in your deck (if applicable).");
  String nonBasicEnabled=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_NEW_DECK_GENERATOR_NON_BASIC_LANDS,"false");
  cNonBasicLands.setSelected(Boolean.valueOf(nonBasicEnabled));
  jCheckBoxes.add(cNonBasicLands);
  jCheckBoxes.setPreferredSize(new Dimension(300,25));
  jCheckBoxes.setMaximumSize(new Dimension(300,25));
  p0.add(jCheckBoxes);
  btnGenerate=new JButton("Ok");
  btnGenerate.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      btnGenerate.setEnabled(false);
      colorsChooser.setEnabled(false);
      selectedColors=(String)colorsChooser.getSelectedItem();
      dlg.setVisible(false);
      MageFrame.getPreferences().put("genDeckColor",selectedColors);
    }
  }
);
  btnCancel=new JButton("Cancel");
  btnCancel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      dlg.setVisible(false);
      selectedColors=null;
    }
  }
);
  JButton[] options={btnGenerate,btnCancel};
  JOptionPane optionPane=new JOptionPane(p0,JOptionPane.PLAIN_MESSAGE,JOptionPane.DEFAULT_OPTION,null,options,options[1]);
  dlg=optionPane.createDialog("Generating deck");
  dlg.setVisible(true);
  dlg.dispose();
}
