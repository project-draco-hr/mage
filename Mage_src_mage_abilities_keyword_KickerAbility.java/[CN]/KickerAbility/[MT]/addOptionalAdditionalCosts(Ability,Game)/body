{
  if (ability instanceof SpellAbility) {
    Player player=game.getPlayer(controllerId);
    if (player != null) {
      this.resetKicker();
      for (      OptionalAdditionalCost kickerCost : kickerCosts) {
        boolean again=true;
        while (player.isInGame() && again) {
          String times="";
          if (kickerCost.isRepeatable()) {
            int activated=kickerCost.getActivateCount();
            times=Integer.toString(activated + 1) + (activated == 0 ? " time " : " times ");
          }
          if (kickerCost.canPay(ability,sourceId,controllerId,game) && player.chooseUse(Outcome.Benefit,new StringBuilder("Pay ").append(times).append(kickerCost.getText(false)).append(" ?").toString(),game)) {
            this.activateKicker(kickerCost,game);
            for (Iterator it=((Costs)kickerCost).iterator(); it.hasNext(); ) {
              Cost cost=(Cost)it.next();
              if (cost instanceof ManaCostsImpl) {
                List<VariableManaCost> varCosts=((ManaCostsImpl)cost).getVariableCosts();
                if (!varCosts.isEmpty()) {
                  xManaValue=game.getPlayer(this.controllerId).announceXMana(varCosts.get(0).getMinX(),Integer.MAX_VALUE,"Announce kicker value for " + varCosts.get(0).getText(),game,this);
                  game.informPlayers(new StringBuilder(game.getPlayer(this.controllerId).getName()).append(" announced a value of ").append(xManaValue).append(" for ").append(" kicker X ").toString());
                  ability.getManaCostsToPay().add(new GenericManaCost(xManaValue));
                }
 else {
                  ability.getManaCostsToPay().add((ManaCostsImpl)cost.copy());
                }
              }
 else {
                ability.getCosts().add(cost.copy());
              }
            }
            again=kickerCost.isRepeatable();
          }
 else {
            again=false;
          }
        }
      }
    }
  }
}
