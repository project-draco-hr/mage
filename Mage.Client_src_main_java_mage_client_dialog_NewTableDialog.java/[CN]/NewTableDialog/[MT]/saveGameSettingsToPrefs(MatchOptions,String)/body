{
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_NAME,options.getName());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_PASSWORD,options.getPassword());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_DECK_TYPE,options.getDeckType());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_TIME_LIMIT,Integer.toString(options.getPriorityTime()));
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_GAME_TYPE,options.getGameType());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_NUMBER_OF_WINS,Integer.toString(options.getWinsNeeded()));
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_DECK_FILE,deckFile);
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_NUMBER_PLAYERS,spnNumPlayers.getValue().toString());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_RANGE,Integer.toString(options.getRange().getRange()));
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_ATTACK_OPTION,options.getAttackOption().toString());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_SKILL_LEVEL,options.getSkillLevel().toString());
  StringBuilder playerTypesString=new StringBuilder();
  ListIterator iterator=players.listIterator();
  while (iterator.hasNext()) {
    if (playerTypesString.length() > 0) {
      playerTypesString.append(",");
    }
    TablePlayerPanel tpp=(TablePlayerPanel)iterator.next();
    playerTypesString.append(tpp.getPlayerType());
  }
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_PLAYER_TYPES,playerTypesString.toString());
}
