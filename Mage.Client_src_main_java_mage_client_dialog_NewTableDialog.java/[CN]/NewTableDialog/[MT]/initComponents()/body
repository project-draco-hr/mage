{
  lblName=new javax.swing.JLabel();
  txtName=new javax.swing.JTextField();
  lblPassword=new javax.swing.JLabel();
  txtPassword=new javax.swing.JTextField();
  lbDeckType=new javax.swing.JLabel();
  cbDeckType=new javax.swing.JComboBox();
  lbTimeLimit=new javax.swing.JLabel();
  cbTimeLimit=new javax.swing.JComboBox();
  lblGameType=new javax.swing.JLabel();
  cbGameType=new javax.swing.JComboBox();
  chkRollbackTurnsAllowed=new javax.swing.JCheckBox();
  chkRated=new javax.swing.JCheckBox();
  lblFreeMulligans=new javax.swing.JLabel();
  spnFreeMulligans=new javax.swing.JSpinner();
  lblNumPlayers=new javax.swing.JLabel();
  spnNumPlayers=new javax.swing.JSpinner();
  lblRange=new javax.swing.JLabel();
  cbRange=new javax.swing.JComboBox();
  lblAttack=new javax.swing.JLabel();
  cbAttackOption=new javax.swing.JComboBox();
  lblSkillLevel=new javax.swing.JLabel();
  cbSkillLevel=new javax.swing.JComboBox();
  lblNumWins=new javax.swing.JLabel();
  spnNumWins=new javax.swing.JSpinner();
  jSeparator2=new javax.swing.JSeparator();
  jLabel1=new javax.swing.JLabel();
  player1Panel=new mage.client.table.NewPlayerPanel();
  jSeparator3=new javax.swing.JSeparator();
  jLabel2=new javax.swing.JLabel();
  pnlOtherPlayers=new javax.swing.JPanel();
  jSeparator1=new javax.swing.JSeparator();
  btnOK=new javax.swing.JButton();
  btnCancel=new javax.swing.JButton();
  lblQuitRatio=new javax.swing.JLabel();
  spnQuitRatio=new javax.swing.JSpinner();
  setTitle("New Table");
  lblName.setLabelFor(txtName);
  lblName.setText("Name:");
  lblPassword.setLabelFor(txtName);
  lblPassword.setText("Password:");
  lbDeckType.setText("Deck Type:");
  lbTimeLimit.setText("Time Limit:");
  lbTimeLimit.setToolTipText("The active time a player may use to finish the match. If his or her time runs out, the player looses the current game.");
  lblGameType.setText("Game Type:");
  cbGameType.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbGameTypeActionPerformed(evt);
    }
  }
);
  chkRollbackTurnsAllowed.setText("Allow rollbacks");
  chkRollbackTurnsAllowed.setToolTipText("<HTML>Allow to rollback to the start of previous turns<br>\nif all players agree.\n");
  chkRated.setText("Rated");
  chkRated.setToolTipText("Indicates if matches will be rated.");
  lblFreeMulligans.setText("Free Mulligans:");
  lblFreeMulligans.setToolTipText("The number of mulligans a player can use without decreasing the number of drawn cards.");
  lblNumPlayers.setLabelFor(spnNumPlayers);
  lblNumPlayers.setText("Players");
  spnNumPlayers.addChangeListener(new javax.swing.event.ChangeListener(){
    public void stateChanged(    javax.swing.event.ChangeEvent evt){
      numPlayersChanged(evt);
    }
  }
);
  lblRange.setLabelFor(cbRange);
  lblRange.setText("Range of Influence");
  cbRange.setToolTipText("<HTML>An option for multiplayer games.\nA player's range of influence is the maximum distance from that player, measured in player seats,<br>\nthat the player can affect. Players within that many seats of the player are within that player's range<br>\nof influence. Objects controlled by players within a player's range of influence are also within that<br>\nplayer's range of influence. Range of influence covers spells, abilities, effects, damage dealing, attacking,<nr>\nmaking choices, and winning the game.");
  lblAttack.setLabelFor(cbAttackOption);
  lblAttack.setText("Attack Option");
  cbAttackOption.setToolTipText("<HTML>An option for multiplayer games that defines<br>\nwhich opponents can be attacked from a player.");
  lblSkillLevel.setLabelFor(cbAttackOption);
  lblSkillLevel.setText("Skill Level");
  cbSkillLevel.setToolTipText("<HTML>This option can be used to make it easier to find matches<br>\nwith opponents of the appropriate skill level.");
  lblNumWins.setLabelFor(spnNumWins);
  lblNumWins.setText("Wins");
  lblNumWins.setToolTipText("How many games has a player to win to win the match.");
  spnNumWins.addChangeListener(new javax.swing.event.ChangeListener(){
    public void stateChanged(    javax.swing.event.ChangeEvent evt){
      spnNumWinsnumPlayersChanged(evt);
    }
  }
);
  jLabel1.setFont(new java.awt.Font("Tahoma",1,11));
  jLabel1.setText("Player 1 (You)");
  jLabel2.setFont(new java.awt.Font("Tahoma",1,11));
  jLabel2.setText("Other Players");
  pnlOtherPlayers.setLayout(new java.awt.GridLayout(0,1));
  btnOK.setText("OK");
  btnOK.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnOKActionPerformed(evt);
    }
  }
);
  btnCancel.setText("Cancel");
  btnCancel.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnCancelActionPerformed(evt);
    }
  }
);
  lblQuitRatio.setText("Allowed quit %");
  spnQuitRatio.setToolTipText("Players with quit % more than this value can't join this table");
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(javax.swing.GroupLayout.Alignment.LEADING,layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblName).addComponent(lbDeckType).addComponent(lblGameType)).addGap(6,6,6).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,false).addGroup(layout.createSequentialGroup().addComponent(cbGameType,javax.swing.GroupLayout.PREFERRED_SIZE,270,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18,18,18).addComponent(chkRollbackTurnsAllowed).addGap(13,13,13).addComponent(lblFreeMulligans).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(spnFreeMulligans,javax.swing.GroupLayout.PREFERRED_SIZE,50,javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(txtName,javax.swing.GroupLayout.PREFERRED_SIZE,178,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lbTimeLimit).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cbTimeLimit,javax.swing.GroupLayout.PREFERRED_SIZE,102,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lblPassword).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtPassword,javax.swing.GroupLayout.PREFERRED_SIZE,125,javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(cbDeckType,javax.swing.GroupLayout.PREFERRED_SIZE,332,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(chkRated).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQuitRatio).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(spnQuitRatio,javax.swing.GroupLayout.PREFERRED_SIZE,60,javax.swing.GroupLayout.PREFERRED_SIZE)))).addComponent(jLabel1,javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2,javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(0,0,Short.MAX_VALUE).addComponent(btnOK).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnCancel)).addGroup(javax.swing.GroupLayout.Alignment.LEADING,layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblNumPlayers).addComponent(spnNumPlayers,javax.swing.GroupLayout.PREFERRED_SIZE,57,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblRange).addComponent(cbRange,javax.swing.GroupLayout.PREFERRED_SIZE,117,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(lblAttack).addGap(116,116,116).addComponent(lblSkillLevel)).addGroup(layout.createSequentialGroup().addComponent(cbAttackOption,javax.swing.GroupLayout.PREFERRED_SIZE,177,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cbSkillLevel,javax.swing.GroupLayout.PREFERRED_SIZE,148,javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(18,18,18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblNumWins).addComponent(spnNumWins,javax.swing.GroupLayout.PREFERRED_SIZE,50,javax.swing.GroupLayout.PREFERRED_SIZE))).addComponent(jSeparator2).addComponent(player1Panel,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(pnlOtherPlayers,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(jSeparator1,javax.swing.GroupLayout.Alignment.LEADING)).addContainerGap()).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jSeparator3,javax.swing.GroupLayout.DEFAULT_SIZE,660,Short.MAX_VALUE).addContainerGap())));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(4,4,4).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtName,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblName).addComponent(txtPassword,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblPassword).addComponent(lbTimeLimit).addComponent(cbTimeLimit,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cbDeckType,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lbDeckType).addComponent(lblQuitRatio).addComponent(chkRated).addComponent(spnQuitRatio,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(spnFreeMulligans,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblFreeMulligans).addComponent(chkRollbackTurnsAllowed)).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cbGameType,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblGameType))).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(6,6,6).addComponent(lblNumPlayers).addGap(0,0,0).addComponent(spnNumPlayers,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblSkillLevel).addComponent(lblNumWins).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblRange).addComponent(lblAttack))).addGap(0,0,0).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cbRange,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cbAttackOption,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cbSkillLevel,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(spnNumWins,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSeparator2,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel1).addGap(0,0,0).addComponent(player1Panel,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(16,16,16).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(pnlOtherPlayers,javax.swing.GroupLayout.DEFAULT_SIZE,105,Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,7,Short.MAX_VALUE).addComponent(jSeparator1,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnCancel).addComponent(btnOK)).addGap(0,0,0)).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(201,201,201).addComponent(jSeparator3,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(167,Short.MAX_VALUE))));
  pack();
}
