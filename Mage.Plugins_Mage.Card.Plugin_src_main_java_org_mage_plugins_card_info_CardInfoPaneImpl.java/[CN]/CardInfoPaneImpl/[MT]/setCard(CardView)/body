{
  if (card == null)   return;
  if (isCurrentCard(card))   return;
  currentCard=card;
  ThreadUtils.threadPool.submit(new Runnable(){
    public void run(){
      if (!card.equals(currentCard))       return;
      String manaCost="";
      for (      String m : card.getManaCost()) {
        manaCost+=m;
      }
      String castingCost=UI.getDisplayManaCost(manaCost);
      castingCost=ManaSymbols.replaceSymbolsWithHTML(castingCost,false);
      int symbolCount=0;
      int offset=0;
      while ((offset=castingCost.indexOf("<img",offset) + 1) != 0)       symbolCount++;
      List<String> rulings=card.getRules();
      boolean smallImages=true;
      int fontSize=11;
      String fontFamily="tahoma";
      final StringBuffer buffer=new StringBuffer(512);
      buffer.append("<html><body style='font-family:");
      buffer.append(fontFamily);
      buffer.append(";font-size:");
      buffer.append(fontSize);
      buffer.append("pt;margin:0px 1px 0px 1px'>");
      buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'>");
      buffer.append("<tr><td valign='top'><b>");
      buffer.append(card.getName());
      buffer.append("</b></td><td align='right' valign='top' style='width:");
      buffer.append(symbolCount * 11 + 1);
      buffer.append("px'>");
      buffer.append(castingCost);
      buffer.append("</td></tr></table>");
      buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'><tr><td style='margin-left: 1px'>");
      buffer.append(getTypes(card));
      buffer.append("</td><td align='right'>");
switch (card.getRarity()) {
case RARE:
        buffer.append("<b color='#FFBF00'>");
      break;
case UNCOMMON:
    buffer.append("<b color='silver'>");
  break;
case COMMON:
buffer.append("<b color='black'>");
break;
case MYTHIC:
buffer.append("<b color='#D5330B'>");
break;
}
String rarity=card.getRarity().getCode();
buffer.append(ManaSymbols.replaceSetCodeWithHTML(card.getExpansionSetCode().toUpperCase(),rarity));
buffer.append("</td></tr></table>");
String pt="";
if (CardUtil.isCreature(card)) {
pt=card.getPower() + "/" + card.getToughness();
}
 else if (CardUtil.isPlaneswalker(card)) {
pt=card.getLoyalty().toString();
}
if (pt.length() > 0) {
buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%' valign='bottom'><tr><td>");
buffer.append("<b>");
buffer.append(pt);
buffer.append("</b>");
buffer.append("</td></tr></table>");
}
String legal="";
if (rulings.size() > 0) {
legal=legal.replaceAll("#([^#]+)#","<i>$1</i>");
legal=legal.replaceAll("\\s*//\\s*","<hr width='50%'>");
legal=legal.replace("\r\n","<div style='font-size:5pt'></div>");
legal+="<br>";
for (String ruling : rulings) {
legal+="<p style='margin: 2px'>";
legal+=ruling;
legal+="</p>";
}
}
if (legal.length() > 0) {
legal=legal.replaceAll("\\{this\\}",card.getName());
legal=legal.replaceAll("\\{source\\}",card.getName());
buffer.append(ManaSymbols.replaceSymbolsWithHTML(legal,smallImages));
}
buffer.append("<br></body></html>");
SwingUtilities.invokeLater(new Runnable(){
public void run(){
if (!card.equals(currentCard)) return;
setText(buffer.toString());
setCaretPosition(0);
}
}
);
}
}
);
}
