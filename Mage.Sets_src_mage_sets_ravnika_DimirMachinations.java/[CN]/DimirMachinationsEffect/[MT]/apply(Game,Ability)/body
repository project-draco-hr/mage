{
  Player controller=game.getPlayer(source.getControllerId());
  Player targetPlayer=game.getPlayer(this.getTargetPointer().getFirst(game,source));
  if (controller != null && targetPlayer != null) {
    int numCardsToLookAt=Math.min(3,targetPlayer.getLibrary().size());
    if (numCardsToLookAt > 0) {
      CardsImpl cards=new CardsImpl();
      for (int i=0; i < numCardsToLookAt; i++) {
        cards.add(targetPlayer.getLibrary().removeFromTop(game));
      }
      TargetCard targetExile=new TargetCard(0,numCardsToLookAt,Zone.LIBRARY,new FilterCard("card to exile"));
      if (controller.choose(Outcome.Exile,cards,targetExile,game)) {
        for (        UUID cardId : targetExile.getTargets()) {
          Card card=cards.get(cardId,game);
          if (card != null) {
            controller.moveCardToExileWithInfo(card,null,"",source.getSourceId(),game,Zone.LIBRARY);
            cards.remove(card);
          }
        }
        while (cards.size() > 0) {
          if (cards.size() == 1) {
            Card card=cards.get(cards.iterator().next(),game);
            controller.moveCardToLibraryWithInfo(card,source.getSourceId(),game,Zone.LIBRARY,true,false);
            cards.remove(card);
          }
 else {
            TargetCard targetTop=new TargetCard(Zone.LIBRARY,new FilterCard("card to put on top of library"));
            if (controller.choose(Outcome.Neutral,cards,targetTop,game)) {
              Card card=cards.get(targetTop.getFirstTarget(),game);
              controller.moveCardToLibraryWithInfo(card,source.getSourceId(),game,Zone.LIBRARY,true,false);
              cards.remove(card);
            }
          }
        }
      }
    }
    return true;
  }
  return false;
}
