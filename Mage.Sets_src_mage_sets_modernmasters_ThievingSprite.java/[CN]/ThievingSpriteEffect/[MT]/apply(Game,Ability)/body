{
  Player targetPlayer=game.getPlayer(source.getFirstTarget());
  Player controller=game.getPlayer(source.getControllerId());
  if (targetPlayer == null || controller == null) {
    return false;
  }
  FilterControlledPermanent filter=new FilterControlledPermanent();
  filter.add(new SubtypePredicate("Faerie"));
  int numberOfFaeries=game.getBattlefield().countAll(filter,controller.getId(),game);
  Cards revealedCards=new CardsImpl();
  if (numberOfFaeries > 0 && targetPlayer.getHand().size() > numberOfFaeries) {
    Cards cardsInHand=new CardsImpl(Zone.PICK);
    cardsInHand.addAll(targetPlayer.getHand());
    TargetCard target=new TargetCard(numberOfFaeries,Zone.PICK,new FilterCard());
    if (targetPlayer.choose(Outcome.Discard,cardsInHand,target,game)) {
      List<UUID> targets=target.getTargets();
      for (      UUID targetId : targets) {
        Card card=game.getCard(targetId);
        if (card != null) {
          revealedCards.add(card);
        }
      }
    }
  }
 else {
    revealedCards.addAll(targetPlayer.getHand());
  }
  TargetCard targetInHand=new TargetCard(Zone.PICK,new FilterCard("card to discard"));
  if (!revealedCards.isEmpty()) {
    targetPlayer.revealCards("Thieving Sprite",revealedCards,game);
    Card card=null;
    if (revealedCards.size() > 1) {
      controller.choose(Outcome.Discard,revealedCards,targetInHand,game);
      card=revealedCards.get(targetInHand.getFirstTarget(),game);
    }
 else {
      card=revealedCards.getRandom(game);
    }
    if (card != null) {
      targetPlayer.discard(card,source,game);
    }
  }
  return true;
}
