{
  try {
    File f=new File(INIT_FILE_PATH);
    Pattern pattern=Pattern.compile("([a-zA-Z]*):([\\w]*):([a-zA-Z ,.!'\\d]*):([\\d]*)");
    if (!f.exists()) {
      logger.warning("Couldn't find init file: " + INIT_FILE_PATH);
      return;
    }
    Scanner scanner=new Scanner(f);
    try {
      while (scanner.hasNextLine()) {
        String line=scanner.nextLine().trim();
        if (line.startsWith("#"))         continue;
        Matcher m=pattern.matcher(line);
        if (m.matches()) {
          String zone=m.group(1);
          String nickname=m.group(2);
          Player player=findPlayer(game,nickname);
          if (player != null) {
            Zone gameZone;
            if ("hand".equalsIgnoreCase(zone)) {
              gameZone=Zone.HAND;
            }
 else             if ("battlefield".equalsIgnoreCase(zone)) {
              gameZone=Zone.BATTLEFIELD;
            }
 else             if ("graveyard".equalsIgnoreCase(zone)) {
              gameZone=Zone.GRAVEYARD;
            }
 else             if ("library".equalsIgnoreCase(zone)) {
              gameZone=Zone.LIBRARY;
            }
 else {
              continue;
            }
            String cardName=m.group(3);
            Integer amount=Integer.parseInt(m.group(4));
            for (int i=0; i < amount; i++) {
              String clazz=Sets.findCard(cardName);
              if (clazz != null) {
                Card card=CardImpl.createCard(clazz);
                if (card != null) {
                  Set<Card> cards=new HashSet<Card>();
                  cards.add(card);
                  game.loadCards(cards,player.getId());
                  swapWithAnyCard(game,player,card,gameZone);
                }
 else {
                  logger.severe("Couldn't create a card: " + cardName);
                }
              }
 else {
                logger.severe("Couldn't find a card: " + cardName);
              }
            }
          }
 else {
            logger.warning("Was skipped: " + line);
          }
        }
 else {
          logger.warning("Init string wasn't parsed: " + line);
        }
      }
    }
  finally {
      scanner.close();
    }
  }
 catch (  Exception e) {
    logger.log(Level.SEVERE,"",e);
  }
}
