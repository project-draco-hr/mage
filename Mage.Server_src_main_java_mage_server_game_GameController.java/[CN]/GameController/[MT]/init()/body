{
  game.addTableEventListener(new Listener<TableEvent>(){
    @Override public void event(    TableEvent event){
      try {
switch (event.getEventType()) {
case UPDATE:
          updateGame();
        break;
case INFO:
      ChatManager.getInstance().broadcast(chatId,"",event.getMessage(),MessageColor.BLACK);
    logger.debug(game.getId() + " " + event.getMessage());
  break;
case REVEAL:
revealCards(event.getMessage(),event.getCards());
break;
case ERROR:
error(event.getMessage(),event.getException());
break;
}
}
 catch (MageException ex) {
logger.fatal("Table event listener error ",ex);
}
}
}
);
game.addPlayerQueryEventListener(new Listener<PlayerQueryEvent>(){
@Override public void event(PlayerQueryEvent event){
try {
switch (event.getQueryType()) {
case ASK:
ask(event.getPlayerId(),event.getMessage());
break;
case PICK_TARGET:
target(event.getPlayerId(),event.getMessage(),event.getCards(),event.getPerms(),event.getTargets(),event.isRequired(),event.getOptions());
break;
case PICK_ABILITY:
target(event.getPlayerId(),event.getMessage(),event.getAbilities(),event.isRequired(),event.getOptions());
break;
case SELECT:
select(event.getPlayerId(),event.getMessage());
break;
case PLAY_MANA:
playMana(event.getPlayerId(),event.getMessage());
break;
case PLAY_X_MANA:
playXMana(event.getPlayerId(),event.getMessage());
break;
case CHOOSE_ABILITY:
chooseAbility(event.getPlayerId(),event.getAbilities());
break;
case CHOOSE_MODE:
chooseMode(event.getPlayerId(),event.getModes());
break;
case CHOOSE:
choose(event.getPlayerId(),event.getMessage(),event.getChoices());
break;
case AMOUNT:
amount(event.getPlayerId(),event.getMessage(),event.getMin(),event.getMax());
break;
case LOOK:
lookAtCards(event.getPlayerId(),event.getMessage(),event.getCards());
break;
}
}
 catch (MageException ex) {
logger.fatal("Player event listener error ",ex);
}
}
}
);
for (Player player : game.getPlayers().values()) {
if (!player.isHuman()) {
ChatManager.getInstance().broadcast(chatId,"",player.getName() + " has joined the game",MessageColor.BLACK);
}
}
checkStart();
}
