{
  Player player=game.getPlayer(playerId);
  Player opponent=game.getPlayer(game.getOpponents(playerId).iterator().next());
  if (game.isGameOver()) {
    if (player.hasLost() || opponent.hasWon()) {
      return LOSE_GAME_SCORE;
    }
    if (opponent.hasLost() || player.hasWon()) {
      return WIN_GAME_SCORE;
    }
  }
  int lifeScore=0;
  if (player.getLife() <= 0) {
    lifeScore=ArtificialScoringSystem.LOSE_GAME_SCORE;
  }
 else   if (opponent.getLife() <= 0) {
    lifeScore=ArtificialScoringSystem.WIN_GAME_SCORE;
  }
 else {
    lifeScore=ArtificialScoringSystem.getLifeScore(player.getLife()) - ArtificialScoringSystem.getLifeScore(opponent.getLife());
  }
  int permanentScore=0;
  int playerScore=0;
  int opponentScore=0;
  try {
    StringBuilder sbPlayer=new StringBuilder();
    StringBuilder sbOpponent=new StringBuilder();
    for (    Permanent permanent : game.getBattlefield().getAllActivePermanents(playerId)) {
      int onePermScore=evaluatePermanent(permanent,game);
      playerScore+=onePermScore;
      if (logger.isDebugEnabled()) {
        sbPlayer.append(permanent.getName()).append("[").append(onePermScore).append("] ");
      }
    }
    if (logger.isDebugEnabled()) {
      sbPlayer.insert(0,playerScore + " - ");
      sbPlayer.insert(0,"Player..: ");
      logger.debug(sbPlayer);
    }
    for (    Permanent permanent : game.getBattlefield().getAllActivePermanents(opponent.getId())) {
      int onePermScore=evaluatePermanent(permanent,game);
      opponentScore+=onePermScore;
      if (logger.isDebugEnabled()) {
        sbOpponent.append(permanent.getName()).append("[").append(onePermScore).append("] ");
      }
    }
    if (logger.isDebugEnabled()) {
      sbOpponent.insert(0,opponentScore + " - ");
      sbOpponent.insert(0,"Opponent: ");
      logger.debug(sbOpponent);
    }
    permanentScore=playerScore - opponentScore;
  }
 catch (  Throwable t) {
  }
  int handScore;
  handScore=player.getHand().size() - opponent.getHand().size();
  handScore*=5;
  int score=lifeScore + permanentScore + handScore;
  logger.debug(score + " total Score (life:" + lifeScore+ " permanents:"+ permanentScore+ " hand:"+ handScore+ ")");
  return score;
}
