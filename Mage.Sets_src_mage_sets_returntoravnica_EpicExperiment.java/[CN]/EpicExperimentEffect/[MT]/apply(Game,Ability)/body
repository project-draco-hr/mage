{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null) {
    for (int i=0; i < source.getManaCostsToPay().getX(); i++) {
      if (player != null && player.getLibrary().size() > 0) {
        Card topCard=player.getLibrary().getFromTop(game);
        topCard.moveToExile(source.getSourceId(),"Cards exiled by Epic Experiment",source.getId(),game);
      }
    }
    ExileZone epicExperimentExileZone=game.getExile().getExileZone(source.getSourceId());
    filter.add(new ConvertedManaCostPredicate(Filter.ComparisonType.LessThan,source.getManaCostsToPay().getX() + 1));
    filter.setMessage("instant and sorcery cards with converted mana cost " + source.getManaCostsToPay().getX() + " or less");
    while (player != null && epicExperimentExileZone != null && epicExperimentExileZone.count(filter,game) > 0 && player.chooseUse(Outcome.PlayForFree,"Cast cards exiled with Epic Experiment without paying its mana cost?",game)) {
      TargetCardInExile target=new TargetCardInExile(filter,source.getSourceId());
      while (epicExperimentExileZone.count(filter,game) > 0 && player.choose(Outcome.PlayForFree,epicExperimentExileZone,target,game)) {
        Card card=game.getCard(target.getFirstTarget());
        if (card != null) {
          if (player.cast(card.getSpellAbility(),game,true)) {
            game.getExile().removeCard(card,game);
          }
        }
        target.clearChosen();
      }
    }
    UUID exileId=source.getSourceId();
    ExileZone exile=game.getExile().getExileZone(exileId);
    if (exile != null) {
      exile=exile.copy();
      for (      UUID cardId : exile) {
        Card card=game.getCard(cardId);
        card.moveToZone(Zone.GRAVEYARD,source.getSourceId(),game,true);
      }
      game.getExile().getExileZone(exileId).clear();
    }
    return true;
  }
  return false;
}
