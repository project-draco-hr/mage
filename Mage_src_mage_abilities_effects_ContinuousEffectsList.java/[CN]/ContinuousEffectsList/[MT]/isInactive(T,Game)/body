{
  HashSet<Ability> set=effectAbilityMap.get(effect.getId());
  if (set == null) {
    logger.debug("No abilities for effect found: " + effect.toString());
    return false;
  }
  Iterator<Ability> it=set.iterator();
  while (it.hasNext()) {
    Ability ability=it.next();
    if (ability == null) {
      it.remove();
    }
 else     if (ability instanceof MageSingleton) {
      return false;
    }
 else     if (effect.isDiscarded()) {
      it.remove();
    }
 else     if (game.getObject(ability.getSourceId()) == null) {
      logger.debug("Ability without source object removed: " + ability.getSourceId() + " "+ ability.getRule());
      it.remove();
    }
 else {
switch (effect.getDuration()) {
case OneUse:
        if (effect.isUsed()) {
          logger.debug("Ability one use removed: " + ability.getSourceId() + " "+ ability.getRule());
          it.remove();
        }
      break;
case Custom:
case UntilYourNextTurn:
    if (effect.isInactive(ability,game)) {
      logger.debug("Ability custom removed: " + ability.getSourceId() + " "+ ability.getRule());
      it.remove();
    }
}
}
}
return set.isEmpty();
}
