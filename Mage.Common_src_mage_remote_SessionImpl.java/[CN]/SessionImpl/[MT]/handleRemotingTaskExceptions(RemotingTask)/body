{
  try {
    return remoting.run();
  }
 catch (  MalformedURLException ex) {
    logger.fatal("",ex);
    client.showMessage("Unable to connect to server. " + ex.getMessage());
  }
catch (  UndeclaredThrowableException ex) {
    String addMessage="";
    Throwable cause=ex.getCause();
    if (cause instanceof InvocationFailureException) {
      InvocationFailureException exep=(InvocationFailureException)cause;
      if (exep.getCause() instanceof IOException) {
        if (exep.getCause().getMessage().startsWith("Field hash null is not available on current")) {
          addMessage="Probabaly the server version is not compatible to the client. ";
        }
      }
    }
 else     if (cause instanceof NoSuchMethodException) {
      addMessage="The following method is not available in the server, probably the " + "server version is not compatible to the client: " + cause.getMessage();
    }
    if (addMessage.isEmpty()) {
      logger.fatal("",ex);
    }
    client.showMessage("Unable to connect to server. " + addMessage + (ex.getMessage() != null ? ex.getMessage() : ""));
  }
catch (  IOException ex) {
    logger.fatal("",ex);
    String addMessage="";
    if (ex.getMessage() != null && ex.getMessage().startsWith("Unable to perform invocation")) {
      addMessage="Maybe the server version is not compatible. ";
    }
    client.showMessage("Unable to connect to server. " + addMessage + ex.getMessage() != null ? ex.getMessage() : "");
  }
catch (  MageVersionException ex) {
    if (!canceled) {
      client.showMessage("Unable to connect to server. " + ex.getMessage());
    }
    disconnect(false);
  }
catch (  CannotConnectException ex) {
    if (!canceled) {
      handleCannotConnectException(ex);
    }
  }
catch (  Throwable t) {
    logger.fatal("Unable to connect to server - ",t);
    if (!canceled) {
      disconnect(false);
      StringBuilder sb=new StringBuilder();
      sb.append("Unable to connect to server.\n");
      for (      StackTraceElement element : t.getStackTrace()) {
        sb.append(element.toString()).append("\n");
      }
      client.showMessage(sb.toString());
    }
  }
  return false;
}
