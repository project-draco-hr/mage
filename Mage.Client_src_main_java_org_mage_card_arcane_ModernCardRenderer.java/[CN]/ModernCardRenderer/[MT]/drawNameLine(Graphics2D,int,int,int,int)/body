{
  int manaCostWidth;
  if (cardView.isAbility()) {
    manaCostWidth=0;
  }
 else {
    manaCostWidth=CardRendererUtils.getManaCostWidth(manaCostString,boxTextHeight);
  }
  int availableWidth=w - manaCostWidth + 2;
  String nameStr;
  if (cardView.isFaceDown()) {
    if (cardView instanceof PermanentView && ((PermanentView)cardView).isManifested()) {
      nameStr="Manifest: " + cardView.getName();
    }
 else {
      nameStr="Morph: " + cardView.getName();
    }
  }
 else {
    nameStr=cardView.getName();
  }
  AttributedString str=new AttributedString(nameStr);
  str.addAttribute(TextAttribute.FONT,boxTextFont);
  TextMeasurer measure=new TextMeasurer(str.getIterator(),g.getFontRenderContext());
  int breakIndex=measure.getLineBreakIndex(0,availableWidth);
  if (breakIndex < nameStr.length()) {
    str=new AttributedString(nameStr);
    str.addAttribute(TextAttribute.FONT,boxTextFontNarrow);
    measure=new TextMeasurer(str.getIterator(),g.getFontRenderContext());
    breakIndex=measure.getLineBreakIndex(0,availableWidth);
  }
  TextLayout layout=measure.getLayout(0,breakIndex);
  g.setColor(getBoxTextColor());
  layout.draw(g,x,y + boxTextOffset + boxTextHeight - 1);
  if (!cardView.isAbility() && !cardView.isFaceDown()) {
    ManaSymbols.draw(g,manaCostString,x + w - manaCostWidth,y + boxTextOffset,boxTextHeight);
  }
}
