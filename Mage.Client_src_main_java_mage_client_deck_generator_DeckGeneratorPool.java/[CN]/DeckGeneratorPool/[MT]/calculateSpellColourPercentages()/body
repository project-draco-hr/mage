{
  final Map<String,Integer> colorCount=new HashMap<>();
  for (  final ColoredManaSymbol color : ColoredManaSymbol.values()) {
    colorCount.put(color.toString(),0);
  }
  int totalCount=0;
  List<Card> fixedSpells=getFixedSpells();
  for (  Card spell : fixedSpells) {
    for (    String symbol : spell.getManaCost().getSymbols()) {
      symbol=symbol.replace("{","").replace("}","");
      if (isColoredManaSymbol(symbol)) {
        for (        ColoredManaSymbol allowed : allowedColors) {
          if (symbol.contains(allowed.toString())) {
            int cnt=colorCount.get(allowed.toString());
            colorCount.put(allowed.toString(),cnt + 1);
            totalCount++;
          }
        }
      }
    }
  }
  final Map<String,Double> percentages=new HashMap<>();
  for (  Map.Entry<String,Integer> singleCount : colorCount.entrySet()) {
    String color=singleCount.getKey();
    int count=singleCount.getValue();
    double percentage=(count / (double)totalCount) * 100;
    percentages.put(color,percentage);
  }
  return percentages;
}
