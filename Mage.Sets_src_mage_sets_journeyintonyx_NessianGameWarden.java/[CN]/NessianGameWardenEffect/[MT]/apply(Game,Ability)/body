{
  Player player=game.getPlayer(source.getControllerId());
  Permanent sourcePermanent=game.getPermanentOrLKIBattlefield(source.getSourceId());
  if (player == null || sourcePermanent == null) {
    return false;
  }
  Cards cards=new CardsImpl();
  int count=new PermanentsOnBattlefieldCount(filter).calculate(game,source);
  count=Math.min(player.getLibrary().size(),count);
  for (int i=0; i < count; i++) {
    Card card=player.getLibrary().removeFromTop(game);
    if (card != null) {
      cards.add(card);
    }
  }
  player.lookAtCards(sourcePermanent.getName(),cards,game);
  if (!cards.isEmpty()) {
    TargetCard target=new TargetCard(Zone.LIBRARY,new FilterCreatureCard("creature card to put into your hand"));
    if (target.canChoose(source.getSourceId(),player.getId(),game) && player.choose(Outcome.DrawCard,cards,target,game)) {
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        player.revealCards(sourcePermanent.getName(),new CardsImpl(card),game);
        cards.remove(card);
        player.moveCardToHandWithInfo(card,source.getSourceId(),game,Zone.LIBRARY);
      }
    }
  }
  TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to put on the bottom of your library"));
  while (player.isInGame() && cards.size() > 1) {
    player.choose(Outcome.Neutral,cards,target,game);
    Card card=cards.get(target.getFirstTarget(),game);
    if (card != null) {
      cards.remove(card);
      card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,false);
    }
    target.clearChosen();
  }
  if (cards.size() == 1) {
    Card card=cards.get(cards.iterator().next(),game);
    card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,false);
  }
  return true;
}
