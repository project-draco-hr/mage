{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent permanent=game.getPermanent(this.targetPointer.getFirst(game,source));
  if (controller != null && permanent != null) {
    Abilities<ManaAbility> mana=permanent.getAbilities().getManaAbilities(Zone.BATTLEFIELD);
    Mana types=new Mana();
    for (    ManaAbility ability : mana) {
      for (      Mana netMana : ability.getNetMana(game)) {
        types.add(netMana);
      }
    }
    Choice choice=new ChoiceImpl(true);
    choice.setMessage("Pick the type of mana to produce");
    if (types.getBlack() > 0) {
      choice.getChoices().add("Black");
    }
    if (types.getRed() > 0) {
      choice.getChoices().add("Red");
    }
    if (types.getBlue() > 0) {
      choice.getChoices().add("Blue");
    }
    if (types.getGreen() > 0) {
      choice.getChoices().add("Green");
    }
    if (types.getWhite() > 0) {
      choice.getChoices().add("White");
    }
    if (types.getColorless() > 0) {
      choice.getChoices().add("Colorless");
    }
    if (choice.getChoices().size() > 0) {
      if (choice.getChoices().size() == 1) {
        choice.setChoice(choice.getChoices().iterator().next());
      }
 else {
        controller.choose(outcome,choice,game);
      }
      if (choice.getChoice() == null) {
        return false;
      }
      Mana newMana=new Mana();
switch (choice.getChoice()) {
case "Black":
        newMana.setBlack(1);
      break;
case "Blue":
    newMana.setBlue(1);
  break;
case "Red":
newMana.setRed(1);
break;
case "Green":
newMana.setGreen(1);
break;
case "White":
newMana.setWhite(1);
break;
case "Colorless":
newMana.setColorless(1);
break;
}
controller.getManaPool().addMana(newMana,game,source);
checkToFirePossibleEvents(newMana,game,source);
}
return true;
}
return false;
}
