{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null) {
    Cards cards=new CardsImpl(Zone.EXILED);
    int count=Math.min(player.getLibrary().size(),7);
    for (int i=0; i < count; i++) {
      Card card=player.getLibrary().getFromTop(game);
      cards.add(card);
      card.moveToExile(null,null,source.getSourceId(),game);
    }
    FilterCard filter=new FilterCard("creature and/or land cards to put onto the battlefield");
    filter.add(Predicates.or(new CardTypePredicate(CardType.CREATURE),new CardTypePredicate(CardType.LAND)));
    TargetCard target1=new TargetCard(Zone.EXILED,filter);
    while (cards.size() > 0 && target1.canChoose(source.getSourceId(),source.getControllerId(),game) && player.choose(Outcome.PutCardInPlay,cards,target1,game)) {
      Card card=cards.get(target1.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.putOntoBattlefield(game,Zone.EXILED,source.getSourceId(),source.getControllerId());
      }
      target1.clearChosen();
    }
    return true;
  }
  return false;
}
