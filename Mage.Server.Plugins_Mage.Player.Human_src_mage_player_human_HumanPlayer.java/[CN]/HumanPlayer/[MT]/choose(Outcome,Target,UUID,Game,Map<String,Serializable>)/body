{
  updateGameStatePriority("choose(5)",game);
  while (!abort) {
    Set<UUID> targetIds=target.possibleTargets(sourceId,playerId,game);
    if (targetIds == null || targetIds.isEmpty()) {
      return false;
    }
    boolean required=target.isRequired(sourceId,game);
    if (target.getTargets().size() >= target.getNumberOfTargets()) {
      required=false;
    }
    game.fireSelectTargetEvent(playerId,target.getMessage(),targetIds,required,options);
    waitForResponse(game);
    if (response.getUUID() != null) {
      if (!targetIds.contains(response.getUUID())) {
        continue;
      }
      if (target instanceof TargetPermanent) {
        if (((TargetPermanent)target).canTarget(playerId,response.getUUID(),sourceId,game,false)) {
          target.add(response.getUUID(),game);
          if (target.doneChosing()) {
            return true;
          }
        }
      }
 else {
        MageObject object=game.getObject(sourceId);
        if (object instanceof Ability) {
          if (target.canTarget(response.getUUID(),(Ability)object,game)) {
            target.add(response.getUUID(),game);
            if (target.doneChosing()) {
              return true;
            }
          }
        }
 else {
          if (target.canTarget(response.getUUID(),game)) {
            target.add(response.getUUID(),game);
            if (target.doneChosing()) {
              return true;
            }
          }
        }
      }
    }
 else {
      if (target.getTargets().size() >= target.getNumberOfTargets()) {
        return true;
      }
      if (!target.isRequired(sourceId,game)) {
        return false;
      }
    }
  }
  return false;
}
