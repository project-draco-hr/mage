{
switch (ability.getSpellAbilityType()) {
case SPLIT:
case SPLIT_FUSED:
    MageObject object=game.getObject(ability.getSourceId());
  if (object != null) {
    LinkedHashMap<UUID,ActivatedAbility> useableAbilities=getSpellAbilities(object,game.getState().getZone(object.getId()),game);
    if (useableAbilities != null && useableAbilities.size() == 1) {
      return (SpellAbility)useableAbilities.values().iterator().next();
    }
 else     if (useableAbilities != null && useableAbilities.size() > 0) {
      game.fireGetChoiceEvent(playerId,name,object,new ArrayList<>(useableAbilities.values()));
      waitForResponse(game);
      if (response.getUUID() != null) {
        if (useableAbilities.containsKey(response.getUUID())) {
          return (SpellAbility)useableAbilities.get(response.getUUID());
        }
      }
    }
  }
return null;
default :
return ability;
}
}
