{
  updateGameStatePriority("activateAbility",game);
  if (abilities.size() == 1 && suppressAbilityPicker(abilities.values().iterator().next())) {
    ActivatedAbility ability=abilities.values().iterator().next();
    if (!ability.getTargets().isEmpty() || !(ability.getCosts().size() == 1 && ability.getCosts().get(0) instanceof SacrificeSourceCost) || !(ability.getCosts().size() == 2 && ability.getCosts().get(0) instanceof TapSourceCost && ability.getCosts().get(0) instanceof SacrificeSourceCost)) {
      activateAbility(ability,game);
      return;
    }
  }
  if (userData.isUseFirstManaAbility() && object instanceof Permanent && object.getCardType().contains(CardType.LAND)) {
    ActivatedAbility ability=abilities.values().iterator().next();
    if (ability instanceof ManaAbility) {
      activateAbility(ability,game);
      return;
    }
  }
 else {
    game.fireGetChoiceEvent(playerId,name,object,new ArrayList<>(abilities.values()));
  }
  waitForResponse(game);
  if (response.getUUID() != null && isInGame()) {
    if (abilities.containsKey(response.getUUID())) {
      activateAbility(abilities.get(response.getUUID()),game);
    }
  }
}
