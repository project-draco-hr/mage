{
  String autoOrderRuleText=null;
  boolean autoOrderUse=getUserData().isAutoOrderTrigger();
  while (!abort) {
    List<TriggeredAbility> abilitiesWithNoOrderSet=new ArrayList<>();
    TriggeredAbility abilityOrderLast=null;
    for (    TriggeredAbility ability : abilities) {
      if (triggerAutoOrderAbilityFirst.contains(ability.getOriginalId())) {
        return ability;
      }
      if (triggerAutoOrderNameFirst.contains(ability.getRule())) {
        return ability;
      }
      if (triggerAutoOrderAbilityLast.contains(ability.getOriginalId())) {
        abilityOrderLast=ability;
        continue;
      }
      if (triggerAutoOrderNameLast.contains(ability.getRule())) {
        abilityOrderLast=ability;
        continue;
      }
      if (autoOrderUse) {
        if (autoOrderRuleText == null) {
          autoOrderRuleText=ability.getRule();
        }
 else         if (!ability.getRule().equals(autoOrderRuleText)) {
          autoOrderUse=false;
        }
      }
      abilitiesWithNoOrderSet.add(ability);
    }
    if (abilitiesWithNoOrderSet.isEmpty()) {
      return abilityOrderLast;
    }
    if (abilitiesWithNoOrderSet.size() == 1 || autoOrderUse) {
      return abilitiesWithNoOrderSet.iterator().next();
    }
    updateGameStatePriority("chooseTriggeredAbility",game);
    game.fireSelectTargetTriggeredAbilityEvent(playerId,"Pick triggered ability (goes to the stack first)",abilitiesWithNoOrderSet);
    waitForResponse(game);
    if (response.getUUID() != null) {
      for (      TriggeredAbility ability : abilitiesWithNoOrderSet) {
        if (ability.getId().equals(response.getUUID())) {
          return ability;
        }
      }
    }
  }
  return null;
}
