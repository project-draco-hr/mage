{
  if (outcome.equals(Outcome.PutManaInPool)) {
    if (currentlyUnpaidMana != null && ManaUtil.tryToAutoSelectAManaColor(choice,currentlyUnpaidMana)) {
      return true;
    }
  }
  updateGameStatePriority("choose(3)",game);
  while (!abort) {
    game.fireChooseChoiceEvent(playerId,choice);
    waitForResponse(game);
    if (response.getString() != null) {
      choice.setChoice(response.getString());
      return true;
    }
 else     if (!choice.isRequired()) {
      return false;
    }
  }
  return false;
}
