{
  updateGameStatePriority("chooseTarget",game);
  UUID abilityControllerId=playerId;
  if (target.getAbilityController() != null) {
    abilityControllerId=target.getAbilityController();
  }
  while (!abort) {
    Set<UUID> possibleTargets=target.possibleTargets(source == null ? null : source.getSourceId(),abilityControllerId,game);
    boolean required=target.isRequired(source);
    if (possibleTargets.isEmpty() || target.getTargets().size() >= target.getNumberOfTargets()) {
      required=false;
    }
    game.fireSelectTargetEvent(getId(),target.getMessage(),possibleTargets,required,getOptions(target,null));
    waitForResponse(game);
    if (response.getUUID() != null) {
      if (target.getTargets().contains(response.getUUID())) {
        target.remove(response.getUUID());
        continue;
      }
      if (possibleTargets.contains(response.getUUID())) {
        if (target.canTarget(abilityControllerId,response.getUUID(),source,game)) {
          target.addTarget(response.getUUID(),source,game);
          if (target.doneChosing()) {
            return true;
          }
        }
      }
    }
 else {
      if (target.getTargets().size() >= target.getNumberOfTargets()) {
        return true;
      }
      if (!required) {
        return false;
      }
    }
  }
  return false;
}
