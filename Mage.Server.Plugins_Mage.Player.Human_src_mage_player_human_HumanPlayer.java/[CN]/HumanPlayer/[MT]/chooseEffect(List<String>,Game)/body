{
  updateGameStatePriority("chooseEffect",game);
  replacementEffectChoice.getChoices().clear();
  int count=1;
  for (  String effectText : rEffects) {
    replacementEffectChoice.getChoices().add(count + ". " + effectText);
    count++;
  }
  if (replacementEffectChoice.getChoices().size() == 1) {
    return 0;
  }
  while (!abort) {
    game.fireChooseEvent(playerId,replacementEffectChoice);
    waitForResponse(game);
    log.debug("Choose effect: " + response.getString());
    if (response.getString() != null) {
      replacementEffectChoice.setChoice(response.getString());
      count=1;
      for (int i=0; i < rEffects.size(); i++) {
        if (replacementEffectChoice.getChoice().equals(count + ". " + rEffects.get(i))) {
          return i;
        }
        count++;
      }
    }
  }
  return 0;
}
