{
  boolean forcedToAttack=false;
  Set<UUID> possibleDefender=game.getCombat().getCreaturesForcedToAttack().get(attackerId);
  if (possibleDefender != null) {
    forcedToAttack=true;
  }
  if (possibleDefender == null || possibleDefender.isEmpty()) {
    possibleDefender=defenders;
  }
  if (possibleDefender.size() == 1) {
    declareAttacker(attackerId,possibleDefender.iterator().next(),game,true);
    return true;
  }
 else {
    TargetDefender target=new TargetDefender(possibleDefender,attackerId);
    target.setNotTarget(true);
    if (forcedToAttack) {
      StringBuilder sb=new StringBuilder(target.getTargetName());
      Permanent attacker=game.getPermanent(attackerId);
      if (attacker != null) {
        sb.append(" (").append(attacker.getName()).append(")");
        target.setTargetName(sb.toString());
      }
    }
    if (chooseTarget(Outcome.Damage,target,null,game)) {
      declareAttacker(attackerId,response.getUUID(),game,true);
      return true;
    }
  }
  return false;
}
