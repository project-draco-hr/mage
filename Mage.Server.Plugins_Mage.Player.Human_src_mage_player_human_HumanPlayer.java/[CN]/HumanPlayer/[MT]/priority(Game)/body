{
  passed=false;
  if (!abort) {
    if (passedTurn && game.getStack().isEmpty()) {
      pass();
      return;
    }
    game.firePriorityEvent(playerId);
    waitForResponse();
    if (response.getBoolean() != null) {
      pass();
    }
 else     if (response.getInteger() != null) {
      pass();
      passedTurn=true;
    }
 else     if (response.getString() != null && response.getString().equals("special")) {
      specialAction(game);
    }
 else     if (response.getUUID() != null) {
      MageObject object=game.getObject(response.getUUID());
      if (object != null) {
        Map<UUID,ActivatedAbility> useableAbilities=null;
switch (game.getZone(object.getId())) {
case HAND:
          useableAbilities=getUseableAbilities(object.getAbilities().getActivatedAbilities(Zone.HAND),game);
        break;
case BATTLEFIELD:
      useableAbilities=getUseableAbilities(object.getAbilities().getActivatedAbilities(Zone.BATTLEFIELD),game);
    break;
case GRAVEYARD:
  useableAbilities=getUseableAbilities(object.getAbilities().getActivatedAbilities(Zone.GRAVEYARD),game);
break;
}
if (useableAbilities != null && useableAbilities.size() > 0) {
activateAbility(useableAbilities,game);
}
}
}
}
}
