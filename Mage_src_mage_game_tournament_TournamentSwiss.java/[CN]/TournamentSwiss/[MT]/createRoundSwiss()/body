{
  List<TournamentPlayer> roundPlayers=getActivePlayers();
  RoundPairings roundPairings;
  if (roundPlayers.size() <= 16) {
    SwissPairingMinimalWeightMatching swissPairing=new SwissPairingMinimalWeightMatching(roundPlayers,rounds);
    roundPairings=swissPairing.getRoundPairings();
  }
 else {
    SwissPairingSimple swissPairing=new SwissPairingSimple(roundPlayers,rounds);
    roundPairings=swissPairing.getRoundPairings();
  }
  Round round=new Round(rounds.size() + 1,this);
  rounds.add(round);
  for (  TournamentPairing pairing : roundPairings.getPairings()) {
    round.addPairing(pairing);
  }
  for (  TournamentPlayer playerBye : roundPairings.getPlayerByes()) {
    round.getPlayerByes().add(playerBye);
    if (round.getRoundNumber() == getNumberRounds()) {
      playerBye.setState(TournamentPlayerState.FINISHED);
    }
 else {
      playerBye.setState(TournamentPlayerState.WAITING);
    }
    playerBye.setStateInfo("Round Bye");
    updateResults();
  }
  return round;
}
