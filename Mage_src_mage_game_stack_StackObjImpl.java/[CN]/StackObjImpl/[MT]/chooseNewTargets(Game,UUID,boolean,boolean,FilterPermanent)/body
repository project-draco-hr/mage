{
  Player targetController=game.getPlayer(targetControllerId);
  if (targetController != null) {
    StringBuilder oldTargetDescription=new StringBuilder();
    StringBuilder newTargetDescription=new StringBuilder();
    Abilities<Ability> objectAbilities=new AbilitiesImpl<>();
    if (this instanceof Spell) {
      objectAbilities.addAll(((Spell)this).getSpellAbilities());
    }
 else {
      objectAbilities.addAll(getAbilities());
    }
    for (    Ability ability : objectAbilities) {
      for (      Mode mode : ability.getModes().getSelectedModes()) {
        ability.getModes().setActiveMode(mode);
        oldTargetDescription.append(ability.getTargetDescription(mode.getTargets(),game));
        for (        Target target : mode.getTargets()) {
          Target newTarget=chooseNewTarget(targetController,ability,mode,target,forceChange,filterNewTarget,game);
          target.clearChosen();
          for (          UUID targetId : newTarget.getTargets()) {
            target.addTarget(targetId,newTarget.getTargetAmount(targetId),ability,game,false);
          }
        }
        newTargetDescription.append(ability.getTargetDescription(mode.getTargets(),game));
      }
    }
    if (!newTargetDescription.toString().equals(oldTargetDescription.toString()) && !game.isSimulation()) {
      game.informPlayers(this.getLogName() + " is now " + newTargetDescription.toString());
    }
    return true;
  }
  return false;
}
