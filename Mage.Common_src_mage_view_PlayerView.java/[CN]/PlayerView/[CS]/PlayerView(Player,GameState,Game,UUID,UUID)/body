{
  this.playerId=player.getId();
  this.name=player.getName();
  this.life=player.getLife();
  this.poison=player.getCounters().getCount(CounterType.POISON);
  this.experience=player.getCounters().getCount(CounterType.EXPERIENCE);
  this.wins=player.getMatchPlayer().getWins();
  this.winsNeeded=player.getMatchPlayer().getWinsNeeded();
  this.deckHashCode=player.getMatchPlayer().getDeck() != null ? player.getMatchPlayer().getDeck().getDeckHashCode() : 0;
  this.libraryCount=player.getLibrary().size();
  this.handCount=player.getHand().size();
  this.manaPool=new ManaPoolView(player.getManaPool());
  this.isActive=(player.getId().equals(state.getActivePlayerId()));
  this.hasPriority=player.getId().equals(state.getPriorityPlayerId());
  this.priorityTimeLeft=player.getPriorityTimeLeft();
  this.timerActive=(this.hasPriority && player.isGameUnderControl()) || (player.getPlayersUnderYourControl().contains(state.getPriorityPlayerId())) || player.getId().equals(game.getState().getChoosingPlayerId());
  this.hasLeft=player.hasLeft();
  for (  Card card : player.getGraveyard().getCards(game)) {
    graveyard.put(card.getId(),new CardView(card,game,false));
  }
  for (  ExileZone exileZone : game.getExile().getExileZones()) {
    for (    Card card : exileZone.getCards(game)) {
      if (player.getId().equals(card.getOwnerId())) {
        exile.put(card.getId(),new CardView(card,game,false));
      }
    }
  }
  for (  Permanent permanent : state.getBattlefield().getAllPermanents()) {
    if (showInBattlefield(permanent,state)) {
      PermanentView view=new PermanentView(permanent,game.getCard(permanent.getId()),createdForPlayerId,game);
      battlefield.put(view.getId(),view);
    }
  }
  this.topCard=player.isTopCardRevealed() && player.getLibrary().size() > 0 ? new CardView(player.getLibrary().getFromTop(game)) : null;
  if (player.getUserData() != null) {
    this.userData=player.getUserData();
  }
 else {
    this.userData=UserData.getDefaultUserDataView();
  }
  for (  CommandObject commandObject : game.getState().getCommand()) {
    if (commandObject instanceof Emblem) {
      Emblem emblem=(Emblem)commandObject;
      if (emblem.getControllerId().equals(this.playerId)) {
        Card sourceCard=game.getCard(((CommandObject)emblem).getSourceId());
        if (sourceCard != null) {
          if (!sourceCard.getCardType().contains(CardType.PLANESWALKER)) {
            if (sourceCard.getSecondCardFace() != null) {
              sourceCard=sourceCard.getSecondCardFace();
            }
          }
          commandList.add(new EmblemView(emblem,sourceCard));
        }
 else {
          commandList.add(new EmblemView(emblem));
        }
      }
    }
 else     if (commandObject instanceof Commander) {
      Commander commander=(Commander)commandObject;
      if (commander.getControllerId().equals(this.playerId)) {
        Card sourceCard=game.getCard(commander.getSourceId());
        if (sourceCard != null) {
          commandList.add(new CommanderView(commander,sourceCard,game));
        }
      }
    }
  }
  if (player.getAttachments() != null) {
    attachments.addAll(player.getAttachments());
  }
  this.statesSavedSize=player.getStoredBookmark();
  this.passedTurn=player.getPassedTurn();
  this.passedUntilEndOfTurn=player.getPassedUntilEndOfTurn();
  this.passedUntilNextMain=player.getPassedUntilNextMain();
  this.passedAllTurns=player.getPassedAllTurns();
  this.passedUntilStackResolved=player.getPassedUntilStackResolved();
}
