{
  Player controller=game.getPlayer(controllerId);
  if (controller == null) {
    return false;
  }
  lastAddedTokenIds.clear();
  Card source=game.getCard(sourceId);
  String setCode;
  if (this.getOriginalExpansionSetCode() != null && !this.getOriginalExpansionSetCode().isEmpty()) {
    setCode=this.getOriginalExpansionSetCode();
  }
 else {
    setCode=source != null ? source.getExpansionSetCode() : null;
  }
  GameEvent event=new GameEvent(EventType.CREATE_TOKEN,null,sourceId,controllerId,amount,this.getCardType().contains(CardType.CREATURE));
  if (!game.replaceEvent(event)) {
    amount=event.getAmount();
    for (int i=0; i < amount; i++) {
      PermanentToken newToken=new PermanentToken(this,event.getPlayerId(),setCode,game);
      game.getState().addCard(newToken);
      game.addPermanent(newToken);
      if (tapped) {
        newToken.setTapped(true);
      }
      this.lastAddedTokenIds.add(newToken.getId());
      this.lastAddedTokenId=newToken.getId();
      game.setScopeRelevant(true);
      game.applyEffects();
      newToken.entersBattlefield(sourceId,game,Zone.OUTSIDE,true);
      game.setScopeRelevant(false);
      game.applyEffects();
      game.fireEvent(new ZoneChangeEvent(newToken,event.getPlayerId(),Zone.OUTSIDE,Zone.BATTLEFIELD));
      if (attacking && game.getCombat() != null) {
        game.getCombat().addAttackingCreature(newToken.getId(),game);
      }
    }
    if (!game.isSimulation()) {
      game.informPlayers(new StringBuilder(controller.getLogName()).append(" puts ").append(CardUtil.numberToText(amount,"a")).append(" ").append(this.getName()).append(" token").append(amount == 1 ? "" : "s").append(" onto the battlefield").toString());
    }
    return true;
  }
  return false;
}
