{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    int highestPower=Integer.MIN_VALUE;
    Permanent selectedCreature=null;
    for (    Permanent permanent : game.getBattlefield().getActivePermanents(new FilterCreaturePermanent(),controller.getId(),game)) {
      if (highestPower < permanent.getPower().getValue()) {
        highestPower=permanent.getPower().getValue();
        selectedCreature=permanent;
      }
 else       if (highestPower == permanent.getPower().getValue()) {
        highestPower=permanent.getToughness().getValue();
        selectedCreature=null;
      }
    }
    if (highestPower != Integer.MIN_VALUE) {
      if (selectedCreature == null) {
        FilterPermanent filter=new FilterCreaturePermanent("creature with power " + highestPower);
        filter.add(new PowerPredicate(Filter.ComparisonType.Equal,highestPower));
        Target target=new TargetPermanent(1,1,filter,true);
        if (controller.chooseTarget(outcome,target,source,game)) {
          selectedCreature=game.getPermanent(target.getFirstTarget());
        }
      }
      if (selectedCreature != null) {
        FixedTarget target=new FixedTarget(selectedCreature.getId());
        Effect effect=new AddCountersTargetEffect(CounterType.P1P1.createInstance(4));
        effect.setTargetPointer(target);
        effect.apply(game,source);
        ContinuousEffect continuousEffect=new GainAbilityTargetEffect(TrampleAbility.getInstance(),Duration.EndOfTurn);
        continuousEffect.setTargetPointer(target);
        game.addEffect(continuousEffect,source);
        return true;
      }
    }
    return true;
  }
  return false;
}
