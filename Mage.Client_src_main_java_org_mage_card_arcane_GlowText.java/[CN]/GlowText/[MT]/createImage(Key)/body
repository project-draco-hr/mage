{
  Dimension size=new Dimension(key.width,key.height);
  BufferedImage image=GraphicsUtilities.createCompatibleTranslucentImage(size.width,size.height);
  Graphics2D g2d=image.createGraphics();
  g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  int textX=0, textY=0;
  int wrapWidth=Math.max(0,key.wrap ? size.width - key.glowSize : Integer.MAX_VALUE);
  AttributedString attributedString=new AttributedString(key.text);
  attributedString.addAttribute(TextAttribute.FONT,key.getFont());
  AttributedCharacterIterator charIterator=attributedString.getIterator();
  FontRenderContext fontContext=g2d.getFontRenderContext();
  LineBreakMeasurer measurer=new LineBreakMeasurer(charIterator,BreakIterator.getWordInstance(Locale.ENGLISH),fontContext);
  int lineCount=0;
  while (measurer.getPosition() < charIterator.getEndIndex()) {
    lineCount++;
    if (lineCount > 2) {
      break;
    }
  }
  charIterator.first();
  if (lineCount > 2) {
    measurer=new LineBreakMeasurer(charIterator,BreakIterator.getCharacterInstance(Locale.ENGLISH),fontContext);
  }
 else {
    measurer.setPosition(0);
  }
  while (measurer.getPosition() < charIterator.getEndIndex()) {
    TextLayout textLayout=measurer.nextLayout(wrapWidth);
    float ascent=textLayout.getAscent();
    textY+=ascent;
    g2d.setColor(key.glowColor);
    g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.8f));
    int glowSize=key.glowSize;
    textLayout.draw(g2d,textX + glowSize / 2 + 1,textY + glowSize / 2 - 1);
    textLayout.draw(g2d,textX + glowSize / 2 + 1,textY + glowSize / 2 + 1);
    textLayout.draw(g2d,textX + glowSize / 2 - 1,textY + glowSize / 2 - 1);
    textLayout.draw(g2d,textX + glowSize / 2 - 1,textY + glowSize / 2 + 1);
    g2d.setColor(key.color);
    g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));
    textLayout.draw(g2d,textX + glowSize / 2,textY + glowSize / 2);
    textY+=textLayout.getDescent() + textLayout.getLeading();
  }
  return image;
}
