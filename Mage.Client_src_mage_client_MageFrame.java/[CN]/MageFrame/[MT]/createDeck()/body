{
  Deck deck=new Deck();
  deck.getCards().add(new mage.sets.shardsofalara.BroodmateDragon(null));
  deck.getCards().add(new mage.sets.shardsofalara.BroodmateDragon(null));
  deck.getCards().add(new mage.sets.alarareborn.BloodbraidElf(null));
  deck.getCards().add(new mage.sets.alarareborn.BloodbraidElf(null));
  deck.getCards().add(new mage.sets.shardsofalara.JundPanorama(null));
  deck.getCards().add(new mage.sets.shardsofalara.JundPanorama(null));
  deck.getCards().add(new mage.sets.alarareborn.VengefulRebirth(null));
  deck.getCards().add(new mage.sets.alarareborn.VengefulRebirth(null));
  deck.getCards().add(new mage.sets.shardsofalara.SproutingThrinax(null));
  deck.getCards().add(new mage.sets.shardsofalara.SproutingThrinax(null));
  deck.getCards().add(new mage.sets.shardsofalara.SarkhanVol(null));
  deck.getCards().add(new mage.sets.shardsofalara.SarkhanVol(null));
  deck.getCards().add(new mage.sets.alarareborn.MaelstromPulse(null));
  deck.getCards().add(new mage.sets.alarareborn.MaelstromPulse(null));
  try {
    deck.getDeckCardLists().save("test.dck");
  }
 catch (  FileNotFoundException ex) {
    logger.log(Level.SEVERE,null,ex);
  }
catch (  IOException ex) {
    logger.log(Level.SEVERE,null,ex);
  }
}
