{
  Mana types=getManaTypes(game,source);
  Choice choice=new ChoiceColor(true);
  choice.getChoices().clear();
  choice.setMessage("Pick a mana color");
  if (types.getAny() > 0) {
    choice.getChoices().add("Black");
    choice.getChoices().add("Red");
    choice.getChoices().add("Blue");
    choice.getChoices().add("Green");
    choice.getChoices().add("White");
  }
 else {
    if (types.getBlack() > 0) {
      choice.getChoices().add("Black");
    }
    if (types.getRed() > 0) {
      choice.getChoices().add("Red");
    }
    if (types.getBlue() > 0) {
      choice.getChoices().add("Blue");
    }
    if (types.getGreen() > 0) {
      choice.getChoices().add("Green");
    }
    if (types.getWhite() > 0) {
      choice.getChoices().add("White");
    }
  }
  if (choice.getChoices().size() > 0) {
    Player player=game.getPlayer(source.getControllerId());
    if (choice.getChoices().size() == 1) {
      choice.setChoice(choice.getChoices().iterator().next());
    }
 else {
      player.choose(outcome,choice,game);
    }
    if (choice.getChoice() != null) {
      Mana mana=new Mana();
switch (choice.getChoice()) {
case "Black":
        mana.setBlack(1);
      break;
case "Blue":
    mana.setBlue(1);
  break;
case "Red":
mana.setRed(1);
break;
case "Green":
mana.setGreen(1);
break;
case "White":
mana.setWhite(1);
break;
}
checkToFirePossibleEvents(mana,game,source);
player.getManaPool().addMana(mana,game,source);
return true;
}
return false;
}
return true;
}
