{
  if (cards.isEmpty()) {
    return true;
  }
  Set<Card> successfulMovedCards=new LinkedHashSet<>();
  Zone fromZone=null;
switch (toZone) {
case GRAVEYARD:
    fromZone=game.getState().getZone(cards.iterator().next().getId());
  successfulMovedCards=moveCardsToGraveyardWithInfo(cards,source,game,fromZone);
return successfulMovedCards.size() > 0;
case BATTLEFIELD:
List<ZoneChangeInfo> infoList=new ArrayList<ZoneChangeInfo>();
for (Card card : cards) {
fromZone=game.getState().getZone(card.getId());
ZoneChangeEvent event=new ZoneChangeEvent(card.getId(),source.getSourceId(),byOwner ? card.getOwnerId() : getId(),fromZone,Zone.BATTLEFIELD,appliedEffects);
infoList.add(new ZoneChangeInfo.Battlefield(event,faceDown,tapped));
}
infoList=ZonesHandler.moveCards(infoList,game);
for (ZoneChangeInfo info : infoList) {
Permanent permanent=game.getPermanent(info.event.getTargetId());
if (permanent != null) {
successfulMovedCards.add(permanent);
if (!game.isSimulation()) {
game.informPlayers(game.getPlayer(info.event.getPlayerId()) + " puts " + (info.faceDown ? "a card face down " : permanent.getLogName())+ " from "+ fromZone.toString().toLowerCase(Locale.ENGLISH)+ " onto the Battlefield");
}
}
}
game.applyEffects();
break;
case HAND:
for (Card card : cards) {
fromZone=game.getState().getZone(card.getId());
boolean hideCard=fromZone.equals(Zone.LIBRARY) || (card.isFaceDown(game) && !fromZone.equals(Zone.STACK) && !fromZone.equals(Zone.BATTLEFIELD));
if (moveCardToHandWithInfo(card,source == null ? null : source.getSourceId(),game,!hideCard)) {
successfulMovedCards.add(card);
}
}
break;
case EXILED:
for (Card card : cards) {
fromZone=game.getState().getZone(card.getId());
boolean withName=(fromZone.equals(Zone.BATTLEFIELD) || fromZone.equals(Zone.STACK)) || !card.isFaceDown(game);
if (moveCardToExileWithInfo(card,null,"",source == null ? null : source.getSourceId(),game,fromZone,withName)) {
successfulMovedCards.add(card);
}
}
break;
case LIBRARY:
for (Card card : cards) {
if (card instanceof Spell) {
fromZone=game.getState().getZone(((Spell)card).getSourceId());
}
 else {
fromZone=game.getState().getZone(card.getId());
}
boolean hideCard=fromZone.equals(Zone.HAND) || fromZone.equals(Zone.LIBRARY);
if (moveCardToLibraryWithInfo(card,source == null ? null : source.getSourceId(),game,fromZone,true,!hideCard)) {
successfulMovedCards.add(card);
}
}
break;
default :
throw new UnsupportedOperationException("to Zone" + toZone.toString() + " not supported yet");
}
return successfulMovedCards.size() > 0;
}
