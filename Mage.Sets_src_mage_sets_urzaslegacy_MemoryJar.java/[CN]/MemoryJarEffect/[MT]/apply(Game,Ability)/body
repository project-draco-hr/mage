{
  Cards cards=new CardsImpl();
  for (  UUID playerId : game.getPlayer(source.getControllerId()).getInRange()) {
    Player player=game.getPlayer(playerId);
    if (player != null) {
      Cards hand=player.getHand();
      while (hand.size() > 0) {
        Card card=hand.get(hand.iterator().next(),game);
        if (card != null) {
          card.moveToExile(getId(),"Memory Jar",source.getSourceId(),game);
          card.setFaceDown(true,game);
          cards.add(card);
        }
      }
    }
  }
  for (  UUID playerId : game.getPlayer(source.getControllerId()).getInRange()) {
    Player player=game.getPlayer(playerId);
    if (player != null) {
      player.drawCards(7,game);
    }
  }
  Effect effect=new MemoryJarDelayedEffect();
  effect.setValue("MemoryJarCards",cards);
  DelayedTriggeredAbility delayedAbility=new MemoryJarDelayedTriggeredAbility(effect);
  delayedAbility.setSourceId(source.getSourceId());
  delayedAbility.setControllerId(source.getControllerId());
  delayedAbility.setSourceObject(source.getSourceObject(game),game);
  game.addDelayedTriggeredAbility(delayedAbility);
  return true;
}
