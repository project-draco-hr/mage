{
  initComponents();
  this.modal=true;
  pnlText.setOpaque(true);
  pnlText.setBackground(new Color(240,240,240,140));
  Rectangle r=new Rectangle(610,250);
  Image image=ImageHelper.getImageFromResources(gameEndView.hasWon() ? "/game_won.jpg" : "/game_lost.jpg");
  BufferedImage imageResult=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
  ImageIcon icon=new ImageIcon(imageResult);
  lblResultImage.setIcon(icon);
  this.lblGameInfo.setText(gameEndView.getGameInfo());
  this.lblMatchInfo.setText(gameEndView.getMatchInfo());
  this.lblAdditionalInfo.setText(gameEndView.getAdditionalInfo());
  String autoSave=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_GAME_LOG_AUTO_SAVE,"true");
  if (autoSave.equals("true")) {
    this.saveGameLog(gameEndView);
  }
  txtDurationGame.setText(Format.getDuration(gameEndView.getStartTime(),gameEndView.getEndTime()));
  txtDurationGame.setToolTipText(new StringBuilder(df.format(gameEndView.getStartTime())).append(" - ").append(df.format(gameEndView.getEndTime())).toString());
  Calendar cal=Calendar.getInstance();
  txtDurationMatch.setText(Format.getDuration(gameEndView.getMatchView().getStartTime(),cal.getTime()));
  txtDurationMatch.setToolTipText(new StringBuilder(df.format(gameEndView.getMatchView().getStartTime())).append(" - ").append(df.format(cal.getTime())).toString());
  StringBuilder sb=new StringBuilder();
  for (  PlayerView player : gameEndView.getPlayers()) {
    sb.append(player.getName()).append(" Life: ").append(player.getLife()).append(" ");
  }
  this.txtLife.setText(sb.toString());
  if (gameEndView.hasWon()) {
    AudioManager.playPlayerWon();
  }
 else {
    AudioManager.playPlayerLost();
  }
  txtMatchScore.setText(gameEndView.getMatchView().getResult());
}
