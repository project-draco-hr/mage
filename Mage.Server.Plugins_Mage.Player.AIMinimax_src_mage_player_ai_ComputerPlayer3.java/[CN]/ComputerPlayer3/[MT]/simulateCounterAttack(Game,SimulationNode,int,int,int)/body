{
  if (Thread.interrupted()) {
    Thread.currentThread().interrupt();
    logger.debug("interrupted");
    return GameStateEvaluator.evaluate(playerId,game);
  }
  Integer val=null;
  if (!game.isGameOver()) {
    simulateToEnd(game);
    game.getState().setActivePlayerId(game.getState().getPlayerList(game.getActivePlayerId()).getNext());
    logger.debug("simulating -- counter attack for player " + game.getPlayer(game.getActivePlayerId()).getName());
    game.getTurn().setPhase(new BeginningPhase());
    if (game.getPhase().beginPhase(game,game.getActivePlayerId())) {
      simulateStep(game,new UntapStep());
      simulateStep(game,new UpkeepStep());
      simulateStep(game,new DrawStep());
      game.getPhase().endPhase(game,game.getActivePlayerId());
    }
    val=simulateCombat(game,node,depth - 1,alpha,beta,true);
    if (logger.isDebugEnabled())     logger.debug("returning -- counter attack score: " + val + " depth:"+ depth+ " for player:"+ game.getPlayer(node.getPlayerId()).getName());
  }
  if (val == null)   val=GameStateEvaluator.evaluate(playerId,game);
  return val;
}
