{
  ZoneChangeEvent event=new ZoneChangeEvent(this.getId(),sourceId,this.getOwnerId(),Zone.BATTLEFIELD,toZone,appliedEffects);
  if (!game.replaceEvent(event)) {
    Player controller=game.getPlayer(this.getControllerId());
    if (controller != null) {
      controller.removeFromBattlefield(this,game);
      updateZoneChangeCounter(game);
      MeldCard meldCard=(MeldCard)this.getCard();
      Card topHalfCard=meldCard.getTopHalfCard();
      Card bottomHalfCard=meldCard.getBottomHalfCard();
switch (event.getToZone()) {
case GRAVEYARD:
        game.getPlayer(this.getOwnerId()).putInGraveyard(topHalfCard,game);
      game.getPlayer(this.getOwnerId()).putInGraveyard(bottomHalfCard,game);
    break;
case HAND:
  game.getPlayer(this.getOwnerId()).getHand().add(topHalfCard);
game.getPlayer(this.getOwnerId()).getHand().add(bottomHalfCard);
break;
case EXILED:
game.getExile().getPermanentExile().add(topHalfCard);
game.getExile().getPermanentExile().add(bottomHalfCard);
break;
case LIBRARY:
CardsImpl cardsToMove=new CardsImpl();
cardsToMove.add(topHalfCard);
cardsToMove.add(bottomHalfCard);
if (flag) {
controller.putCardsOnTopOfLibrary(cardsToMove,game,null,true);
}
 else {
controller.putCardsOnBottomOfLibrary(cardsToMove,game,null,true);
}
break;
default :
return false;
}
meldCard.setMelded(false);
game.setZone(topHalfCard.getId(),event.getToZone());
game.setZone(bottomHalfCard.getId(),event.getToZone());
meldCard.setTopLastZoneChangeCounter(topHalfCard.getZoneChangeCounter(game));
meldCard.setBottomLastZoneChangeCounter(bottomHalfCard.getZoneChangeCounter(game));
game.addSimultaneousEvent(event);
return true;
}
}
return false;
}
