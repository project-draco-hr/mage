{
  this.tableId=table.getId();
  this.gameType=table.getGameType();
  this.tableName=table.getName();
  this.controllerName=table.getControllerName();
  this.createTime=table.getCreateTime();
  this.deckType=table.getDeckType();
  this.tableState=table.getState();
  this.isTournament=table.isTournament();
  for (  Seat seat : table.getSeats()) {
    seats.add(new SeatView(seat));
  }
  if (!table.isTournament()) {
    this.additionalInfo=new StringBuilder("Wins: ").append(table.getMatch().getWinsNeeded()).toString();
    for (    Game game : table.getMatch().getGames()) {
      games.add(game.getId());
    }
    StringBuilder sb=new StringBuilder();
    for (    MatchPlayer matchPlayer : table.getMatch().getPlayers()) {
      if (!matchPlayer.getPlayer().getName().equals(table.getControllerName())) {
        sb.append(", ").append(matchPlayer.getPlayer().getName());
      }
    }
    this.controllerName+=sb.toString();
  }
 else {
    StringBuilder sb1=new StringBuilder();
    for (    TournamentPlayer tp : table.getTournament().getPlayers()) {
      if (!tp.getPlayer().getName().equals(table.getControllerName())) {
        sb1.append(", ").append(tp.getPlayer().getName());
      }
    }
    this.controllerName+=sb1.toString();
    StringBuilder sb=new StringBuilder("Seats: ").append(table.getTournament().getPlayers().size()).append("/").append(table.getNumberOfSeats());
    if (table.getState().equals(TableState.DUELING)) {
      sb.append(" - Running round: ").append(table.getTournament().getRounds().size());
    }
    this.additionalInfo=sb.toString();
  }
}
