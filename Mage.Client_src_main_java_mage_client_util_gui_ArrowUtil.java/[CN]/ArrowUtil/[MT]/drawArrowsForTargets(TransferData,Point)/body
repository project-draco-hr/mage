{
  java.util.List<UUID> targets=data.card.getTargets();
  if (targets == null) {
    return;
  }
  Point me=new Point(data.locationOnScreen);
  me.translate(-parentPoint.x,-parentPoint.y);
  for (  UUID uuid : targets) {
    PlayAreaPanel p=MageFrame.getGame(data.gameId).getPlayers().get(uuid);
    if (p != null) {
      Point target=p.getLocationOnScreen();
      target.translate(-parentPoint.x,-parentPoint.y);
      ArrowBuilder.getBuilder().addArrow(data.gameId,(int)me.getX() + 35,(int)me.getY(),(int)target.getX() + 40,(int)target.getY() - 40,Color.red,ArrowBuilder.Type.TARGET);
      continue;
    }
    for (    PlayAreaPanel panel : MageFrame.getGame(data.gameId).getPlayers().values()) {
      MagePermanent permanent=panel.getBattlefieldPanel().getPermanents().get(uuid);
      if (permanent != null) {
        Point target=permanent.getLocationOnScreen();
        target.translate(-parentPoint.x,-parentPoint.y);
        ArrowBuilder.getBuilder().addArrow(data.gameId,(int)me.getX() + 35,(int)me.getY(),(int)target.getX() + 40,(int)target.getY() + 10,Color.red,ArrowBuilder.Type.TARGET);
        continue;
      }
      PlayerView view=panel.getPlayerPanel().getPlayer();
      if (view != null) {
        SimpleCardsView graveyard=view.getGraveyard();
        if (graveyard.containsKey(uuid)) {
          p=MageFrame.getGame(data.gameId).getPlayers().get(view.getPlayerId());
          if (p != null) {
            Point target=p.getLocationOnScreen();
            target.translate(-parentPoint.x,-parentPoint.y);
            int yOffset=p.isSmallMode() ? (PlayAreaPanel.PANEL_HEIGHT - PlayAreaPanel.PANEL_HEIGHT_SMALL) : 0;
            ArrowBuilder.getBuilder().addArrow(data.gameId,(int)me.getX() + 35,(int)me.getY(),(int)target.getX() + 15,(int)target.getY() + 145 - yOffset,Color.red,ArrowBuilder.Type.TARGET);
          }
        }
      }
    }
  }
}
