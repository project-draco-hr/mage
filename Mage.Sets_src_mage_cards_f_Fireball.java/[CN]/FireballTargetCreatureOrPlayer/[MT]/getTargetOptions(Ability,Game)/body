{
  List<TargetCreatureOrPlayer> options=new ArrayList<>();
  int xVal=source.getManaCostsToPay().getX();
  if (xVal < 1) {
    return options;
  }
  for (int numberTargets=1; numberTargets == 1 || xVal / (numberTargets - 1) > 1; numberTargets++) {
    Set<UUID> possibleTargets=possibleTargets(source.getSourceId(),source.getControllerId(),game);
    if (possibleTargets.size() < numberTargets) {
      return options;
    }
    if ((xVal - (numberTargets - 1)) / numberTargets < 1) {
      continue;
    }
    possibleTargets.removeAll(getTargets());
    Iterator<UUID> it=possibleTargets.iterator();
    while (it.hasNext()) {
      UUID targetId=it.next();
      TargetCreatureOrPlayer target=this.copy();
      target.clearChosen();
      target.addTarget(targetId,source,game,true);
      if (target.getTargets().size() == numberTargets) {
        chosen=true;
      }
      if (!target.isChosen()) {
        Iterator<UUID> it2=possibleTargets.iterator();
        while (it2.hasNext() && !target.isChosen()) {
          UUID nextTargetId=it2.next();
          target.addTarget(nextTargetId,source,game,true);
          if (target.getTargets().size() == numberTargets) {
            chosen=true;
          }
        }
      }
      if (target.isChosen()) {
        options.add(target);
      }
    }
  }
  return options;
}
