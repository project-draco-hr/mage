{
  if (tapped && !game.getState().getContinuousEffects().asThough(this.getId(),AsThoughEffectType.BLOCK_TAPPED,game)) {
    return false;
  }
  Permanent attacker=game.getPermanent(attackerId);
  if (attacker == null) {
    return false;
  }
  if (!game.getPlayer(this.getControllerId()).hasOpponent(attacker.getControllerId(),game)) {
    return false;
  }
  for (  Map.Entry<RestrictionEffect,HashSet<Ability>> entry : game.getContinuousEffects().getApplicableRestrictionEffects(this,game).entrySet()) {
    for (    Ability ability : entry.getValue()) {
      if (!entry.getKey().canBlock(attacker,this,ability,game)) {
        return false;
      }
    }
  }
  for (  Map.Entry<RestrictionEffect,HashSet<Ability>> restrictionEntry : game.getContinuousEffects().getApplicableRestrictionEffects(attacker,game).entrySet()) {
    for (    Ability ability : restrictionEntry.getValue()) {
      if (!restrictionEntry.getKey().canBeBlocked(attacker,this,ability,game)) {
        return false;
      }
    }
  }
  return !attacker.hasProtectionFrom(this,game);
}
