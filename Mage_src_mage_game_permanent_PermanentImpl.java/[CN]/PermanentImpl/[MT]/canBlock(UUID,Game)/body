{
  if (tapped && !game.getState().getContinuousEffects().asThough(this.getId(),AsThoughEffectType.BLOCK_TAPPED,game)) {
    return false;
  }
  Permanent attacker=game.getPermanent(attackerId);
  if (game.getOpponents(this.getControllerId()) != null && !game.getOpponents(this.getControllerId()).contains(attacker.getControllerId())) {
    return false;
  }
  for (  Map.Entry entry : game.getContinuousEffects().getApplicableRestrictionEffects(this,game).entrySet()) {
    RestrictionEffect effect=(RestrictionEffect)entry.getKey();
    for (    Ability ability : (HashSet<Ability>)entry.getValue()) {
      if (!effect.canBlock(attacker,this,ability,game)) {
        return false;
      }
    }
  }
  for (  Map.Entry entry : game.getContinuousEffects().getApplicableRestrictionEffects(attacker,game).entrySet()) {
    RestrictionEffect effect=(RestrictionEffect)entry.getKey();
    for (    Ability ability : (HashSet<Ability>)entry.getValue()) {
      if (!effect.canBeBlocked(attacker,this,ability,game)) {
        return false;
      }
    }
  }
  if (attacker != null && attacker.hasProtectionFrom(this,game)) {
    return false;
  }
  return true;
}
