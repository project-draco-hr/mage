{
  super(permanent);
  this.tapped=permanent.tapped;
  this.flipped=permanent.flipped;
  this.originalControllerId=permanent.originalControllerId;
  this.controllerId=permanent.controllerId;
  this.damage=permanent.damage;
  this.controlledFromStartOfControllerTurn=permanent.controlledFromStartOfControllerTurn;
  this.turnsOnBattlefield=permanent.turnsOnBattlefield;
  this.phasedIn=permanent.phasedIn;
  this.faceUp=permanent.faceUp;
  this.attacking=permanent.attacking;
  this.blocking=permanent.blocking;
  this.maxBlocks=permanent.maxBlocks;
  this.loyaltyUsed=permanent.loyaltyUsed;
  this.deathtouched=permanent.deathtouched;
  this.attachments.addAll(permanent.attachments);
  for (  Map.Entry<String,List<UUID>> entry : permanent.connectedCards.entrySet()) {
    this.connectedCards.put(entry.getKey(),entry.getValue());
  }
  if (permanent.dealtDamageByThisTurn != null) {
    dealtDamageByThisTurn=new ArrayList<>(permanent.dealtDamageByThisTurn);
    if (permanent.markedDamage != null) {
      markedDamage=new ArrayList<>();
      for (      Counter counter : permanent.markedDamage) {
        markedDamage.add(counter.copy());
      }
    }
  }
  this.attachedTo=permanent.attachedTo;
  this.minBlockedBy=permanent.minBlockedBy;
  this.maxBlockedBy=permanent.maxBlockedBy;
  this.transformed=permanent.transformed;
  this.monstrous=permanent.monstrous;
  this.pairedCard=permanent.pairedCard;
}
