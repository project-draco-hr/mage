{
  if (x < 0) {
    x=0;
  }
  if (y < 0) {
    y=0;
  }
  int cardWidth=getCardWidth();
  int cardHeight=getCardHeight();
  int cardTopHeight=CardRenderer.getCardTopHeight(cardWidth);
  int dx=x % (cardWidth + GRID_PADDING);
  int col=x / (cardWidth + GRID_PADDING);
  int gridWidth=cardGrid.isEmpty() ? 0 : cardGrid.get(0).size();
  if (dx < GRID_PADDING && col < gridWidth) {
    int curY=COUNT_LABEL_HEIGHT;
    int rowIndex=0;
    for (int i=0; i < cardGrid.size(); ++i) {
      int maxStack=maxStackSize.get(i);
      int rowHeight=cardTopHeight * (maxStack - 1) + cardHeight;
      int rowBottom=curY + rowHeight + COUNT_LABEL_HEIGHT;
      if (y < rowBottom) {
        rowIndex=i;
        break;
      }
 else {
        rowIndex=i + 1;
        curY=rowBottom;
      }
    }
    insertArrow.setIcon(INSERT_COL_ICON);
    insertArrow.setSize(64,64);
    insertArrow.setLocation((cardWidth + GRID_PADDING) * col + GRID_PADDING / 2 - 32,curY);
  }
 else {
    col=Math.min(col,gridWidth);
    int curY=COUNT_LABEL_HEIGHT;
    int rowIndex=0;
    int offsetIntoStack=0;
    for (int i=0; i < cardGrid.size(); ++i) {
      int maxStack=maxStackSize.get(i);
      int rowHeight=cardTopHeight * (maxStack - 1) + cardHeight;
      int rowBottom=curY + rowHeight + COUNT_LABEL_HEIGHT;
      if (y < rowBottom) {
        rowIndex=i;
        offsetIntoStack=y - curY;
        break;
      }
 else {
        rowIndex=i + 1;
        offsetIntoStack=y - rowBottom;
        curY=rowBottom;
      }
    }
    ArrayList<CardView> stack;
    if (rowIndex < cardGrid.size() && col < cardGrid.get(0).size()) {
      stack=cardGrid.get(rowIndex).get(col);
    }
 else {
      stack=new ArrayList<>();
    }
    int stackInsertIndex=(offsetIntoStack + cardTopHeight / 2) / cardTopHeight;
    stackInsertIndex=Math.max(0,Math.min(stackInsertIndex,stack.size()));
    insertArrow.setIcon(INSERT_ROW_ICON);
    insertArrow.setSize(64,32);
    insertArrow.setLocation((cardWidth + GRID_PADDING) * col + GRID_PADDING + cardWidth / 2 - 32,curY + stackInsertIndex * cardTopHeight - 32);
  }
}
