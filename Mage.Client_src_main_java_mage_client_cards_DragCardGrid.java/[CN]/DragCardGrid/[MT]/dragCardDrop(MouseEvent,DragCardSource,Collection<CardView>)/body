{
  e=SwingUtilities.convertMouseEvent(this,e,cardContent);
  int x=e.getX();
  int y=e.getY();
  if (x < 0) {
    x=0;
  }
  if (y < 0) {
    y=0;
  }
  if (source == this) {
    for (    ArrayList<ArrayList<CardView>> gridRow : cardGrid) {
      for (      ArrayList<CardView> stack : gridRow) {
        for (int i=0; i < stack.size(); ++i) {
          if (cards.contains(stack.get(i))) {
            stack.set(i,null);
          }
        }
      }
    }
  }
  int cardWidth=getCardWidth();
  int cardHeight=getCardHeight();
  int cardTopHeight=CardRenderer.getCardTopHeight(cardWidth);
  int dx=x % (cardWidth + GRID_PADDING);
  int col=x / (cardWidth + GRID_PADDING);
  int gridWidth=cardGrid.isEmpty() ? 0 : cardGrid.get(0).size();
  if (dx < GRID_PADDING && col < gridWidth) {
    int curY=COUNT_LABEL_HEIGHT;
    int rowIndex=0;
    for (int i=0; i < cardGrid.size(); ++i) {
      int maxStack=maxStackSize.get(i);
      int rowHeight=cardTopHeight * (maxStack - 1) + cardHeight;
      int rowBottom=curY + rowHeight + COUNT_LABEL_HEIGHT;
      if (y < rowBottom) {
        rowIndex=i;
        break;
      }
 else {
        rowIndex=i + 1;
        curY=rowBottom;
      }
    }
    if (rowIndex >= cardGrid.size()) {
      ArrayList<ArrayList<CardView>> newRow=new ArrayList<>();
      if (!cardGrid.isEmpty()) {
        for (int colIndex=0; colIndex < cardGrid.get(0).size(); ++colIndex) {
          newRow.add(new ArrayList<>());
        }
      }
      cardGrid.add(newRow);
      maxStackSize.add(0);
    }
    for (int i=0; i < cardGrid.size(); ++i) {
      cardGrid.get(i).add(col,new ArrayList<>());
    }
    cardGrid.get(rowIndex).get(col).addAll(cards);
  }
 else {
    col=Math.min(col,gridWidth);
    int curY=COUNT_LABEL_HEIGHT;
    int rowIndex=0;
    int offsetIntoStack=0;
    for (int i=0; i < cardGrid.size(); ++i) {
      int maxStack=maxStackSize.get(i);
      int rowHeight=cardTopHeight * (maxStack - 1) + cardHeight;
      int rowBottom=curY + rowHeight + COUNT_LABEL_HEIGHT;
      if (y < rowBottom) {
        rowIndex=i;
        offsetIntoStack=y - curY;
        break;
      }
 else {
        rowIndex=i + 1;
        offsetIntoStack=y - rowBottom;
        curY=rowBottom;
      }
    }
    if (rowIndex >= cardGrid.size()) {
      ArrayList<ArrayList<CardView>> newRow=new ArrayList<>();
      if (!cardGrid.isEmpty()) {
        for (int colIndex=0; colIndex < cardGrid.get(0).size(); ++colIndex) {
          newRow.add(new ArrayList<>());
        }
      }
      cardGrid.add(newRow);
      maxStackSize.add(0);
    }
    if (col >= cardGrid.get(0).size()) {
      for (int i=0; i < cardGrid.size(); ++i) {
        cardGrid.get(i).add(new ArrayList<>());
      }
    }
    ArrayList<CardView> stack=cardGrid.get(rowIndex).get(col);
    int stackInsertIndex=(offsetIntoStack + cardTopHeight / 2) / cardTopHeight;
    stackInsertIndex=Math.max(0,Math.min(stackInsertIndex,stack.size()));
    stack.addAll(stackInsertIndex,cards);
  }
  if (source == this) {
    trimGrid();
    layoutGrid();
    cardScroll.revalidate();
    cardScroll.repaint();
  }
 else {
    for (    CardView card : cards) {
      card.setSelected(true);
      addCardView(card,false);
      eventSource.addSpecificCard(card,"add-specific-card");
    }
    layoutGrid();
    cardContent.repaint();
  }
}
