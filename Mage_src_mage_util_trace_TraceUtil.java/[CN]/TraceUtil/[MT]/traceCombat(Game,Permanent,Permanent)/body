{
  String uuid="[" + UUID.randomUUID() + "] ";
  log.error(uuid + "Tracing game state...");
  if (blocker != null) {
    log.error(uuid + blocker.getLogName() + " could block "+ attacker.getLogName());
  }
  log.error(uuid);
  log.error(uuid + "Attacker abilities: ");
  for (  Ability ability : attacker.getAbilities()) {
    log.error(uuid + "     " + ability.toString()+ ", id="+ ability.getId());
  }
  if (blocker != null) {
    log.error(uuid + "Blocker abilities: ");
    for (    Ability ability : blocker.getAbilities()) {
      log.error(uuid + "     " + ability.toString()+ ", id="+ ability.getId());
    }
  }
  log.error(uuid);
  log.error(uuid + "Flying ability id: " + FlyingAbility.getInstance().getId());
  log.error(uuid + "Reach ability id: " + ReachAbility.getInstance().getId());
  log.error(uuid + "Intimidate ability id: " + IntimidateAbility.getInstance().getId());
  log.error(uuid);
  log.error(uuid + "Restriction effects:");
  Ability ability=attacker.getAbilities().size() > 0 ? attacker.getAbilities().get(0) : null;
  ContinuousEffectsList<RestrictionEffect> restrictionEffects=(ContinuousEffectsList<RestrictionEffect>)game.getContinuousEffects().getRestrictionEffects();
  for (  RestrictionEffect effect : restrictionEffects) {
    log.error(uuid + "    " + effect);
    log.error(uuid + "        id=" + effect.getId());
    log.error(uuid + "        applies to attacker=" + effect.applies(attacker,ability,game));
    if (blocker != null) {
      log.error(uuid + "        applies to blocker=" + effect.applies(blocker,ability,game));
    }
  }
  traceForPermanent(game,attacker,uuid,restrictionEffects);
  if (blocker != null) {
    traceForPermanent(game,blocker,uuid,restrictionEffects);
  }
  log.error(uuid);
}
