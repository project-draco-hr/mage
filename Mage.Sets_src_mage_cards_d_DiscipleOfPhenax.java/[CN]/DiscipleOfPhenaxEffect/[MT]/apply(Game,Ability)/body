{
  int devotion=new DevotionCount(ColoredManaSymbol.B).calculate(game,source,this);
  Player targetPlayer=game.getPlayer(targetPointer.getFirst(game,source));
  if (devotion > 0 && targetPlayer != null) {
    Cards revealedCards=new CardsImpl();
    int amount=Math.min(targetPlayer.getHand().size(),devotion);
    if (targetPlayer.getHand().size() > amount) {
      FilterCard filter=new FilterCard("card in target player's hand");
      TargetCardInHand chosenCards=new TargetCardInHand(amount,amount,filter);
      chosenCards.setNotTarget(true);
      if (chosenCards.canChoose(targetPlayer.getId(),game) && targetPlayer.choose(Outcome.Discard,targetPlayer.getHand(),chosenCards,game)) {
        if (!chosenCards.getTargets().isEmpty()) {
          List<UUID> targets=chosenCards.getTargets();
          for (          UUID targetid : targets) {
            Card card=game.getCard(targetid);
            if (card != null) {
              revealedCards.add(card);
            }
          }
        }
      }
    }
 else {
      revealedCards.addAll(targetPlayer.getHand());
    }
    if (!revealedCards.isEmpty()) {
      targetPlayer.revealCards("Disciple of Phenax",revealedCards,game);
      Player you=game.getPlayer(source.getControllerId());
      if (you != null) {
        TargetCard yourChoice=new TargetCard(Zone.HAND,new FilterCard());
        yourChoice.setNotTarget(true);
        if (you.choose(Outcome.Benefit,revealedCards,yourChoice,game)) {
          Card card=targetPlayer.getHand().get(yourChoice.getFirstTarget(),game);
          if (card != null) {
            return targetPlayer.discard(card,source,game);
          }
        }
      }
 else {
        return false;
      }
    }
    return true;
  }
  return false;
}
