{
  draft.addTableEventListener(new Listener<TableEvent>(){
    @Override public void event(    TableEvent event){
      try {
switch (event.getEventType()) {
case UPDATE:
          updateDraft();
        break;
case END:
      endDraft();
    break;
}
}
 catch (MageException ex) {
logger.fatal("Table event listener error",ex);
}
}
}
);
draft.addPlayerQueryEventListener(new Listener<PlayerQueryEvent>(){
@Override public void event(PlayerQueryEvent event){
try {
switch (event.getQueryType()) {
case PICK_CARD:
  pickCard(event.getPlayerId(),event.getMax());
break;
}
}
 catch (MageException ex) {
logger.fatal("Table event listener error",ex);
}
}
}
);
for (DraftPlayer player : draft.getPlayers()) {
if (!player.getPlayer().isHuman()) {
player.setJoined();
logger.info("player " + player.getPlayer().getId() + " has joined draft "+ draft.getId());
}
}
checkStart();
}
