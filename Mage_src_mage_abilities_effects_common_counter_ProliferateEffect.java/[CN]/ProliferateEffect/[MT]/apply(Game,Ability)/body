{
  Player controller=game.getPlayer(source.getControllerId());
  Target target=new TargetPermanentOrPlayerWithCounter(0,Integer.MAX_VALUE,true);
  if (target.canChoose(controller.getId(),game)) {
    boolean abilityApplied=false;
    Map<String,Serializable> options=new HashMap<String,Serializable>();
    options.put("UI.right.btn.text","Done");
    while (target.canChoose(controller.getId(),game)) {
      if (!controller.choose(Outcome.Benefit,target,game,options)) {
        break;
      }
    }
    for (int idx=0; idx < target.getTargets().size(); idx++) {
      UUID chosen=(UUID)target.getTargets().get(idx);
      Permanent permanent=game.getPermanent(chosen);
      if (permanent != null) {
        if (permanent.getCounters().size() > 0) {
          if (permanent.getCounters().size() == 1) {
            for (            Counter counter : permanent.getCounters().values()) {
              permanent.getCounters().addCounter(counter.getName(),1);
            }
          }
 else {
            Choice choice=new ChoiceImpl(true);
            Set<String> choices=new HashSet<String>();
            for (            Counter counter : permanent.getCounters().values()) {
              choices.add(counter.getName());
            }
            choice.setChoices(choices);
            choice.setMessage("Choose a counter to proliferate (" + permanent.getName() + ")");
            controller.choose(Outcome.Benefit,choice,game);
            for (            Counter counter : permanent.getCounters().values()) {
              if (counter.getName().equals(choice.getChoice())) {
                permanent.getCounters().addCounter(counter.getName(),1);
                break;
              }
            }
          }
        }
      }
 else {
        Player player=game.getPlayer(chosen);
        if (player != null) {
          if (player.getCounters().size() > 0) {
            if (player.getCounters().size() == 1) {
              for (              Counter counter : player.getCounters().values()) {
                player.getCounters().addCounter(counter.getName(),1);
              }
            }
 else {
              Choice choice=new ChoiceImpl(true);
              Set<String> choices=new HashSet<String>();
              for (              Counter counter : player.getCounters().values()) {
                choices.add(counter.getName());
              }
              choice.setChoices(choices);
              choice.setMessage("Choose a counter to proliferate (" + player.getName() + ")");
              controller.choose(Outcome.Benefit,choice,game);
              for (              Counter counter : player.getCounters().values()) {
                if (counter.getName().equals(choice.getChoice())) {
                  player.getCounters().addCounter(counter.getName(),1);
                  break;
                }
              }
            }
          }
        }
      }
    }
    return abilityApplied;
  }
  return false;
}
