{
  long startTime=System.nanoTime();
  long endTime=startTime + (thinkTime * 1000000000l);
  MCTSNode current;
  if (root.getNumChildren() == 1)   return;
  logger.info("applyMCTS - Thinking for " + (endTime - startTime) / 1000000000.0 + "s");
  while (true) {
    long currentTime=System.nanoTime();
    logger.info("Remaining time: " + (endTime - currentTime) / 1000000000.0 + "s");
    if (currentTime > endTime)     break;
    current=root;
    while (!current.isLeaf()) {
      current=current.select();
    }
    int result;
    if (!current.isTerminal()) {
      current.expand();
      if (current == root && current.getNumChildren() == 1)       return;
      current=current.select();
      result=current.simulate(this.playerId);
    }
 else {
      result=current.isWinner(this.playerId) ? 1 : 0;
    }
    current.backpropagate(result);
  }
  logger.info("Created " + root.getNodeCount() + " nodes");
  return;
}
