{
  this.player=player;
  updateAvatar();
  int playerLife=player.getLife();
  if (playerLife > 99) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(9f);
    lifeLabel.setFont(font);
    changedFontLife=true;
  }
 else   if (changedFontLife) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(12f);
    lifeLabel.setFont(font);
    changedFontLife=false;
  }
  lifeLabel.setText(Integer.toString(playerLife));
  poisonLabel.setText(Integer.toString(player.getPoison()));
  handLabel.setText(Integer.toString(player.getHandCount()));
  int libraryCards=player.getLibraryCount();
  if (libraryCards > 99) {
    Font font=libraryLabel.getFont();
    font=font.deriveFont(9f);
    libraryLabel.setFont(font);
    changedFontLibrary=true;
  }
 else   if (changedFontLibrary) {
    Font font=libraryLabel.getFont();
    font=font.deriveFont(12f);
    libraryLabel.setFont(font);
    changedFontLibrary=false;
  }
  libraryLabel.setText(Integer.toString(libraryCards));
  int graveCards=player.getGraveyard().size();
  if (graveCards > 99) {
    if (!changedFontGrave) {
      Font font=graveLabel.getFont();
      font=font.deriveFont(9f);
      graveLabel.setFont(font);
      changedFontGrave=true;
    }
  }
 else   if (changedFontGrave) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(12f);
    graveLabel.setFont(font);
    changedFontGrave=false;
  }
  graveLabel.setText(Integer.toString(graveCards));
  int exileCards=player.getExile().size();
  if (exileCards > 99) {
    if (!changedFontExile) {
      Font font=exileLabel.getFont();
      font=font.deriveFont(9f);
      exileLabel.setFont(font);
      changedFontExile=true;
    }
  }
 else   if (changedFontExile) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(12f);
    exileLabel.setFont(font);
    changedFontExile=false;
  }
  exileLabel.setText(Integer.toString(exileCards));
  if (!MageFrame.isLite()) {
    int id=player.getUserData().getAvatarId();
    if (!(id >= 1000) && (id <= 0 || (id <= MIN_AVATAR_ID && id > MAX_AVATAR_ID))) {
      id=DEFAULT_AVATAR_ID;
    }
    if (id != avatarId) {
      avatarId=id;
      String path="/avatars/" + String.valueOf(avatarId) + ".jpg";
      if (avatarId == 64) {
        path="/avatars/i64.jpg";
      }
 else       if (avatarId >= 1000) {
        avatarId=avatarId - 1000;
        path="/avatars/special/" + String.valueOf(avatarId) + ".gif";
      }
      Image image=ImageHelper.getImageFromResources(path);
      Rectangle r=new Rectangle(80,80);
      BufferedImage resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
      this.avatar.update(this.player.getName(),resized,resized,resized,resized,r);
    }
  }
  if (this.timer != null) {
    if (player.getPriorityTimeLeft() != Integer.MAX_VALUE) {
      String priorityTimeValue=getPriorityTimeLeftString(player);
      this.timer.setCount(player.getPriorityTimeLeft());
      this.avatar.setTopText(priorityTimeValue);
      this.timerLabel.setText(priorityTimeValue);
    }
    if (player.isTimerActive()) {
      this.timer.resume();
    }
 else {
      this.timer.pause();
    }
  }
  if (player.isActive()) {
    this.avatar.setBorder(greenBorder);
    this.btnPlayer.setBorder(greenBorder);
  }
 else   if (player.hasLeft()) {
    this.avatar.setBorder(redBorder);
    this.btnPlayer.setBorder(redBorder);
  }
 else {
    this.avatar.setBorder(emptyBorder);
    this.btnPlayer.setBorder(emptyBorder);
  }
  update(player.getManaPool());
}
