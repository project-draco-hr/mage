{
  this.player=player;
  int playerLife=player.getLife();
  if (playerLife > 99) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(9f);
    lifeLabel.setFont(font);
    changedFontLife=true;
  }
 else   if (changedFontLife) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(12f);
    lifeLabel.setFont(font);
    changedFontLife=false;
  }
  lifeLabel.setText(Integer.toString(playerLife));
  poisonLabel.setText(Integer.toString(player.getPoison()));
  handLabel.setText(Integer.toString(player.getHandCount()));
  int libraryCards=player.getLibraryCount();
  if (libraryCards > 99) {
    Font font=libraryLabel.getFont();
    font=font.deriveFont(9f);
    libraryLabel.setFont(font);
    changedFontLibrary=true;
  }
 else   if (changedFontLibrary) {
    Font font=libraryLabel.getFont();
    font=font.deriveFont(12f);
    libraryLabel.setFont(font);
    changedFontLibrary=false;
  }
  libraryLabel.setText(Integer.toString(libraryCards));
  int graveCards=player.getGraveyard().size();
  if (graveCards > 99) {
    Font font=graveLabel.getFont();
    font=font.deriveFont(9f);
    graveLabel.setFont(font);
    changedFontGrave=true;
  }
 else   if (changedFontGrave) {
    Font font=lifeLabel.getFont();
    font=font.deriveFont(12f);
    graveLabel.setFont(font);
    changedFontGrave=false;
  }
  graveLabel.setText(Integer.toString(graveCards));
  if (!MageFrame.isLite()) {
    int id=player.getUserData().getAvatarId();
    if (id > 0 && id != avatarId) {
      avatarId=id;
      String path="/avatars/" + String.valueOf(avatarId) + ".jpg";
      if (avatarId == 64) {
        path="/avatars/i64.jpg";
      }
 else       if (avatarId >= 1000) {
        avatarId=avatarId - 1000;
        path="/avatars/special/" + String.valueOf(avatarId) + ".gif";
      }
      Image image=ImageHelper.getImageFromResources(path);
      Rectangle r=new Rectangle(80,80);
      BufferedImage resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
      this.avatar.update("player",resized,resized,resized,resized,r);
    }
  }
  this.avatar.setText(player.getName());
  this.btnPlayer.setText(player.getName());
  if (player.isActive()) {
    this.avatar.setBorder(greenBorder);
    this.btnPlayer.setBorder(greenBorder);
  }
 else   if (player.hasLeft()) {
    this.avatar.setBorder(redBorder);
    this.btnPlayer.setBorder(redBorder);
  }
 else {
    this.avatar.setBorder(emptyBorder);
    this.btnPlayer.setBorder(emptyBorder);
  }
synchronized (this) {
    if (player.getTopCard() != null) {
      if (topCard == null || !topCard.getId().equals(player.getTopCard().getId())) {
        if (topCard == null) {
          topCardPanel.setVisible(true);
        }
        topCard=player.getTopCard();
        topCardPanel.update(topCard);
        topCardPanel.updateImage();
        ActionCallback callback=Plugins.getInstance().getActionCallback();
        ((MageActionCallback)callback).refreshSession();
        topCardPanel.updateCallback(callback,gameId);
      }
    }
 else     if (topCard != null) {
      topCard=null;
      topCardPanel.setVisible(false);
    }
  }
  update(player.getManaPool());
}
