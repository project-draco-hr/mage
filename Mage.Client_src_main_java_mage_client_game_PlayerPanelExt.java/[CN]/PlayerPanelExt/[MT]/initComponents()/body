{
  panelBackground=new MageRoundPane();
  panelBackground.setPreferredSize(new Dimension(PANEL_WIDTH - 2,PANEL_HEIGHT));
  Rectangle r=new Rectangle(80,80);
  avatarFlag=new JLabel();
  timerLabel=new JLabel();
  lifeLabel=new JLabel();
  handLabel=new JLabel();
  poisonLabel=new JLabel();
  energyLabel=new JLabel();
  experienceLabel=new JLabel();
  graveLabel=new JLabel();
  libraryLabel=new JLabel();
  setOpaque(false);
  panelBackground.setXOffset(3);
  panelBackground.setYOffset(3);
  panelBackground.setVisible(true);
  Image image=ImageHelper.getImageFromResources(DEFAULT_AVATAR_PATH);
  BufferedImage resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
  avatar=new HoverButton("",resized,resized,resized,r);
  String showPlayerNamePermanently=MageFrame.getPreferences().get(PreferencesDialog.KEY_SHOW_PLAYER_NAMES_PERMANENTLY,"true");
  if (showPlayerNamePermanently.equals("true")) {
    avatar.setTextAlwaysVisible(true);
  }
  avatar.setTextOffsetButtonY(10);
  avatar.setObserver(new Command(){
    @Override public void execute(){
      SessionHandler.sendPlayerUUID(gameId,playerId);
    }
  }
);
  timerLabel.setToolTipText("Time left");
  timerLabel.setSize(80,12);
  timerLabel.setHorizontalAlignment(SwingConstants.CENTER);
  r=new Rectangle(18,18);
  lifeLabel.setToolTipText("Life");
  Image imageLife=ImageHelper.getImageFromResources("/info/life.png");
  BufferedImage resizedLife=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageLife,BufferedImage.TYPE_INT_ARGB),r);
  life=new ImagePanel(resizedLife,ImagePanel.ACTUAL);
  life.setToolTipText("Life");
  life.setOpaque(false);
  r=new Rectangle(18,18);
  handLabel.setToolTipText("Hand");
  Image imageHand=ImageHelper.getImageFromResources("/info/hand.png");
  BufferedImage resizedHand=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageHand,BufferedImage.TYPE_INT_ARGB),r);
  hand=new ImagePanel(resizedHand,ImagePanel.ACTUAL);
  hand.setToolTipText("Hand");
  hand.setOpaque(false);
  setTextForLabel(poisonLabel,0,false);
  r=new Rectangle(18,18);
  poisonLabel.setToolTipText("Poison");
  Image imagePoison=ImageHelper.getImageFromResources("/info/poison.png");
  BufferedImage resizedPoison=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imagePoison,BufferedImage.TYPE_INT_ARGB),r);
  poison=new ImagePanel(resizedPoison,ImagePanel.ACTUAL);
  poison.setToolTipText("Poison");
  poison.setOpaque(false);
  r=new Rectangle(19,19);
  libraryLabel.setToolTipText("Library");
  Image imageLibrary=ImageHelper.getImageFromResources("/info/library.png");
  BufferedImage resizedLibrary=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageLibrary,BufferedImage.TYPE_INT_ARGB),r);
  library=new HoverButton(null,resizedLibrary,resizedLibrary,resizedLibrary,r);
  library.setToolTipText("Library");
  library.setOpaque(false);
  library.setObserver(new Command(){
    @Override public void execute(){
      btnLibraryActionPerformed(null);
    }
  }
);
  r=new Rectangle(21,21);
  graveLabel.setToolTipText("Card Types: 0");
  Image imageGrave=ImageHelper.getImageFromResources("/info/grave.png");
  BufferedImage resizedGrave=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageGrave,BufferedImage.TYPE_INT_ARGB),r);
  grave=new HoverButton(null,resizedGrave,resizedGrave,resizedGrave,r);
  grave.setToolTipText("Graveyard");
  grave.setOpaque(false);
  grave.setObserver(new Command(){
    @Override public void execute(){
      btnGraveActionPerformed(null);
    }
  }
);
  exileLabel=new JLabel();
  exileLabel.setToolTipText("Exile");
  image=ImageHelper.getImageFromResources("/info/exile.png");
  r=new Rectangle(21,21);
  resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
  exileZone=new HoverButton(null,resized,resized,resized,r);
  exileZone.setToolTipText("Exile");
  exileZone.setOpaque(false);
  exileZone.setObserver(new Command(){
    @Override public void execute(){
      btnExileZoneActionPerformed(null);
    }
  }
);
  exileZone.setBounds(25,0,21,21);
  r=new Rectangle(25,21);
  image=ImageHelper.getImageFromResources("/info/cheat.png");
  resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
  cheat=new JButton();
  cheat.setIcon(new ImageIcon(resized));
  cheat.setToolTipText("Cheat button");
  cheat.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      btnCheatActionPerformed(e);
    }
  }
);
  zonesPanel=new JPanel();
  zonesPanel.setPreferredSize(new Dimension(100,60));
  zonesPanel.setSize(100,60);
  zonesPanel.setLayout(null);
  zonesPanel.setOpaque(false);
  image=ImageHelper.getImageFromResources("/info/command_zone.png");
  r=new Rectangle(21,21);
  resized=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(image,BufferedImage.TYPE_INT_ARGB),r);
  commandZone=new HoverButton(null,resized,resized,resized,r);
  commandZone.setToolTipText("Command Zone (Commander and Emblems)");
  commandZone.setOpaque(false);
  commandZone.setObserver(new Command(){
    @Override public void execute(){
      btnCommandZoneActionPerformed(null);
    }
  }
);
  commandZone.setBounds(5,0,21,21);
  zonesPanel.add(commandZone);
  cheat.setBounds(28,0,25,21);
  zonesPanel.add(cheat);
  energyExperiencePanel=new JPanel();
  energyExperiencePanel.setPreferredSize(new Dimension(100,20));
  energyExperiencePanel.setSize(100,20);
  energyExperiencePanel.setLayout(null);
  energyExperiencePanel.setOpaque(false);
  setTextForLabel(energyLabel,0,false);
  r=new Rectangle(18,18);
  energyLabel.setToolTipText("Energy");
  Image imageEnergy=ImageHelper.getImageFromResources("/info/energy.png");
  BufferedImage resizedEnergy=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageEnergy,BufferedImage.TYPE_INT_ARGB),r);
  energy=new ImagePanel(resizedEnergy,ImagePanel.ACTUAL);
  energy.setToolTipText("Energy");
  energy.setOpaque(false);
  setTextForLabel(experienceLabel,0,false);
  r=new Rectangle(18,18);
  experienceLabel.setToolTipText("Experience");
  Image imageExperience=ImageHelper.getImageFromResources("/info/experience.png");
  BufferedImage resizedExperience=ImageHelper.getResizedImage(BufferedImageBuilder.bufferImage(imageExperience,BufferedImage.TYPE_INT_ARGB),r);
  experience=new ImagePanel(resizedExperience,ImagePanel.ACTUAL);
  experience.setToolTipText("Experience");
  experience.setOpaque(false);
  btnPlayer=new JButton();
  btnPlayer.setText("Player");
  btnPlayer.setVisible(false);
  btnPlayer.setToolTipText("Player");
  btnPlayer.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      SessionHandler.sendPlayerUUID(gameId,playerId);
    }
  }
);
  JLabel manaCountLabelW=new JLabel();
  manaCountLabelW.setToolTipText("White mana");
  setTextForLabel(manaCountLabelW,0,false);
  manaLabels.put("W",manaCountLabelW);
  r=new Rectangle(12,12);
  BufferedImage imageManaW=ManaSymbols.getSizedManaSymbol("W");
  HoverButton btnWhiteMana=new HoverButton(null,imageManaW,imageManaW,imageManaW,r);
  btnWhiteMana.setToolTipText("White mana");
  btnWhiteMana.setOpaque(false);
  btnWhiteMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.WHITE);
    }
  }
);
  JLabel manaCountLabelU=new JLabel();
  manaCountLabelU.setToolTipText("Blue mana");
  setTextForLabel(manaCountLabelU,0,false);
  manaLabels.put("U",manaCountLabelU);
  r=new Rectangle(12,12);
  BufferedImage imageManaU=ManaSymbols.getSizedManaSymbol("U");
  HoverButton btnBlueMana=new HoverButton(null,imageManaU,imageManaU,imageManaU,r);
  btnBlueMana.setToolTipText("Blue mana");
  btnBlueMana.setOpaque(false);
  btnBlueMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.BLUE);
    }
  }
);
  JLabel manaCountLabelB=new JLabel();
  manaCountLabelB.setToolTipText("Black mana");
  setTextForLabel(manaCountLabelB,0,false);
  manaLabels.put("B",manaCountLabelB);
  r=new Rectangle(12,12);
  BufferedImage imageManaB=ManaSymbols.getSizedManaSymbol("B");
  HoverButton btnBlackMana=new HoverButton(null,imageManaB,imageManaB,imageManaB,r);
  btnBlackMana.setToolTipText("Black mana");
  btnBlackMana.setOpaque(false);
  btnBlackMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.BLACK);
    }
  }
);
  JLabel manaCountLabelR=new JLabel();
  manaCountLabelR.setToolTipText("Red mana");
  setTextForLabel(manaCountLabelR,0,false);
  manaLabels.put("R",manaCountLabelR);
  r=new Rectangle(12,12);
  BufferedImage imageManaR=ManaSymbols.getSizedManaSymbol("R");
  HoverButton btnRedMana=new HoverButton(null,imageManaR,imageManaR,imageManaR,r);
  btnRedMana.setToolTipText("Red mana");
  btnRedMana.setOpaque(false);
  btnRedMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.RED);
    }
  }
);
  JLabel manaCountLabelG=new JLabel();
  manaCountLabelG.setToolTipText("Green mana");
  setTextForLabel(manaCountLabelG,0,false);
  manaLabels.put("G",manaCountLabelG);
  r=new Rectangle(12,12);
  BufferedImage imageManaG=ManaSymbols.getSizedManaSymbol("G");
  HoverButton btnGreenMana=new HoverButton(null,imageManaG,imageManaG,imageManaG,r);
  btnGreenMana.setToolTipText("Green mana");
  btnGreenMana.setOpaque(false);
  btnGreenMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.GREEN);
    }
  }
);
  JLabel manaCountLabelX=new JLabel();
  manaCountLabelX.setToolTipText("Colorless mana");
  setTextForLabel(manaCountLabelX,0,false);
  manaLabels.put("X",manaCountLabelX);
  r=new Rectangle(12,12);
  BufferedImage imageManaX=ManaSymbols.getSizedManaSymbol("C");
  HoverButton btnColorlessMana=new HoverButton(null,imageManaX,imageManaX,imageManaX,r);
  btnColorlessMana.setToolTipText("Colorless mana");
  btnColorlessMana.setOpaque(false);
  btnColorlessMana.setObserver(new Command(){
    @Override public void execute(){
      btnManaActionPerformed(ManaType.COLORLESS);
    }
  }
);
  GroupLayout gl_panelBackground=new GroupLayout(panelBackground);
  gl_panelBackground.setHorizontalGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(9).addComponent(life,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE).addGap(3).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(18).addComponent(hand,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addComponent(lifeLabel,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGap(4).addComponent(handLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(9).addComponent(poison,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE).addGap(3).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(18).addComponent(library,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addComponent(poisonLabel,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGap(4).addComponent(libraryLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(9).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addComponent(energy,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(4).addComponent(btnWhiteMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(2).addComponent(btnBlueMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(2).addComponent(btnBlackMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addComponent(grave,GroupLayout.PREFERRED_SIZE,21,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(18).addComponent(experience,GroupLayout.PREFERRED_SIZE,19,GroupLayout.PREFERRED_SIZE)).addComponent(energyLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE).addGroup(gl_panelBackground.createSequentialGroup().addGap(20).addComponent(btnRedMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(manaCountLabelW,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE))).addGap(3).addComponent(manaCountLabelR,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addComponent(manaCountLabelB,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE).addGroup(gl_panelBackground.createSequentialGroup().addGap(19).addComponent(btnColorlessMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE))).addGap(5).addComponent(manaCountLabelX,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(20).addComponent(btnGreenMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(40).addComponent(manaCountLabelG,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(40).addComponent(experienceLabel,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(18).addComponent(exileZone,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(5).addComponent(graveLabel,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(40).addComponent(exileLabel,GroupLayout.PREFERRED_SIZE,25,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(manaCountLabelU,GroupLayout.PREFERRED_SIZE,MANA_LABEL_SIZE_HORIZONTAL,GroupLayout.PREFERRED_SIZE)))).addGroup(gl_panelBackground.createSequentialGroup().addGap(6).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addComponent(btnPlayer,Alignment.TRAILING,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(timerLabel,Alignment.TRAILING,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(avatar,Alignment.TRAILING,GroupLayout.DEFAULT_SIZE,80,Short.MAX_VALUE)).addGap(8)).addGroup(gl_panelBackground.createSequentialGroup().addGap(6).addComponent(zonesPanel,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE).addGap(14)));
  gl_panelBackground.setVerticalGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(6).addComponent(avatar,GroupLayout.PREFERRED_SIZE,80,GroupLayout.PREFERRED_SIZE).addPreferredGap(ComponentPlacement.RELATED).addComponent(btnPlayer).addComponent(timerLabel).addGap(2).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(life,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(hand,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addComponent(lifeLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE).addComponent(handLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(poison,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(library,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE)).addComponent(poisonLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE).addComponent(libraryLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE)).addGap(1).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(2).addComponent(energy,GroupLayout.PREFERRED_SIZE,18,GroupLayout.PREFERRED_SIZE).addGap(2).addComponent(btnWhiteMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE).addGap(2).addComponent(btnBlueMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE).addGap(2).addComponent(btnBlackMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE).addGap(3).addComponent(grave,GroupLayout.PREFERRED_SIZE,21,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addGroup(gl_panelBackground.createSequentialGroup().addGap(1).addComponent(experience,GroupLayout.PREFERRED_SIZE,19,GroupLayout.PREFERRED_SIZE)).addComponent(energyLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE)).addGap(2).addComponent(btnRedMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(14).addComponent(manaCountLabelW,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(14).addComponent(manaCountLabelR,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE))).addGap(4).addGroup(gl_panelBackground.createParallelGroup(Alignment.LEADING).addComponent(manaCountLabelB,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE).addGroup(gl_panelBackground.createSequentialGroup().addGap(8).addComponent(btnColorlessMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addComponent(manaCountLabelX,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE))).addGroup(gl_panelBackground.createSequentialGroup().addGap(39).addComponent(btnGreenMana,GroupLayout.PREFERRED_SIZE,15,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(31).addComponent(manaCountLabelG,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE)).addComponent(experienceLabel,GroupLayout.PREFERRED_SIZE,20,GroupLayout.PREFERRED_SIZE).addGroup(gl_panelBackground.createSequentialGroup().addGap(76).addComponent(exileZone,GroupLayout.PREFERRED_SIZE,21,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(76).addComponent(graveLabel,GroupLayout.PREFERRED_SIZE,21,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(76).addComponent(exileLabel,GroupLayout.PREFERRED_SIZE,21,GroupLayout.PREFERRED_SIZE)).addGroup(gl_panelBackground.createSequentialGroup().addGap(31).addComponent(manaCountLabelU,GroupLayout.PREFERRED_SIZE,30,GroupLayout.PREFERRED_SIZE))).addPreferredGap(ComponentPlacement.RELATED).addComponent(zonesPanel,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE)));
  panelBackground.setLayout(gl_panelBackground);
  GroupLayout groupLayout=new GroupLayout(this);
  groupLayout.setHorizontalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(groupLayout.createSequentialGroup().addComponent(panelBackground,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE)));
  groupLayout.setVerticalGroup(groupLayout.createParallelGroup(Alignment.LEADING).addGroup(groupLayout.createSequentialGroup().addComponent(panelBackground,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE,GroupLayout.PREFERRED_SIZE)));
  setLayout(groupLayout);
}
