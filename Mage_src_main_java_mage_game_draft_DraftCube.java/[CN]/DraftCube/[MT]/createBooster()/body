{
  List<Card> booster=new ArrayList<>();
  if (leftCubeCards.isEmpty()) {
    leftCubeCards.addAll(cubeCards);
  }
  for (int i=0; i < boosterSize; i++) {
    boolean done=false;
    int notValid=0;
    while (!done) {
      int index=RandomUtil.nextInt(leftCubeCards.size());
      CardIdentity cardId=leftCubeCards.get(index);
      leftCubeCards.remove(index);
      if (!cardId.getName().isEmpty()) {
        CardInfo cardInfo=null;
        if (!cardId.getExtension().isEmpty()) {
          CardCriteria criteria=new CardCriteria().name(cardId.getName()).setCodes(cardId.extension);
          List<CardInfo> cardList=CardRepository.instance.findCards(criteria);
          if (cardList != null && cardList.size() > 0) {
            cardInfo=cardList.get(0);
          }
        }
 else {
          cardInfo=CardRepository.instance.findPreferedCoreExpansionCard(cardId.getName(),false);
        }
        if (cardInfo != null) {
          booster.add(cardInfo.getCard());
          done=true;
        }
 else {
          logger.warn(new StringBuilder(this.getName()).append(" - Card not found: ").append(cardId.getName()).append(":").append(cardId.extension));
          notValid++;
        }
      }
 else {
        logger.error(new StringBuilder(this.getName()).append(" - Empty card name: ").append(cardId.getName()).append(":").append(cardId.extension));
        notValid++;
      }
      if (leftCubeCards.isEmpty()) {
        leftCubeCards.addAll(cubeCards);
      }
      if (notValid > cubeCards.size()) {
        logger.error(new StringBuilder(this.getName()).append(" - Booster could not be created, no valid cards found "));
        done=true;
      }
    }
  }
  return booster;
}
