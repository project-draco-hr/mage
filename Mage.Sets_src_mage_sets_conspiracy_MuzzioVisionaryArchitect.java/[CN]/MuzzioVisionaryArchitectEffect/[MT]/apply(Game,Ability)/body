{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent sourcePermanent=game.getPermanentOrLKIBattlefield(source.getSourceId());
  if (controller == null || sourcePermanent == null) {
    return false;
  }
  int highCMC=0;
  List<Permanent> controlledArtifacts=game.getBattlefield().getAllActivePermanents(new FilterArtifactPermanent(),controller.getId(),game);
  for (  Permanent permanent : controlledArtifacts) {
    if (permanent.getSpellAbility() != null) {
      int cmc=permanent.getSpellAbility().getManaCosts().convertedManaCost();
      if (cmc > highCMC) {
        highCMC=cmc;
      }
    }
  }
  Cards cards=new CardsImpl();
  for (int i=0; i < highCMC; i++) {
    Card card=controller.getLibrary().removeFromTop(game);
    if (card != null) {
      cards.add(card);
    }
  }
  controller.lookAtCards(sourcePermanent.getIdName(),cards,game);
  if (!cards.isEmpty()) {
    TargetCard target=new TargetCard(Zone.LIBRARY,new FilterArtifactCard("artifact card to put onto the battlefield"));
    if (target.canChoose(source.getSourceId(),controller.getId(),game) && controller.choose(Outcome.Benefit,cards,target,game)) {
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        controller.revealCards(sourcePermanent.getIdName(),new CardsImpl(card),game);
        cards.remove(card);
        controller.moveCards(card,Zone.BATTLEFIELD,source,game);
      }
    }
  }
  controller.putCardsOnBottomOfLibrary(cards,game,source,true);
  return true;
}
