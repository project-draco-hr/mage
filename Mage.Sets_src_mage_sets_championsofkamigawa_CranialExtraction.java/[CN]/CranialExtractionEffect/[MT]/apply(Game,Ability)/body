{
  Player player=game.getPlayer(targetPointer.getFirst(game,source));
  Player controller=game.getPlayer(source.getControllerId());
  if (player != null && controller != null) {
    Choice cardChoice=new ChoiceImpl();
    cardChoice.setChoices(CardRepository.instance.getNonLandNames());
    cardChoice.clearChoice();
    while (!controller.choose(Outcome.Exile,cardChoice,game)) {
      game.debugMessage("player canceled choosing name. retrying.");
    }
    String cardName=cardChoice.getChoice();
    game.informPlayers("CranialExtraction, named card: [" + cardName + "]");
    for (    Card card : player.getGraveyard().getCards(game)) {
      if (card.getName().equals(cardName)) {
        card.moveToExile(null,"",source.getId(),game);
      }
    }
    for (    Card card : player.getHand().getCards(game)) {
      if (card.getName().equals(cardName)) {
        card.moveToExile(null,"",source.getId(),game);
      }
    }
    for (    Card card : player.getLibrary().getCards(game)) {
      if (card.getName().equals(cardName)) {
        card.moveToExile(null,"",source.getId(),game);
      }
    }
    controller.lookAtCards("CranialExtraction Hand",player.getHand(),game);
    controller.lookAtCards("CranialExtraction Library",new CardsImpl(Zone.PICK,player.getLibrary().getCards(game)),game);
    player.shuffleLibrary(game);
  }
  return true;
}
