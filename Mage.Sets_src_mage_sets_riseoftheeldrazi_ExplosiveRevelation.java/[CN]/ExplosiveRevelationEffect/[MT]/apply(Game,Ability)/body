{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null && player.getLibrary().size() > 0) {
    CardsImpl cards=new CardsImpl();
    Library library=player.getLibrary();
    Card card=null;
    do {
      card=library.removeFromTop(game);
      if (card != null) {
        cards.add(card);
      }
    }
 while (library.size() > 0 && card != null && card.getCardType().contains(CardType.LAND));
    if (!cards.isEmpty()) {
      player.revealCards("Explosive Revelation",cards,game);
    }
    int damage=card.getManaCost().convertedManaCost();
    for (    UUID targetId : targetPointer.getTargets(game,source)) {
      Permanent targetedCreature=game.getPermanent(targetId);
      if (targetedCreature != null) {
        targetedCreature.damage(damage,source.getSourceId(),game,true,false);
      }
 else {
        Player targetedPlayer=game.getPlayer(targetId);
        if (targetedPlayer != null) {
          targetedPlayer.damage(damage,source.getSourceId(),game,false,true);
        }
      }
    }
    card.moveToZone(Constants.Zone.HAND,id,game,true);
    cards.remove(card);
    if (cards.size() != 0) {
      TargetCard target=new TargetCard(Constants.Zone.PICK,new FilterCard("card to put on the bottom of your library"));
      target.setRequired(true);
      while (cards.size() > 1) {
        player.choose(Constants.Outcome.Neutral,cards,target,game);
        Card chosenCard=cards.get(target.getFirstTarget(),game);
        if (chosenCard != null) {
          cards.remove(card);
          chosenCard.moveToZone(Constants.Zone.LIBRARY,id,game,false);
        }
        target.clearChosen();
      }
      if (cards.size() == 1) {
        Card chosenCard=cards.get(cards.iterator().next(),game);
        chosenCard.moveToZone(Constants.Zone.LIBRARY,id,game,false);
      }
    }
    return true;
  }
  return false;
}
