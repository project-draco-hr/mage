{
  this.gameCard=newGameCard;
  this.callback=callback;
  this.gameId=gameId;
  this.isPermanent=this.gameCard instanceof PermanentView;
  if (isPermanent) {
    this.hasSickness=((PermanentView)this.gameCard).hasSummoningSickness();
  }
  setBackground(Color.black);
  setOpaque(false);
  addMouseListener(this);
  addMouseMotionListener(this);
  titleText=new GlowText();
  setText(gameCard);
  titleText.setFont(getFont().deriveFont(Font.BOLD,13f));
  titleText.setForeground(Color.white);
  titleText.setGlow(Color.black,TEXT_GLOW_SIZE,TEXT_GLOW_INTENSITY);
  titleText.setWrap(true);
  add(titleText);
  ptText=new GlowText();
  if (CardUtil.isCreature(gameCard)) {
    ptText.setText(gameCard.getPower() + "/" + gameCard.getToughness());
  }
 else   if (CardUtil.isPlaneswalker(gameCard)) {
    ptText.setText(gameCard.getLoyalty());
  }
  ptText.setFont(getFont().deriveFont(Font.BOLD,13f));
  ptText.setForeground(Color.white);
  ptText.setGlow(Color.black,TEXT_GLOW_SIZE,TEXT_GLOW_INTENSITY);
  add(ptText);
  BufferedImage sickness=ImageManagerImpl.getInstance().getSicknessImage();
  overlayPanel=new ImagePanel(sickness,ImagePanel.SCALED);
  overlayPanel.setOpaque(false);
  add(overlayPanel);
  imagePanel=new ScaledImagePanel();
  imagePanel.setBorder(BorderFactory.createLineBorder(Color.white));
  add(imagePanel);
  imagePanel.setScaleLarger(true);
  imagePanel.setScalingType(ScalingType.nearestNeighbor);
  imagePanel.setScalingBlur(true);
  imagePanel.setScalingMultiPassType(MultipassType.none);
  String cardType=getType(newGameCard);
  popupText.setText(getText(cardType,newGameCard));
  if (!loadImage)   return;
  Util.threadPool.submit(new Runnable(){
    public void run(){
      try {
        tappedAngle=isTapped() ? CardPanel.TAPPED_ANGLE : 0;
        flippedAngle=isFlipped() ? CardPanel.FLIPPED_ANGLE : 0;
        BufferedImage srcImage=ImageCache.getThumbnail(gameCard);
        if (srcImage != null) {
          hasImage=true;
          setText(gameCard);
          setImage(srcImage);
          setFoil(foil);
        }
 else {
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
catch (      Error err) {
        err.printStackTrace();
      }
    }
  }
);
}
