{
  String manaCost="";
  for (  String m : card.getManaCost()) {
    manaCost+=m;
  }
  String castingCost=UI.getDisplayManaCost(manaCost);
  castingCost=ManaSymbols.replaceSymbolsWithHTML(castingCost,ManaSymbols.Type.CARD);
  int symbolCount=0;
  int offset=0;
  while ((offset=castingCost.indexOf("<img",offset) + 1) != 0) {
    symbolCount++;
  }
  int fontSize=11;
  String fontFamily="tahoma";
  final StringBuilder buffer=new StringBuilder(512);
  buffer.append("<html><body style='font-family:");
  buffer.append(fontFamily);
  buffer.append(";font-size:");
  buffer.append(fontSize);
  buffer.append("pt;margin:0px 1px 0px 1px'>");
  buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'>");
  buffer.append("<tr><td valign='top'><b>");
  buffer.append(card.getDisplayName());
  if (card.isGameObject()) {
    buffer.append(" [").append(card.getId().toString().substring(0,3)).append("]");
  }
  buffer.append("</b></td><td align='right' valign='top' style='width:");
  buffer.append(symbolCount * 11 + 1);
  buffer.append("px'>");
  if (!card.isSplitCard()) {
    buffer.append(castingCost);
  }
  buffer.append("</td></tr></table>");
  buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'><tr><td style='margin-left: 1px'>");
  if (card.getColor().isWhite()) {
    buffer.append("<img src='").append(getResourcePath("card/color_ind_white.png")).append("' alt='W'>");
  }
  if (card.getColor().isBlue()) {
    buffer.append("<img src='").append(getResourcePath("card/color_ind_blue.png")).append("' alt='U'>");
  }
  if (card.getColor().isBlack()) {
    buffer.append("<img src='").append(getResourcePath("card/color_ind_black.png")).append("' alt='B'>");
  }
  if (card.getColor().isRed()) {
    buffer.append("<img src='").append(getResourcePath("card/color_ind_red.png")).append("' alt='R'>");
  }
  if (card.getColor().isGreen()) {
    buffer.append("<img src='").append(getResourcePath("card/color_ind_green.png")).append("' alt='G'>");
  }
  if (!card.getColor().isColorless()) {
    buffer.append("&nbsp;&nbsp;");
  }
  buffer.append(getTypes(card));
  buffer.append("</td><td align='right'>");
  String rarity;
  if (card.getRarity() == null) {
    rarity=Rarity.COMMON.getCode();
    buffer.append("<b color='black'>");
  }
 else {
switch (card.getRarity()) {
case RARE:
      buffer.append("<b color='#FFBF00'>");
    break;
case UNCOMMON:
  buffer.append("<b color='silver'>");
break;
case COMMON:
buffer.append("<b color='black'>");
break;
case MYTHIC:
buffer.append("<b color='#D5330B'>");
break;
}
rarity=card.getRarity().getCode();
}
if (card.getExpansionSetCode() != null) {
buffer.append(ManaSymbols.replaceSetCodeWithHTML(card.getExpansionSetCode().toUpperCase(),rarity));
}
buffer.append("</td></tr></table>");
String pt="";
if (CardUtil.isCreature(card)) {
pt=card.getPower() + "/" + card.getToughness();
}
 else if (CardUtil.isPlaneswalker(card)) {
pt=card.getLoyalty();
}
buffer.append("<table cellspacing=0 cellpadding=0 border=0 width='100%' valign='bottom'><tr><td><b>");
buffer.append(pt).append("</b></td>");
buffer.append("<td align='right'>");
if (!card.isControlledByOwner()) {
if (card instanceof PermanentView) {
buffer.append("[").append(((PermanentView)card).getNameOwner()).append("] ");
}
 else {
buffer.append("[only controlled] ");
}
}
if (!card.getMageObjectType().equals(MageObjectType.NULL)) {
buffer.append(card.getMageObjectType().toString());
}
buffer.append("</td></tr></table>");
StringBuilder rule=new StringBuilder("<br/>");
if (card.isSplitCard()) {
rule.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'>");
rule.append("<tr><td valign='top'><b>");
rule.append(card.getLeftSplitName());
rule.append("</b></td><td align='right' valign='top' style='width:");
rule.append(card.getLeftSplitCosts().getSymbols().size() * 11 + 1);
rule.append("px'>");
rule.append(card.getLeftSplitCosts().getText());
rule.append("</td></tr></table>");
for (String ruling : card.getLeftSplitRules()) {
if (ruling != null && !ruling.replace(".","").trim().isEmpty()) {
rule.append("<p style='margin: 2px'>").append(ruling).append("</p>");
}
}
rule.append("<table cellspacing=0 cellpadding=0 border=0 width='100%'>");
rule.append("<tr><td valign='top'><b>");
rule.append(card.getRightSplitName());
rule.append("</b></td><td align='right' valign='top' style='width:");
rule.append(card.getRightSplitCosts().getSymbols().size() * 11 + 1);
rule.append("px'>");
rule.append(card.getRightSplitCosts().getText());
rule.append("</td></tr></table>");
for (String ruling : card.getRightSplitRules()) {
if (ruling != null && !ruling.replace(".","").trim().isEmpty()) {
rule.append("<p style='margin: 2px'>").append(ruling).append("</p>");
}
}
}
if (textLines.lines.size() > 0) {
for (String textLine : textLines.lines) {
if (textLine != null && !textLine.replace(".","").trim().isEmpty()) {
rule.append("<p style='margin: 2px'>").append(textLine).append("</p>");
}
}
}
String legal=rule.toString();
if (legal.length() > 0) {
legal=legal.replaceAll("\\{this\\}",card.getName().isEmpty() ? "this" : card.getName());
legal=legal.replaceAll("\\{source\\}",card.getName().isEmpty() ? "this" : card.getName());
buffer.append(ManaSymbols.replaceSymbolsWithHTML(legal,ManaSymbols.Type.CARD));
}
buffer.append("<br></body></html>");
return buffer;
}
