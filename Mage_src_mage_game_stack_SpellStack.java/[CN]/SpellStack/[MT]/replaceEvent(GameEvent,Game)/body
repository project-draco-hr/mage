{
  boolean caught=false;
  Map<ReplacementEffect,Ability> rEffects=new LinkedHashMap<ReplacementEffect,Ability>();
  for (  StackObject stackObject : this) {
    for (    Ability ability : stackObject.getAbilities()) {
      if (ability.getZone() == Zone.STACK) {
        for (        Effect effect : ability.getEffects()) {
          if (effect instanceof ReplacementEffect) {
            if (((ReplacementEffect)effect).applies(event,ability,game))             rEffects.put((ReplacementEffect)effect,ability);
          }
        }
      }
    }
  }
  if (rEffects.size() > 0) {
    List<ReplacementEffect> effects=new ArrayList(rEffects.keySet());
    int index;
    if (rEffects.size() == 1) {
      index=0;
    }
 else {
      Player player=game.getPlayer(event.getPlayerId());
      index=player.chooseEffect(effects,game);
    }
    caught=effects.get(index).replaceEvent(event,rEffects.get(effects.get(index)),game);
  }
  return caught;
}
