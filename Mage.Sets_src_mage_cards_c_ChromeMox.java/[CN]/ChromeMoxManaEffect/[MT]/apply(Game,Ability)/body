{
  Permanent permanent=game.getPermanent(source.getSourceId());
  Player player=game.getPlayer(source.getControllerId());
  if (permanent != null && player != null) {
    List<UUID> imprinted=permanent.getImprinted();
    if (imprinted.size() > 0) {
      Card imprintedCard=game.getCard(imprinted.get(0));
      if (imprintedCard != null) {
        Choice choice=new ChoiceColor(true);
        choice.getChoices().clear();
        choice.setMessage("Pick a mana color");
        ObjectColor color=imprintedCard.getColor(game);
        if (color.isBlack()) {
          choice.getChoices().add("Black");
        }
        if (color.isRed()) {
          choice.getChoices().add("Red");
        }
        if (color.isBlue()) {
          choice.getChoices().add("Blue");
        }
        if (color.isGreen()) {
          choice.getChoices().add("Green");
        }
        if (color.isWhite()) {
          choice.getChoices().add("White");
        }
        if (choice.getChoices().size() > 0) {
          Mana mana=new Mana();
          if (choice.getChoices().size() == 1) {
            choice.setChoice(choice.getChoices().iterator().next());
          }
 else {
            player.choose(outcome,choice,game);
          }
switch (choice.getChoice()) {
case "Black":
            player.getManaPool().addMana(Mana.BlackMana(1),game,source);
          break;
case "Blue":
        player.getManaPool().addMana(Mana.BlueMana(1),game,source);
      break;
case "Red":
    player.getManaPool().addMana(Mana.RedMana(1),game,source);
  break;
case "Green":
player.getManaPool().addMana(Mana.GreenMana(1),game,source);
break;
case "White":
player.getManaPool().addMana(Mana.WhiteMana(1),game,source);
break;
case "Colorless":
player.getManaPool().addMana(Mana.ColorlessMana(1),game,source);
break;
default :
break;
}
checkToFirePossibleEvents(mana,game,source);
player.getManaPool().addMana(mana,game,source);
}
}
}
}
return true;
}
