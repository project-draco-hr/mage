{
  format=audioFormat;
  this.alwaysActive=alwaysActive;
  mixer=AudioSystem.getMixer(null);
  DataLine.Info lineInfo=new DataLine.Info(SourceDataLine.class,audioFormat);
  for (int i=0; i < size; i++) {
    try {
      SourceDataLine line=(SourceDataLine)mixer.getLine(lineInfo);
      freeLines.add(line);
    }
 catch (    LineUnavailableException e) {
      e.printStackTrace();
    }
  }
  new Timer("Line cleanup",true).scheduleAtFixedRate(new TimerTask(){
    @Override public void run(){
synchronized (LinePool.this) {
        for (        SourceDataLine sourceDataLine : freeLines) {
          if (sourceDataLine.isOpen()) {
            sourceDataLine.close();
          }
        }
      }
    }
  }
,LINE_CLEANUP_INTERVAL,LINE_CLEANUP_INTERVAL);
}
