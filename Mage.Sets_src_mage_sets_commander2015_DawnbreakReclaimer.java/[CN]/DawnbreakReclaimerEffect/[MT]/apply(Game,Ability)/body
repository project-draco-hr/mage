{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=source.getSourceObject(game);
  if (controller != null && sourceObject != null) {
    TargetCardInOpponentsGraveyard targetOpponentGraveyard=new TargetCardInOpponentsGraveyard(new FilterCreatureCard("a creature card in an opponent's graveyard"));
    Player opponent=null;
    Card cardOpponentGraveyard=null;
    if (targetOpponentGraveyard.canChoose(source.getSourceId(),source.getControllerId(),game)) {
      controller.choose(Outcome.Detriment,targetOpponentGraveyard,source.getSourceId(),game);
      cardOpponentGraveyard=game.getCard(targetOpponentGraveyard.getFirstTarget());
      if (cardOpponentGraveyard != null) {
        opponent=game.getPlayer(cardOpponentGraveyard.getOwnerId());
        game.informPlayers(sourceObject.getLogName() + ": " + controller.getLogName()+ " has chosen "+ cardOpponentGraveyard.getIdName()+ " of "+ opponent.getLogName());
      }
    }
    if (opponent == null) {
      TargetOpponent targetOpponent=new TargetOpponent(true);
      controller.choose(outcome,targetOpponent,source.getSourceId(),game);
      opponent=game.getPlayer(targetOpponent.getFirstTarget());
      if (opponent != null) {
        game.informPlayers(sourceObject.getLogName() + ": " + controller.getLogName()+ " has chosen "+ opponent.getLogName()+ " to select a creature card from his or her graveyard");
      }
    }
    if (opponent != null) {
      FilterCreatureCard filter=new FilterCreatureCard("a creature card in " + controller.getName() + "'s the graveyard");
      filter.add(new OwnerIdPredicate(controller.getId()));
      TargetCardInGraveyard targetControllerGaveyard=new TargetCardInGraveyard(filter);
      targetControllerGaveyard.setNotTarget(true);
      Card controllerCreatureCard=null;
      if (targetControllerGaveyard.canChoose(source.getSourceId(),opponent.getId(),game) && opponent.choose(outcome,targetControllerGaveyard,source.getSourceId(),game)) {
        controllerCreatureCard=game.getCard(targetControllerGaveyard.getFirstTarget());
        if (controllerCreatureCard != null) {
          game.informPlayers(sourceObject.getLogName() + ": " + opponent.getLogName()+ " has chosen "+ controllerCreatureCard.getIdName()+ " of "+ controller.getLogName());
        }
      }
      Set<Card> cards=new HashSet<>();
      if (cardOpponentGraveyard != null) {
        cards.add(cardOpponentGraveyard);
      }
      if (controllerCreatureCard != null) {
        cards.add(controllerCreatureCard);
      }
      if (!cards.isEmpty()) {
        if (controller.chooseUse(outcome,"Return those cards to the battlefield under their owners' control?","Opponent's creature card: " + (cardOpponentGraveyard == null ? "none" : cardOpponentGraveyard.getLogName()) + ", your creature card: "+ (controllerCreatureCard == null ? "none" : controllerCreatureCard.getLogName()),null,null,source,game)) {
          controller.moveCards(cards,Zone.BATTLEFIELD,source,game,false,false,true,null);
        }
      }
    }
    return true;
  }
  return false;
}
