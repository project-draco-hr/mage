{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=source.getSourceObject(game);
  if (controller != null && sourceObject != null) {
    TargetCardInOpponentsGraveyard targetCreature=new TargetCardInOpponentsGraveyard(new FilterCreatureCard("a creature card in an opponent's graveyard"));
    if (controller.choose(Outcome.Detriment,targetCreature,source.getSourceId(),game)) {
      Card creatureCard=game.getCard(targetCreature.getFirstTarget());
      Player opponent=game.getPlayer(creatureCard.getOwnerId());
      if (opponent != null) {
        game.informPlayers(sourceObject.getLogName() + ": " + controller.getLogName()+ " has chosen "+ creatureCard.getIdName()+ " of "+ opponent.getLogName());
        FilterCreatureCard filter=new FilterCreatureCard("a creature card in " + controller.getName() + "'s the graveyard");
        filter.add(new OwnerIdPredicate(controller.getId()));
        TargetCardInGraveyard targetCard=new TargetCardInGraveyard(filter);
        targetCard.setNotTarget(true);
        if (opponent.choose(outcome,targetCard,source.getSourceId(),game)) {
          Card controllerCreatureCard=game.getCard(targetCard.getFirstTarget());
          if (controllerCreatureCard != null) {
            MessageToClient message=new MessageToClient("Return those cards to the battlefield under their owners' control?","Opponent's creature card: " + creatureCard.getLogName() + " - Your creature: "+ controllerCreatureCard.getLogName());
            if (controller.chooseUse(outcome,message,source,game)) {
              Set<Card> cards=new HashSet<>();
              cards.add(creatureCard);
              cards.add(controllerCreatureCard);
              opponent.moveCards(cards,Zone.BATTLEFIELD,source,game,false,false,true,null);
            }
          }
        }
      }
    }
    return true;
  }
  return false;
}
