{
  for (  TournamentPlayer player : players.values()) {
    player.setResults("");
    player.setPoints(0);
    player.setStateInfo("");
  }
  for (  Round round : rounds) {
    for (    TournamentPairing pair : round.getPairs()) {
      UUID player1Id=pair.getPlayer1().getPlayer().getId();
      UUID player2Id=pair.getPlayer2().getPlayer().getId();
      Match match=pair.getMatch();
      if (match != null && match.isMatchOver()) {
        if (round.getRoundNumber() == rounds.size()) {
          if (players.get(player1Id).getState().equals(TournamentPlayerState.DUELING)) {
            players.get(player1Id).setState(TournamentPlayerState.WAITING);
          }
          if (players.get(player2Id).getState().equals(TournamentPlayerState.DUELING)) {
            players.get(player2Id).setState(TournamentPlayerState.WAITING);
          }
        }
        StringBuilder sb1=new StringBuilder(players.get(player1Id).getResults());
        StringBuilder sb2=new StringBuilder(players.get(player2Id).getResults());
        sb1.append(pair.getPlayer2().getPlayer().getName());
        sb1.append(" (").append(match.getPlayer(player1Id).getWins());
        sb1.append("-").append(match.getPlayer(player2Id).getWins()).append(") ");
        sb2.append(pair.getPlayer1().getPlayer().getName());
        sb2.append(" (").append(match.getPlayer(player2Id).getWins());
        sb2.append("-").append(match.getPlayer(player1Id).getWins()).append(") ");
        players.get(player1Id).setResults(sb1.toString());
        players.get(player2Id).setResults(sb2.toString());
        if (match.getPlayer(player2Id).hasQuit() || match.getPlayer(player1Id).getWins() > match.getPlayer(player2Id).getWins()) {
          int points=players.get(player1Id).getPoints();
          players.get(player1Id).setPoints(points + 3);
        }
 else         if (match.getPlayer(player1Id).hasQuit() || match.getPlayer(player1Id).getWins() < match.getPlayer(player2Id).getWins()) {
          int points=players.get(player2Id).getPoints();
          players.get(player2Id).setPoints(points + 3);
        }
 else {
          int points=players.get(player1Id).getPoints();
          players.get(player1Id).setPoints(points + 1);
          points=players.get(player2Id).getPoints();
          players.get(player2Id).setPoints(points + 1);
        }
      }
    }
    for (    TournamentPlayer tournamentPlayer : round.getPlayerByes()) {
      UUID player1Id=tournamentPlayer.getPlayer().getId();
      StringBuilder sb1=new StringBuilder(players.get(player1Id).getResults());
      sb1.append("(Round Bye) ");
      players.get(player1Id).setResults(sb1.toString());
      int points=players.get(player1Id).getPoints();
      players.get(player1Id).setPoints(points + 3);
    }
  }
}
