{
  Zone fromZone=((ZoneChangeEvent)event).getFromZone();
  Card card=game.getCard(event.getTargetId());
  UUID sourceId=event.getSourceId();
  UUID controllerId=event.getPlayerId();
  if (card.isFaceDown(game)) {
    return false;
  }
  Object object=game.getState().getValue("attachTo:" + card.getId());
  if (object != null && object instanceof PermanentCard) {
    return false;
  }
  UUID targetId=null;
  MageObject sourceObject=game.getObject(sourceId);
  boolean enchantCardInGraveyard=false;
  if (sourceObject instanceof Spell) {
    if (fromZone.equals(Zone.EXILED)) {
      return false;
    }
  }
  if (sourceObject instanceof StackAbility) {
    StackAbility stackAbility=(StackAbility)sourceObject;
    if (!stackAbility.getEffects().isEmpty()) {
      targetId=stackAbility.getEffects().get(0).getTargetPointer().getFirst(game,stackAbility);
    }
  }
  game.applyEffects();
  if (targetId == null) {
    Target target=card.getSpellAbility().getTargets().get(0);
    enchantCardInGraveyard=target instanceof TargetCardInGraveyard;
    if (target != null) {
      target.clearChosen();
    }
    Player player=game.getPlayer(card.getOwnerId());
    Outcome auraOutcome=Outcome.BoostCreature;
    Ability:     for (    Ability ability : card.getAbilities()) {
      if (ability instanceof SpellAbility) {
        for (        Effect effect : ability.getEffects()) {
          if (effect instanceof AttachEffect) {
            auraOutcome=effect.getOutcome();
            break Ability;
          }
        }
      }
    }
    if (target != null && player != null && player.choose(auraOutcome,target,card.getId(),game)) {
      targetId=target.getFirstTarget();
    }
  }
  Card targetCard=null;
  Permanent targetPermanent=null;
  if (enchantCardInGraveyard) {
    targetCard=game.getCard(targetId);
  }
 else {
    targetPermanent=game.getPermanent(targetId);
  }
  Player targetPlayer=game.getPlayer(targetId);
  if (targetCard != null || targetPermanent != null || targetPlayer != null) {
switch (fromZone) {
case EXILED:
      game.getExile().removeCard(card,game);
    break;
case GRAVEYARD:
  game.getPlayer(card.getOwnerId()).removeFromGraveyard(card,game);
break;
case HAND:
game.getPlayer(card.getOwnerId()).removeFromHand(card,game);
break;
case LIBRARY:
game.getPlayer(card.getOwnerId()).removeFromLibrary(card,game);
break;
default :
}
game.rememberLKI(card.getId(),fromZone,card);
PermanentCard permanent=new PermanentCard(card,card.getOwnerId(),game);
game.getBattlefield().addPermanent(permanent);
card.setZone(Zone.BATTLEFIELD,game);
boolean entered=permanent.entersBattlefield(event.getSourceId(),game,fromZone,true);
game.applyEffects();
if (!entered) {
return false;
}
game.fireEvent(new ZoneChangeEvent(permanent,controllerId,fromZone,Zone.BATTLEFIELD));
if (targetCard != null) {
permanent.attachTo(targetCard.getId(),game);
}
if (targetPermanent != null) {
targetPermanent.addAttachment(permanent.getId(),game);
}
if (targetPlayer != null) {
targetPlayer.addAttachment(permanent.getId(),game);
}
}
return true;
}
