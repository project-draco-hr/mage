{
  if (attackers.isEmpty()) {
    return;
  }
  if (blockersCount == 1) {
    List<UUID> toBeRemoved=new ArrayList<UUID>();
    for (    UUID blockerId : getBlockers()) {
      Permanent blocker=game.getPermanent(blockerId);
      if (blocker != null && blocker.getAbilities().containsKey(CantBlockAloneAbility.getInstance().getId())) {
        game.informPlayers(blocker.getName() + " can't block alone. Removing it from combat.");
        toBeRemoved.add(blockerId);
      }
    }
    for (    UUID blockerId : toBeRemoved) {
      game.getCombat().removeBlocker(blockerId,game);
    }
    if (blockers.isEmpty()) {
      this.blocked=false;
    }
  }
  for (  UUID uuid : attackers) {
    Permanent attacker=game.getPermanent(uuid);
    if (attacker != null && this.blocked && attacker.getMinBlockedBy() > 1 && blockers.size() > 0 && blockers.size() < attacker.getMinBlockedBy()) {
      for (      UUID blockerId : blockers) {
        Permanent blocker=game.getPermanent(blockerId);
        if (blocker != null) {
          blocker.setBlocking(blocker.getBlocking() - 1);
        }
      }
      blockers.clear();
      blockerOrder.clear();
      this.blocked=false;
      game.informPlayers(attacker.getName() + " can't be blocked except by " + attacker.getMinBlockedBy()+ " or more creatures. Blockers discarded.");
      return;
    }
  }
}
