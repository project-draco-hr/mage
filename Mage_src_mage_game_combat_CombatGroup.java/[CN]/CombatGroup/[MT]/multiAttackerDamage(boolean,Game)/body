{
  Permanent blocker=game.getPermanent(blockers.get(0));
  if (blocker == null) {
    return;
  }
  Player player=game.getPlayer(blocker.getControllerId());
  int damage=getDamageValueFromPermanent(blocker,game);
  if (canDamage(blocker,first)) {
    Map<UUID,Integer> assigned=new HashMap<UUID,Integer>();
    for (    UUID attackerId : attackerOrder) {
      Permanent attacker=game.getPermanent(attackerId);
      int lethalDamage;
      if (blocker.getAbilities().containsKey(DeathtouchAbility.getInstance().getId())) {
        lethalDamage=1;
      }
 else {
        lethalDamage=attacker.getToughness().getValue() - attacker.getDamage();
      }
      if (lethalDamage >= damage) {
        assigned.put(attackerId,damage);
        break;
      }
      int damageAssigned=player.getAmount(lethalDamage,damage,"Assign damage to " + attacker.getName(),game);
      assigned.put(attackerId,damageAssigned);
      damage-=damageAssigned;
    }
    for (    Map.Entry<UUID,Integer> entry : assigned.entrySet()) {
      Permanent attacker=game.getPermanent(entry.getKey());
      attacker.markDamage(entry.getValue(),blocker.getId(),game,true,true);
    }
  }
}
