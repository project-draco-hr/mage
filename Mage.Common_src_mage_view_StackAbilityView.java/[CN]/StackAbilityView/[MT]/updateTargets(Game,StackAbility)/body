{
  List<String> names=new ArrayList<>();
  for (  UUID modeId : ability.getModes().getSelectedModes()) {
    Mode mode=ability.getModes().get(modeId);
    if (mode.getTargets().size() > 0) {
      setTargets(mode.getTargets());
    }
 else {
      List<UUID> targetList=new ArrayList<>();
      for (      Effect effect : mode.getEffects()) {
        TargetPointer targetPointer=effect.getTargetPointer();
        if (targetPointer instanceof FixedTarget) {
          targetList.add(((FixedTarget)targetPointer).getTarget());
        }
      }
      if (targetList.size() > 0) {
        overrideTargets(targetList);
        for (        UUID uuid : targetList) {
          MageObject mageObject=game.getObject(uuid);
          if (mageObject != null) {
            if ((mageObject instanceof Card) && ((Card)mageObject).isFaceDown(game)) {
              continue;
            }
            names.add(GameLog.getColoredObjectIdNameForTooltip(mageObject));
          }
        }
      }
    }
  }
  if (!names.isEmpty()) {
    getRules().add("<i>Related objects: " + names.toString() + "</i>");
  }
  if (ability.isModal()) {
    Modes modes=ability.getModes();
    for (    UUID modeId : modes.getSelectedModes()) {
      Mode mode=modes.get(modeId);
      this.rules.add("<span color='green'><i>Chosen mode: " + mode.getEffects().getText(mode) + "</i></span>");
    }
  }
}
