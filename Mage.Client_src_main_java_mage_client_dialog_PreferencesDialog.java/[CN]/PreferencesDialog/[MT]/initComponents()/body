{
  tabsPanel=new javax.swing.JTabbedPane();
  tabMain=new javax.swing.JPanel();
  main_card=new javax.swing.JPanel();
  displayBigCardsInHand=new javax.swing.JCheckBox();
  showToolTipsInAnyZone=new javax.swing.JCheckBox();
  showCardName=new javax.swing.JCheckBox();
  main_game=new javax.swing.JPanel();
  nonLandPermanentsInOnePile=new javax.swing.JCheckBox();
  showPlayerNamesPermanently=new javax.swing.JCheckBox();
  showAbilityPickerForced=new javax.swing.JCheckBox();
  main_gamelog=new javax.swing.JPanel();
  cbGameLogAutoSave=new javax.swing.JCheckBox();
  tabPhases=new javax.swing.JPanel();
  jLabelHeadLine=new javax.swing.JLabel();
  jLabelYourTurn=new javax.swing.JLabel();
  jLabelOpponentsTurn=new javax.swing.JLabel();
  jLabelUpkeep=new javax.swing.JLabel();
  checkBoxUpkeepYou=new javax.swing.JCheckBox();
  checkBoxUpkeepOthers=new javax.swing.JCheckBox();
  jLabelDraw=new javax.swing.JLabel();
  checkBoxDrawYou=new javax.swing.JCheckBox();
  checkBoxDrawOthers=new javax.swing.JCheckBox();
  jLabelMain1=new javax.swing.JLabel();
  checkBoxMainYou=new javax.swing.JCheckBox();
  checkBoxMainOthers=new javax.swing.JCheckBox();
  jLabelBeforeCombat=new javax.swing.JLabel();
  checkBoxBeforeCYou=new javax.swing.JCheckBox();
  checkBoxBeforeCOthers=new javax.swing.JCheckBox();
  jLabelEndofCombat=new javax.swing.JLabel();
  checkBoxEndOfCYou=new javax.swing.JCheckBox();
  checkBoxEndOfCOthers=new javax.swing.JCheckBox();
  jLabelMain2=new javax.swing.JLabel();
  checkBoxMain2You=new javax.swing.JCheckBox();
  checkBoxMain2Others=new javax.swing.JCheckBox();
  jLabelEndOfTurn=new javax.swing.JLabel();
  checkBoxEndTurnYou=new javax.swing.JCheckBox();
  checkBoxEndTurnOthers=new javax.swing.JCheckBox();
  phases_stopSettings=new javax.swing.JPanel();
  cbStopAttack=new javax.swing.JCheckBox();
  cbStopBlock=new javax.swing.JCheckBox();
  cbStopOnAllMain=new javax.swing.JCheckBox();
  cbStopOnAllEnd=new javax.swing.JCheckBox();
  tabImages=new javax.swing.JPanel();
  panelCardImages=new javax.swing.JPanel();
  cbUseDefaultImageFolder=new javax.swing.JCheckBox();
  txtImageFolderPath=new javax.swing.JTextField();
  btnBrowseImageLocation=new javax.swing.JButton();
  cbCheckForNewImages=new javax.swing.JCheckBox();
  cbSaveToZipFiles=new javax.swing.JCheckBox();
  cbPreferedImageLanguage=new javax.swing.JComboBox<String>();
  labelPreferedImageLanguage=new javax.swing.JLabel();
  panelBackgroundImages=new javax.swing.JPanel();
  cbUseDefaultBackground=new javax.swing.JCheckBox();
  txtBackgroundImagePath=new javax.swing.JTextField();
  btnBrowseBackgroundImage=new javax.swing.JButton();
  txtBattlefieldImagePath=new javax.swing.JTextField();
  btnBrowseBattlefieldImage=new javax.swing.JButton();
  cbUseDefaultBattleImage=new javax.swing.JCheckBox();
  cbUseRandomBattleImage=new javax.swing.JCheckBox();
  jLabel14=new javax.swing.JLabel();
  jLabel15=new javax.swing.JLabel();
  tabSounds=new javax.swing.JPanel();
  sounds_clips=new javax.swing.JPanel();
  cbEnableGameSounds=new javax.swing.JCheckBox();
  cbEnableDraftSounds=new javax.swing.JCheckBox();
  cbEnableSkipButtonsSounds=new javax.swing.JCheckBox();
  cbEnableOtherSounds=new javax.swing.JCheckBox();
  sounds_backgroundMusic=new javax.swing.JPanel();
  cbEnableBattlefieldBGM=new javax.swing.JCheckBox();
  jLabel16=new javax.swing.JLabel();
  txtBattlefieldIBGMPath=new javax.swing.JTextField();
  btnBattlefieldBGMBrowse=new javax.swing.JButton();
  tabConnection=new javax.swing.JPanel();
  lblProxyType=new javax.swing.JLabel();
  cbProxyType=new javax.swing.JComboBox<ProxyType>();
  pnlProxySettings=new javax.swing.JPanel();
  pnlProxy=new javax.swing.JPanel();
  lblProxyServer=new javax.swing.JLabel();
  txtProxyServer=new javax.swing.JTextField();
  lblProxyPort=new javax.swing.JLabel();
  txtProxyPort=new javax.swing.JTextField();
  lblProxyUserName=new javax.swing.JLabel();
  txtProxyUserName=new javax.swing.JTextField();
  lblProxyPassword=new javax.swing.JLabel();
  txtPasswordField=new javax.swing.JPasswordField();
  rememberPswd=new javax.swing.JCheckBox();
  jLabel11=new javax.swing.JLabel();
  tabAvatars=new javax.swing.JPanel();
  jScrollPane1=new javax.swing.JScrollPane();
  jPanel9=new javax.swing.JPanel();
  jPanel10=new javax.swing.JPanel();
  jPanel13=new javax.swing.JPanel();
  jPanel11=new javax.swing.JPanel();
  jLabel12=new javax.swing.JLabel();
  jPanel12=new javax.swing.JPanel();
  jPanel14=new javax.swing.JPanel();
  jPanel15=new javax.swing.JPanel();
  jLabel13=new javax.swing.JLabel();
  jPanel16=new javax.swing.JPanel();
  jPanel17=new javax.swing.JPanel();
  jPanel18=new javax.swing.JPanel();
  jPanel19=new javax.swing.JPanel();
  jPanel20=new javax.swing.JPanel();
  jPanel21=new javax.swing.JPanel();
  saveButton=new javax.swing.JButton();
  exitButton=new javax.swing.JButton();
  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
  setTitle("Preferences");
  main_card.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Card"));
  main_card.setLayout(new java.awt.BorderLayout());
  displayBigCardsInHand.setText("Use big images (for high resolution screens)");
  displayBigCardsInHand.setToolTipText("Changes the size of the cards shown in hand. Switch this option off if you have a small screen size.");
  displayBigCardsInHand.setActionCommand("");
  displayBigCardsInHand.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
  displayBigCardsInHand.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      displayBigCardsInHandActionPerformed(evt);
    }
  }
);
  main_card.add(displayBigCardsInHand,java.awt.BorderLayout.PAGE_START);
  showToolTipsInAnyZone.setSelected(true);
  showToolTipsInAnyZone.setText("Show card tooltips while hoovering with the mouse pointer over a card");
  showToolTipsInAnyZone.setToolTipText("");
  showToolTipsInAnyZone.setActionCommand("");
  showToolTipsInAnyZone.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  showToolTipsInAnyZone.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showToolTipsInAnyZoneActionPerformed(evt);
    }
  }
);
  main_card.add(showToolTipsInAnyZone,java.awt.BorderLayout.CENTER);
  showCardName.setSelected(true);
  showCardName.setText("Show card name on card panel");
  showCardName.setToolTipText("Write the card's name on the card to make the card name more recognizable.");
  showCardName.setActionCommand("");
  showCardName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
  showCardName.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showCardNameActionPerformed(evt);
    }
  }
);
  main_card.add(showCardName,java.awt.BorderLayout.PAGE_END);
  main_game.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Game"));
  main_game.setLayout(new java.awt.BorderLayout());
  nonLandPermanentsInOnePile.setSelected(true);
  nonLandPermanentsInOnePile.setLabel("Put non-land permanents in one pile");
  nonLandPermanentsInOnePile.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      nonLandPermanentsInOnePileActionPerformed(evt);
    }
  }
);
  main_game.add(nonLandPermanentsInOnePile,java.awt.BorderLayout.PAGE_START);
  nonLandPermanentsInOnePile.getAccessibleContext().setAccessibleName("nonLandPermanentsInOnePile");
  showPlayerNamesPermanently.setSelected(true);
  showPlayerNamesPermanently.setText("Show player names on avatar permanently");
  showPlayerNamesPermanently.setToolTipText("Instead showing the names only if you hoover over the avatar with the mouse, the name is shown all the time.");
  showPlayerNamesPermanently.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
  showPlayerNamesPermanently.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showPlayerNamesPermanentlyActionPerformed(evt);
    }
  }
);
  main_game.add(showPlayerNamesPermanently,java.awt.BorderLayout.LINE_START);
  showAbilityPickerForced.setSelected(true);
  showAbilityPickerForced.setText("Show ability picker for abilities or spells without costs");
  showAbilityPickerForced.setToolTipText("This prevents you from accidently activating abilities without other costs than tapping or casting spells with 0 mana costs.");
  showAbilityPickerForced.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
  showAbilityPickerForced.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      showAbilityPickerForcedActionPerformed(evt);
    }
  }
);
  main_game.add(showAbilityPickerForced,java.awt.BorderLayout.PAGE_END);
  main_gamelog.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Game log"));
  main_gamelog.setLayout(new java.awt.BorderLayout());
  cbGameLogAutoSave.setSelected(true);
  cbGameLogAutoSave.setText("Auto save game logs     (to \"../Mage.Client/gamelogs/\" directory)");
  cbGameLogAutoSave.setToolTipText("The logs of all your games will be saved to the mentioned folder if this option is switched on.");
  cbGameLogAutoSave.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbGameLogAutoSaveActionPerformed(evt);
    }
  }
);
  main_gamelog.add(cbGameLogAutoSave,java.awt.BorderLayout.CENTER);
  javax.swing.GroupLayout tabMainLayout=new javax.swing.GroupLayout(tabMain);
  tabMain.setLayout(tabMainLayout);
  tabMainLayout.setHorizontalGroup(tabMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabMainLayout.createSequentialGroup().addContainerGap().addGroup(tabMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(main_card,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(main_game,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(main_gamelog,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addContainerGap()));
  tabMainLayout.setVerticalGroup(tabMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabMainLayout.createSequentialGroup().addContainerGap().addComponent(main_card,javax.swing.GroupLayout.PREFERRED_SIZE,99,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(main_game,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(main_gamelog,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(132,Short.MAX_VALUE)));
  main_card.getAccessibleContext().setAccessibleName("Game panel");
  tabsPanel.addTab("Main",tabMain);
  jLabelHeadLine.setText("Choose phases your game will stop on:");
  jLabelYourTurn.setText("Your turn");
  jLabelOpponentsTurn.setText("Opponent(s) turn");
  jLabelUpkeep.setText("Upkeep:");
  jLabelDraw.setText("Draw:");
  jLabelMain1.setText("Main:");
  jLabelBeforeCombat.setText("Before combat:");
  jLabelEndofCombat.setText("End of combat:");
  jLabelMain2.setText("Main 2:");
  jLabelEndOfTurn.setText("End of turn:");
  phases_stopSettings.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Stop settings"));
  phases_stopSettings.setLayout(new java.awt.GridLayout(4,1));
  cbStopAttack.setSelected(true);
  cbStopAttack.setText("Stop on declare attackers step if you skip steps (F4/F5/F7) and attackers are available");
  cbStopAttack.setToolTipText("If you use F4, F5 or F7 to skip steps, you stop on declare attackers step if attackers are available. If this option is not activated, you also skip the declare attackers step with this actions. F9 does always skip the declare attackers step.");
  cbStopAttack.setActionCommand("");
  cbStopAttack.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbStopAttackActionPerformed(evt);
    }
  }
);
  phases_stopSettings.add(cbStopAttack);
  cbStopBlock.setText("Stop on your declare blockers step also if no blockers available");
  cbStopBlock.setToolTipText("Also if you have no blockers to declare, the game stops at the declare blockers step.");
  cbStopBlock.setActionCommand("");
  cbStopBlock.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbStopBlockActionPerformed(evt);
    }
  }
);
  phases_stopSettings.add(cbStopBlock);
  cbStopOnAllMain.setText("Skip with F7 to next main phase (if not activated skip always to your next main phase)");
  cbStopOnAllMain.setToolTipText("If activated F7 skips to next main phases (regardless of the active players).");
  cbStopOnAllMain.setActionCommand("");
  cbStopOnAllMain.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbStopOnAllMainActionPerformed(evt);
    }
  }
);
  phases_stopSettings.add(cbStopOnAllMain);
  cbStopOnAllEnd.setText("Skip with F5 to next end step (if not activated only to end steps of opponents)");
  cbStopOnAllEnd.setToolTipText("If activated - F5 skips to the next end step (regardless of the current player)");
  cbStopOnAllEnd.setActionCommand("");
  cbStopOnAllEnd.setPreferredSize(new java.awt.Dimension(300,25));
  cbStopOnAllEnd.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbStopOnAllEndActionPerformed(evt);
    }
  }
);
  phases_stopSettings.add(cbStopOnAllEnd);
  javax.swing.GroupLayout tabPhasesLayout=new javax.swing.GroupLayout(tabPhases);
  tabPhases.setLayout(tabPhasesLayout);
  tabPhasesLayout.setHorizontalGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addGap(20,20,20).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabelUpkeep).addComponent(jLabelBeforeCombat).addComponent(jLabelEndofCombat).addComponent(jLabelMain2).addComponent(jLabelEndOfTurn)).addGap(77,77,77).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addGap(2,2,2).addComponent(jLabelYourTurn).addGap(32,32,32).addComponent(jLabelOpponentsTurn)).addGroup(tabPhasesLayout.createSequentialGroup().addGap(13,13,13).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(checkBoxDrawYou).addComponent(checkBoxUpkeepYou).addComponent(checkBoxMainYou).addComponent(checkBoxBeforeCYou).addComponent(checkBoxEndOfCYou).addComponent(checkBoxMain2You).addComponent(checkBoxEndTurnYou)).addGap(78,78,78).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(checkBoxUpkeepOthers).addComponent(checkBoxBeforeCOthers).addComponent(checkBoxMainOthers).addComponent(checkBoxEndOfCOthers).addComponent(checkBoxDrawOthers).addComponent(checkBoxMain2Others).addComponent(checkBoxEndTurnOthers))))).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,false).addComponent(jLabelMain1,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(jLabelDraw,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)))).addGroup(tabPhasesLayout.createSequentialGroup().addContainerGap().addComponent(jLabelHeadLine))).addGap(0,0,Short.MAX_VALUE)).addGroup(tabPhasesLayout.createSequentialGroup().addContainerGap().addComponent(phases_stopSettings,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE))).addContainerGap()));
  tabPhasesLayout.setVerticalGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addContainerGap().addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(tabPhasesLayout.createSequentialGroup().addComponent(jLabelOpponentsTurn).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(checkBoxUpkeepOthers)).addGroup(tabPhasesLayout.createSequentialGroup().addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(tabPhasesLayout.createSequentialGroup().addComponent(jLabelHeadLine).addGap(20,20,20)).addComponent(jLabelYourTurn)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(checkBoxUpkeepYou).addComponent(jLabelUpkeep)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabelDraw).addComponent(checkBoxDrawYou).addComponent(checkBoxDrawOthers)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabelMain1).addComponent(checkBoxMainYou).addComponent(checkBoxMainOthers)).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabPhasesLayout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabelBeforeCombat,javax.swing.GroupLayout.Alignment.TRAILING).addComponent(checkBoxBeforeCYou,javax.swing.GroupLayout.Alignment.TRAILING))).addGroup(tabPhasesLayout.createSequentialGroup().addGap(6,6,6).addComponent(checkBoxBeforeCOthers))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabelEndofCombat).addComponent(checkBoxEndOfCYou).addComponent(checkBoxEndOfCOthers)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabelMain2).addComponent(checkBoxMain2You).addComponent(checkBoxMain2Others)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(tabPhasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(checkBoxEndTurnYou).addComponent(jLabelEndOfTurn).addComponent(checkBoxEndTurnOthers)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(phases_stopSettings,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(18,Short.MAX_VALUE)));
  tabsPanel.addTab("Phases",tabPhases);
  panelCardImages.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Card images:"));
  cbUseDefaultImageFolder.setText("Use default location to save images");
  cbUseDefaultImageFolder.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbUseDefaultImageFolderActionPerformed(evt);
    }
  }
);
  txtImageFolderPath.setToolTipText("The selected image will be used as background picture. You have to restart MAGE to view a changed background image.");
  btnBrowseImageLocation.setText("Browse...");
  btnBrowseImageLocation.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBrowseImageLocationActionPerformed(evt);
    }
  }
);
  cbCheckForNewImages.setText("Check for new images on startup");
  cbCheckForNewImages.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbCheckForNewImagesActionPerformed(evt);
    }
  }
);
  cbSaveToZipFiles.setText("Store images in zip files");
  cbSaveToZipFiles.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbSaveToZipFilesActionPerformed(evt);
    }
  }
);
  cbPreferedImageLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1","Item 2","Item 3","Item 4"}));
  labelPreferedImageLanguage.setText("Prefered image language:");
  labelPreferedImageLanguage.setFocusable(false);
  javax.swing.GroupLayout panelCardImagesLayout=new javax.swing.GroupLayout(panelCardImages);
  panelCardImages.setLayout(panelCardImagesLayout);
  panelCardImagesLayout.setHorizontalGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelCardImagesLayout.createSequentialGroup().addGap(24,24,24).addComponent(txtImageFolderPath).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnBrowseImageLocation)).addGroup(panelCardImagesLayout.createSequentialGroup().addGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(cbUseDefaultImageFolder).addComponent(cbCheckForNewImages).addGroup(panelCardImagesLayout.createSequentialGroup().addGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,false).addGroup(javax.swing.GroupLayout.Alignment.LEADING,panelCardImagesLayout.createSequentialGroup().addContainerGap().addComponent(labelPreferedImageLanguage)).addComponent(cbSaveToZipFiles,javax.swing.GroupLayout.Alignment.LEADING)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(cbPreferedImageLanguage,javax.swing.GroupLayout.PREFERRED_SIZE,153,javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(0,0,Short.MAX_VALUE)));
  panelCardImagesLayout.setVerticalGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelCardImagesLayout.createSequentialGroup().addContainerGap().addComponent(cbUseDefaultImageFolder).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtImageFolderPath,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnBrowseImageLocation)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(cbCheckForNewImages).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cbSaveToZipFiles).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(panelCardImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cbPreferedImageLanguage,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(labelPreferedImageLanguage)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  panelBackgroundImages.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Background images setting:"));
  cbUseDefaultBackground.setText("Use default image");
  cbUseDefaultBackground.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbUseDefaultBackgroundActionPerformed(evt);
    }
  }
);
  txtBackgroundImagePath.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtBackgroundImagePathActionPerformed(evt);
    }
  }
);
  btnBrowseBackgroundImage.setText("Browse...");
  btnBrowseBackgroundImage.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBrowseBackgroundImageActionPerformed(evt);
    }
  }
);
  txtBattlefieldImagePath.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtBattlefieldImagePathActionPerformed(evt);
    }
  }
);
  btnBrowseBattlefieldImage.setText("Browse...");
  btnBrowseBattlefieldImage.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBrowseBattlefieldImageActionPerformed(evt);
    }
  }
);
  cbUseDefaultBattleImage.setText("Use default battlefield image");
  cbUseDefaultBattleImage.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbUseDefaultBattleImageActionPerformed(evt);
    }
  }
);
  cbUseRandomBattleImage.setText("Select random battlefield image");
  cbUseRandomBattleImage.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbUseRandomBattleImageActionPerformed(evt);
    }
  }
);
  jLabel14.setText("Background:");
  jLabel15.setText("Battlefield:");
  javax.swing.GroupLayout panelBackgroundImagesLayout=new javax.swing.GroupLayout(panelBackgroundImages);
  panelBackgroundImages.setLayout(panelBackgroundImagesLayout);
  panelBackgroundImagesLayout.setHorizontalGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addGap(19,19,19).addComponent(jLabel14)).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addGap(25,25,25).addComponent(jLabel15))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addComponent(txtBattlefieldImagePath,javax.swing.GroupLayout.PREFERRED_SIZE,336,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnBrowseBattlefieldImage)).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addComponent(txtBackgroundImagePath,javax.swing.GroupLayout.PREFERRED_SIZE,332,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnBrowseBackgroundImage))).addGap(0,0,Short.MAX_VALUE)).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(cbUseRandomBattleImage).addComponent(cbUseDefaultBattleImage).addComponent(cbUseDefaultBackground)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  panelBackgroundImagesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,new java.awt.Component[]{txtBackgroundImagePath,txtBattlefieldImagePath});
  panelBackgroundImagesLayout.setVerticalGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(panelBackgroundImagesLayout.createSequentialGroup().addContainerGap().addComponent(cbUseDefaultBackground).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtBackgroundImagePath,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnBrowseBackgroundImage).addComponent(jLabel14)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(cbUseDefaultBattleImage).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(cbUseRandomBattleImage).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(panelBackgroundImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtBattlefieldImagePath,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnBrowseBattlefieldImage).addComponent(jLabel15))));
  javax.swing.GroupLayout tabImagesLayout=new javax.swing.GroupLayout(tabImages);
  tabImages.setLayout(tabImagesLayout);
  tabImagesLayout.setHorizontalGroup(tabImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabImagesLayout.createSequentialGroup().addContainerGap().addGroup(tabImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(panelCardImages,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(panelBackgroundImages,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addContainerGap()));
  tabImagesLayout.setVerticalGroup(tabImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabImagesLayout.createSequentialGroup().addContainerGap().addComponent(panelCardImages,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(panelBackgroundImages,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  tabsPanel.addTab("Images",tabImages);
  sounds_clips.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Clips"));
  sounds_clips.setLayout(new java.awt.GridLayout(4,0));
  cbEnableGameSounds.setText("Enable game sounds");
  cbEnableGameSounds.setToolTipText("Sounds that will be played for certain actions (e.g. play land, attack, etc.) during the game.");
  cbEnableGameSounds.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbEnableGameSoundsActionPerformed(evt);
    }
  }
);
  sounds_clips.add(cbEnableGameSounds);
  cbEnableDraftSounds.setText("Enable draft sounds");
  cbEnableDraftSounds.setToolTipText("Sounds that will be played during drafting for card picking or warining if time runs out.");
  cbEnableDraftSounds.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbEnableDraftSoundsActionPerformed(evt);
    }
  }
);
  sounds_clips.add(cbEnableDraftSounds);
  cbEnableSkipButtonsSounds.setText("Enable skip button sounds");
  cbEnableSkipButtonsSounds.setToolTipText("Sounds that will be played if a priority skip action (F4/F5/F7/F9) or cancel skip action (F3) is used.");
  cbEnableSkipButtonsSounds.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbEnableSkipButtonsSoundsActionPerformed(evt);
    }
  }
);
  sounds_clips.add(cbEnableSkipButtonsSounds);
  cbEnableOtherSounds.setText("Enable other sounds");
  cbEnableOtherSounds.setToolTipText("Sounds that will be played for actions outside of games (e.g. whisper, player joins your game, player submits a deck ...).");
  cbEnableOtherSounds.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbEnableOtherSoundsActionPerformed(evt);
    }
  }
);
  sounds_clips.add(cbEnableOtherSounds);
  sounds_backgroundMusic.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(),"Music"));
  cbEnableBattlefieldBGM.setText("Play music during match");
  cbEnableBattlefieldBGM.setToolTipText("During your matches music will be played from the seleced folder.");
  cbEnableBattlefieldBGM.setActionCommand("Play automatically during matches");
  cbEnableBattlefieldBGM.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbEnableBattlefieldBGMActionPerformed(evt);
    }
  }
);
  jLabel16.setText("Playing from folder:");
  jLabel16.setToolTipText("");
  txtBattlefieldIBGMPath.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtBattlefieldIBGMPathActionPerformed(evt);
    }
  }
);
  btnBattlefieldBGMBrowse.setText("Browse...");
  btnBattlefieldBGMBrowse.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      btnBattlefieldBGMBrowseActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout sounds_backgroundMusicLayout=new javax.swing.GroupLayout(sounds_backgroundMusic);
  sounds_backgroundMusic.setLayout(sounds_backgroundMusicLayout);
  sounds_backgroundMusicLayout.setHorizontalGroup(sounds_backgroundMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(sounds_backgroundMusicLayout.createSequentialGroup().addContainerGap().addComponent(jLabel16).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtBattlefieldIBGMPath).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnBattlefieldBGMBrowse)).addGroup(sounds_backgroundMusicLayout.createSequentialGroup().addComponent(cbEnableBattlefieldBGM).addGap(0,0,Short.MAX_VALUE)));
  sounds_backgroundMusicLayout.setVerticalGroup(sounds_backgroundMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(sounds_backgroundMusicLayout.createSequentialGroup().addComponent(cbEnableBattlefieldBGM).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(sounds_backgroundMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtBattlefieldIBGMPath,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnBattlefieldBGMBrowse).addComponent(jLabel16))));
  javax.swing.GroupLayout tabSoundsLayout=new javax.swing.GroupLayout(tabSounds);
  tabSounds.setLayout(tabSoundsLayout);
  tabSoundsLayout.setHorizontalGroup(tabSoundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabSoundsLayout.createSequentialGroup().addContainerGap().addGroup(tabSoundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(sounds_clips,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(sounds_backgroundMusic,javax.swing.GroupLayout.Alignment.TRAILING,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)).addContainerGap()));
  tabSoundsLayout.setVerticalGroup(tabSoundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabSoundsLayout.createSequentialGroup().addContainerGap().addComponent(sounds_clips,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sounds_backgroundMusic,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  sounds_clips.getAccessibleContext().setAccessibleDescription("");
  tabsPanel.addTab("Sounds",tabSounds);
  lblProxyType.setText("Proxy:");
  cbProxyType.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      cbProxyTypeActionPerformed(evt);
    }
  }
);
  pnlProxySettings.setBorder(javax.swing.BorderFactory.createEtchedBorder());
  lblProxyServer.setText("Server:");
  lblProxyPort.setText("Port:");
  txtProxyPort.addKeyListener(new java.awt.event.KeyAdapter(){
    public void keyTyped(    java.awt.event.KeyEvent evt){
      txtProxyPortkeyTyped(evt);
    }
  }
);
  lblProxyUserName.setText("User Name:");
  lblProxyPassword.setText("Password:");
  txtPasswordField.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      txtPasswordFieldActionPerformed(evt);
    }
  }
);
  rememberPswd.setText("Remember Password");
  rememberPswd.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rememberPswdActionPerformed(evt);
    }
  }
);
  jLabel11.setFont(new java.awt.Font("Tahoma",2,10));
  jLabel11.setText("Note: password won't be encrypted!");
  javax.swing.GroupLayout pnlProxyLayout=new javax.swing.GroupLayout(pnlProxy);
  pnlProxy.setLayout(pnlProxyLayout);
  pnlProxyLayout.setHorizontalGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlProxyLayout.createSequentialGroup().addGap(29,29,29).addComponent(rememberPswd).addGap(18,18,18).addComponent(jLabel11).addGap(34,34,34)).addGroup(pnlProxyLayout.createSequentialGroup().addContainerGap().addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblProxyPort).addComponent(lblProxyPassword).addComponent(lblProxyServer).addComponent(lblProxyUserName)).addGap(19,19,19).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtProxyPort,javax.swing.GroupLayout.PREFERRED_SIZE,58,javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,false).addComponent(txtPasswordField,javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtProxyUserName,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.PREFERRED_SIZE,148,javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(txtProxyServer,javax.swing.GroupLayout.DEFAULT_SIZE,398,Short.MAX_VALUE)).addContainerGap()));
  pnlProxyLayout.setVerticalGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlProxyLayout.createSequentialGroup().addGap(6,6,6).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtProxyServer,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblProxyServer)).addGap(8,8,8).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblProxyPort).addComponent(txtProxyPort,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtProxyUserName,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblProxyUserName)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtPasswordField,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblProxyPassword)).addGap(18,18,18).addGroup(pnlProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(rememberPswd).addComponent(jLabel11)).addContainerGap(25,Short.MAX_VALUE)));
  javax.swing.GroupLayout pnlProxySettingsLayout=new javax.swing.GroupLayout(pnlProxySettings);
  pnlProxySettings.setLayout(pnlProxySettingsLayout);
  pnlProxySettingsLayout.setHorizontalGroup(pnlProxySettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlProxySettingsLayout.createSequentialGroup().addContainerGap().addComponent(pnlProxy,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addContainerGap()));
  pnlProxySettingsLayout.setVerticalGroup(pnlProxySettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlProxySettingsLayout.createSequentialGroup().addComponent(pnlProxy,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addContainerGap()));
  javax.swing.GroupLayout tabConnectionLayout=new javax.swing.GroupLayout(tabConnection);
  tabConnection.setLayout(tabConnectionLayout);
  tabConnectionLayout.setHorizontalGroup(tabConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabConnectionLayout.createSequentialGroup().addGroup(tabConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabConnectionLayout.createSequentialGroup().addGap(40,40,40).addComponent(lblProxyType).addGap(18,18,18).addComponent(cbProxyType,javax.swing.GroupLayout.PREFERRED_SIZE,126,javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(tabConnectionLayout.createSequentialGroup().addContainerGap().addComponent(pnlProxySettings,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE))).addContainerGap()));
  tabConnectionLayout.setVerticalGroup(tabConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(tabConnectionLayout.createSequentialGroup().addContainerGap().addGroup(tabConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblProxyType).addComponent(cbProxyType,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(pnlProxySettings,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(163,Short.MAX_VALUE)));
  pnlProxySettings.getAccessibleContext().setAccessibleDescription("");
  tabsPanel.addTab("Connection",tabConnection);
  jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel10Layout=new javax.swing.GroupLayout(jPanel10);
  jPanel10.setLayout(jPanel10Layout);
  jPanel10Layout.setHorizontalGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel10Layout.setVerticalGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel13Layout=new javax.swing.GroupLayout(jPanel13);
  jPanel13.setLayout(jPanel13Layout);
  jPanel13Layout.setHorizontalGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel13Layout.setVerticalGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel11Layout=new javax.swing.GroupLayout(jPanel11);
  jPanel11.setLayout(jPanel11Layout);
  jPanel11Layout.setHorizontalGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel11Layout.setVerticalGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jLabel12.setFont(new java.awt.Font("Tahoma",1,11));
  jLabel12.setText("Choose your avatar:");
  jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel12Layout=new javax.swing.GroupLayout(jPanel12);
  jPanel12.setLayout(jPanel12Layout);
  jPanel12Layout.setHorizontalGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel12Layout.setVerticalGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel14Layout=new javax.swing.GroupLayout(jPanel14);
  jPanel14.setLayout(jPanel14Layout);
  jPanel14Layout.setHorizontalGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel14Layout.setVerticalGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel15Layout=new javax.swing.GroupLayout(jPanel15);
  jPanel15.setLayout(jPanel15Layout);
  jPanel15Layout.setHorizontalGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel15Layout.setVerticalGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jLabel13.setFont(new java.awt.Font("Tahoma",1,11));
  jLabel13.setText("New avatars:");
  jPanel16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel16Layout=new javax.swing.GroupLayout(jPanel16);
  jPanel16.setLayout(jPanel16Layout);
  jPanel16Layout.setHorizontalGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel16Layout.setVerticalGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel17Layout=new javax.swing.GroupLayout(jPanel17);
  jPanel17.setLayout(jPanel17Layout);
  jPanel17Layout.setHorizontalGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel17Layout.setVerticalGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel18.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel18Layout=new javax.swing.GroupLayout(jPanel18);
  jPanel18.setLayout(jPanel18Layout);
  jPanel18Layout.setHorizontalGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel18Layout.setVerticalGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel19.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel19Layout=new javax.swing.GroupLayout(jPanel19);
  jPanel19.setLayout(jPanel19Layout);
  jPanel19Layout.setHorizontalGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel19Layout.setVerticalGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel20.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel20Layout=new javax.swing.GroupLayout(jPanel20);
  jPanel20.setLayout(jPanel20Layout);
  jPanel20Layout.setHorizontalGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel20Layout.setVerticalGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel21.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204,204,204),1,true));
  javax.swing.GroupLayout jPanel21Layout=new javax.swing.GroupLayout(jPanel21);
  jPanel21.setLayout(jPanel21Layout);
  jPanel21Layout.setHorizontalGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  jPanel21Layout.setVerticalGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0,100,Short.MAX_VALUE));
  javax.swing.GroupLayout jPanel9Layout=new javax.swing.GroupLayout(jPanel9);
  jPanel9.setLayout(jPanel9Layout);
  jPanel9Layout.setHorizontalGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel9Layout.createSequentialGroup().addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel9Layout.createSequentialGroup().addContainerGap().addComponent(jLabel12)).addGroup(jPanel9Layout.createSequentialGroup().addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel9Layout.createSequentialGroup().addGap(30,30,30).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel12,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel10,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel19,javax.swing.GroupLayout.Alignment.LEADING,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(33,33,33).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel13,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel14,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel20,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel9Layout.createSequentialGroup().addContainerGap().addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel9Layout.createSequentialGroup().addGap(20,20,20).addComponent(jPanel16,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addGap(33,33,33).addComponent(jPanel17,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jLabel13)))).addGap(32,32,32).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel18,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel21,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel15,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel11,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)));
  jPanel9Layout.setVerticalGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel9Layout.createSequentialGroup().addContainerGap().addComponent(jLabel12).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel11,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel13,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel10,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(26,26,26).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel15,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel12,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel14,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(23,23,23).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel19,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel20,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel21,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18,18,18).addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel9Layout.createSequentialGroup().addComponent(jLabel13).addGap(18,18,18).addComponent(jPanel16,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jPanel17,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel18,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(25,25,25)));
  jScrollPane1.setViewportView(jPanel9);
  javax.swing.GroupLayout tabAvatarsLayout=new javax.swing.GroupLayout(tabAvatars);
  tabAvatars.setLayout(tabAvatarsLayout);
  tabAvatarsLayout.setHorizontalGroup(tabAvatarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,561,Short.MAX_VALUE));
  tabAvatarsLayout.setVerticalGroup(tabAvatarsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1,javax.swing.GroupLayout.DEFAULT_SIZE,406,Short.MAX_VALUE));
  tabsPanel.addTab("Avatars",tabAvatars);
  saveButton.setLabel("Save");
  saveButton.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
  saveButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      saveButtonActionPerformed(evt);
    }
  }
);
  exitButton.setLabel("Exit");
  exitButton.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
  exitButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      exitButtonActionPerformed(evt);
    }
  }
);
  javax.swing.GroupLayout layout=new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(tabsPanel,javax.swing.GroupLayout.DEFAULT_SIZE,566,Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE).addComponent(saveButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(exitButton,javax.swing.GroupLayout.PREFERRED_SIZE,55,javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
  layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(tabsPanel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(exitButton).addComponent(saveButton)).addContainerGap()));
  pack();
}
