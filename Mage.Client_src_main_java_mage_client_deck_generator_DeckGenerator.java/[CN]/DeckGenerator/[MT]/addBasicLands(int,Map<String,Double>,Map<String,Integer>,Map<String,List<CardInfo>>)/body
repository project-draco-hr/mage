{
  int colorTotal=0;
  ColoredManaSymbol colorToAdd=null;
  for (  Map.Entry<String,Integer> c : count.entrySet()) {
    colorTotal+=c.getValue();
  }
  while (landsNeeded > 0) {
    double minPercentage=Integer.MIN_VALUE;
    for (    ColoredManaSymbol color : ColoredManaSymbol.values()) {
      double neededPercentage=percentage.get(color.toString());
      if (neededPercentage <= 0) {
        continue;
      }
      int currentCount=count.get(color.toString());
      double thisPercentage=0.0;
      if (currentCount > 0)       thisPercentage=(currentCount / (double)colorTotal) * 100.0;
      if (neededPercentage - thisPercentage > minPercentage) {
        colorToAdd=color;
        minPercentage=(neededPercentage - thisPercentage);
      }
    }
    if (colorToAdd != null) {
      genPool.addCard(getBasicLand(colorToAdd,basicLands));
      count.put(colorToAdd.toString(),count.get(colorToAdd.toString()) + 1);
      colorTotal++;
      landsNeeded--;
    }
  }
}
