{
  StringBuilder sb=new StringBuilder("Target ");
switch (targetController) {
case OPPONENT:
    sb.append("Opponent");
  break;
case ANY:
sb.append("Player");
break;
default :
throw new UnsupportedOperationException("target controller not supported");
}
if (revealAllCards) {
sb.append(" reveals his or her hand");
}
 else {
if (numberCardsToReveal instanceof StaticValue) {
sb.append(" reveales ");
sb.append(numberCardsToReveal.getMessage());
sb.append(" from his or her hand");
}
 else {
sb.append(" reveals a number of cards from his or her hand equal to ");
sb.append(numberCardsToReveal.getMessage());
}
}
sb.append(". You choose ");
sb.append(filter.getMessage());
if (revealAllCards) {
sb.append(" from it.");
}
 else {
sb.append(" of them.");
}
sb.append(" That player discards that card").toString();
return sb.toString();
}
