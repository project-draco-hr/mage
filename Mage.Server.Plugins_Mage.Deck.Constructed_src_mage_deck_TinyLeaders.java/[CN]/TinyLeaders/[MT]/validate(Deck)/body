{
  boolean valid=true;
  if (deck.getCards().size() != 49) {
    invalid.put("Deck","Must contain 49 cards: has " + deck.getCards().size() + " cards");
    valid=false;
  }
  List<String> basicLandNames=new ArrayList<>(Arrays.asList("Forest","Island","Mountain","Swamp","Plains","Wastes","Snow-Covered Forest","Snow-Covered Island","Snow-Covered Mountain","Snow-Covered Swamp","Snow-Covered Plains"));
  Map<String,Integer> counts=new HashMap<>();
  counts.put(deck.getName(),1);
  countCards(counts,deck.getCards());
  countCards(counts,deck.getSideboard());
  for (  Map.Entry<String,Integer> entry : counts.entrySet()) {
    if (entry.getValue() > 1) {
      if (!basicLandNames.contains(entry.getKey()) && !entry.getKey().equals("Relentless Rats") && !entry.getKey().equals("Shadowborn Apostle")) {
        invalid.put(entry.getKey(),"Too many: " + entry.getValue());
        valid=false;
      }
    }
  }
  for (  String bannedCard : banned) {
    if (counts.containsKey(bannedCard)) {
      invalid.put(bannedCard,"Banned");
      valid=false;
    }
  }
  if (deck.getSideboard().size() <= 10) {
    Card commander=GameTinyLeadersImpl.getCommanderCard(deck.getName(),null);
    if (commander == null || commander.getManaCost().convertedManaCost() > 3) {
      if (commander == null) {
        if (deck.getName() == null) {
          invalid.put("Leader","You have to save your deck with the leader card name entered to the DECK NAME field of the DECK EDITOR (top left) so that XMage knows your leader." + "(You can use the \"Sultai\" for a UBG (3/3) default Commander or \"Glass\" for a colorless 3/3 default Commander.)");
        }
 else {
          invalid.put("Leader","Leader [" + deck.getName() + "] not found. You have to enter the name of the leader card into the DECK NAME field of the DECK EDITOR (top left). Check your spelling "+ "(use the \"Sultai\" for a UBG (3/3) default Commander or \"Glass\" for a colorless (3/3) default Commander)");
        }
      }
      if (commander != null && commander.getManaCost().convertedManaCost() > 3) {
        invalid.put("Leader","Commanders converted mana cost is greater than 3");
      }
      return false;
    }
    if ((commander.getCardType().contains(CardType.CREATURE) && commander.getSupertype().contains("Legendary")) || (commander.getCardType().contains(CardType.PLANESWALKER) && commander.getAbilities().contains(CanBeYourCommanderAbility.getInstance()))) {
      if (!bannedCommander.contains(commander.getName())) {
        FilterMana color=CardUtil.getColorIdentity(commander);
        for (        Card card : deck.getCards()) {
          if (!isCardFormatValid(card,commander,color)) {
            valid=false;
          }
        }
        for (        Card card : deck.getSideboard()) {
          if (!isCardFormatValid(card,commander,color)) {
            valid=false;
          }
        }
      }
 else {
        invalid.put("Commander","Commander banned (" + commander.getName() + ")");
        valid=false;
      }
    }
 else {
      invalid.put("Commander","Commander invalide (" + commander.getName() + ")");
      valid=false;
    }
  }
 else {
    invalid.put("Commander","Sideboard must contain only a maximum of 10 sideboard cards (the Tiny Leader name must be written to the deck name)");
    valid=false;
  }
  return valid;
}
