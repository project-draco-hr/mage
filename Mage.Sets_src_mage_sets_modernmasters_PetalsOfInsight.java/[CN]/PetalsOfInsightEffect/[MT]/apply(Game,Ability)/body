{
  Player player=game.getPlayer(source.getControllerId());
  if (player == null) {
    return false;
  }
  Cards cards=new CardsImpl(Zone.PICK);
  int count=Math.min(player.getLibrary().size(),3);
  for (int i=0; i < count; i++) {
    Card card=player.getLibrary().removeFromTop(game);
    if (card != null) {
      cards.add(card);
      game.setZone(card.getId(),Zone.PICK);
    }
  }
  player.lookAtCards("Petals of Insight",cards,game);
  if (player.chooseUse(outcome,"Put the cards on the bottom of your library in any order?",game)) {
    TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to put on the bottom of your library"));
    target.setRequired(true);
    while (player.isInGame() && cards.size() > 1) {
      player.choose(Outcome.Neutral,cards,target,game);
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.moveToZone(Zone.LIBRARY,source.getId(),game,false);
      }
      target.clearChosen();
    }
    if (cards.size() == 1) {
      Card card=cards.get(cards.iterator().next(),game);
      card.moveToZone(Zone.LIBRARY,source.getId(),game,false);
    }
    game.getState().setValue(source.getSourceId().toString(),Boolean.TRUE);
  }
 else {
    for (    UUID cardId : cards) {
      Card card=game.getCard(cardId);
      if (card != null) {
        card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,true);
      }
    }
    game.getState().setValue(source.getSourceId().toString(),Boolean.FALSE);
  }
  return true;
}
