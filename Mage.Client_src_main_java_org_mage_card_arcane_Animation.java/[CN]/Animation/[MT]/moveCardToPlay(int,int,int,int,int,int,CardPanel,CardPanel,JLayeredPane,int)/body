{
  UI.invokeLater(new Runnable(){
    @Override public void run(){
      final int startHeight=Math.round(startWidth * CardPanel.ASPECT_RATIO);
      final int endHeight=Math.round(endWidth * CardPanel.ASPECT_RATIO);
      final float a=2f;
      final float sqrta=(float)Math.sqrt(1 / a);
      animationPanel.setCardBounds(startX,startY,startWidth,startHeight);
      animationPanel.setAnimationPanel(true);
      Container parent=animationPanel.getParent();
      if (parent != null && !parent.equals(layeredPane)) {
        layeredPane.add(animationPanel);
        layeredPane.setLayer(animationPanel,JLayeredPane.MODAL_LAYER);
      }
      new Animation(700){
        @Override protected void update(        float percentage){
          float percent=percentage;
          if (placeholder != null && !placeholder.isShowing()) {
            cancel();
            return;
          }
          int currentX=startX + Math.round((endX - startX + endWidth / 2f) * percent);
          int currentY=startY + Math.round((endY - startY + endHeight / 2f) * percent);
          int currentWidth, currentHeight;
          int midWidth=Math.max(200,endWidth * 2);
          int midHeight=Math.round(midWidth * CardPanel.ASPECT_RATIO);
          if (percent <= 0.5f) {
            percent=percent * 2;
            float pp=sqrta * (1 - percent);
            percent=1 - a * pp * pp;
            currentWidth=startWidth + Math.round((midWidth - startWidth) * percent);
            currentHeight=startHeight + Math.round((midHeight - startHeight) * percent);
          }
 else {
            percent=(percent - 0.5f) * 2;
            float pp=sqrta * percent;
            percent=a * pp * pp;
            currentWidth=midWidth + Math.round((endWidth - midWidth) * percent);
            currentHeight=midHeight + Math.round((endHeight - midHeight) * percent);
          }
          currentX-=currentWidth / 2;
          currentY-=currentHeight / 2;
          animationPanel.setCardBounds(currentX,currentY,currentWidth,currentHeight);
        }
        @Override protected void end(){
          EventQueue.invokeLater(new Runnable(){
            @Override public void run(){
              if (placeholder != null) {
                placeholder.setDisplayEnabled(true);
                placeholder.transferResources(animationPanel);
              }
              animationPanel.setVisible(false);
              animationPanel.repaint();
              layeredPane.remove(animationPanel);
            }
          }
);
        }
      }
;
    }
  }
);
}
