{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent permanent=game.getPermanent(source.getSourceId());
  if (permanent == null) {
    permanent=game.getPermanentEntering(source.getSourceId());
  }
  final Permanent sourcePermanent=permanent;
  if (controller != null && sourcePermanent != null) {
    Target target=new TargetPermanent(new FilterCreaturePermanent("target creature (you copy from)"));
    target.setRequired(true);
    if (source instanceof SimpleStaticAbility) {
      target=new TargetPermanent(new FilterCreaturePermanent("creature (you copy from)"));
      target.setRequired(false);
      target.setNotTarget(true);
    }
    if (target.canChoose(source.getSourceId(),source.getControllerId(),game)) {
      controller.choose(Outcome.Copy,target,source.getSourceId(),game);
      Permanent copyFromPermanent=game.getPermanent(target.getFirstTarget());
      if (copyFromPermanent != null) {
        game.copyPermanent(copyFromPermanent,sourcePermanent.getId(),source,new ApplyToPermanent(){
          @Override public Boolean apply(          Game game,          Permanent permanent){
            permanent.getColor(game).setColor(sourcePermanent.getColor(game));
            permanent.getAbilities().add(new BeginningOfUpkeepTriggeredAbility(Zone.BATTLEFIELD,new VesuvanDoppelgangerCopyEffect(),TargetController.YOU,true,false,rule2));
            return true;
          }
          @Override public Boolean apply(          Game game,          MageObject mageObject){
            mageObject.getColor(game).setColor(sourcePermanent.getColor(game));
            mageObject.getAbilities().add(new BeginningOfUpkeepTriggeredAbility(Zone.BATTLEFIELD,new VesuvanDoppelgangerCopyEffect(),TargetController.YOU,true,false,rule2));
            return true;
          }
        }
);
        return true;
      }
    }
  }
  return false;
}
