{
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NAME,tOptions.getName());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PASSWORD,tOptions.getPassword());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TIME_LIMIT,Integer.toString(tOptions.getMatchOptions().getPriorityTime()));
  if (this.spnConstructTime.isVisible()) {
    PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_CONSTR_TIME,Integer.toString(tOptions.getLimitedOptions().getConstructionTime()));
  }
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_TYPE,tOptions.getTournamentType());
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_FREE_MULLIGANS,Integer.toString(tOptions.getMatchOptions().getFreeMulligans()));
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_NUMBER_OF_WINS,Integer.toString(tOptions.getMatchOptions().getWinsNeeded()));
  if (tOptions.getTournamentType().startsWith("Sealed")) {
    PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_SEALED,tOptions.getLimitedOptions().getSetCodes().toString());
    PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_SEALED,Integer.toString(tOptions.getPlayerTypes().size()));
  }
  if (tOptions.getTournamentType().startsWith("Booster")) {
    DraftOptions draftOptions=(DraftOptions)tOptions.getLimitedOptions();
    if (draftOptions != null) {
      PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_DRAFT,draftOptions.getSetCodes().toString());
      PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PLAYERS_DRAFT,Integer.toString(tOptions.getPlayerTypes().size()));
      PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_DRAFT_TIMING,draftOptions.getTiming().name());
    }
    String deckFile=this.player1Panel.getDeckFile();
    if (deckFile != null && !deckFile.isEmpty()) {
      PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TABLE_DECK_FILE,deckFile);
    }
    if (tOptions.getLimitedOptions().getIsRandom()) {
      StringBuilder packlist=new StringBuilder();
      for (      Object pack : randomList.getSelectedValuesList()) {
        packlist.append((String)pack);
        packlist.append(";");
      }
      PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_PACKS_RANDOM_DRAFT,packlist.toString());
    }
  }
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_SPECTATORS,(tOptions.isWatchingAllowed() ? "Yes" : "No"));
  PreferencesDialog.saveValue(PreferencesDialog.KEY_NEW_TOURNAMENT_ALLOW_ROLLBACKS,(tOptions.getMatchOptions().isRollbackTurnsAllowed() ? "Yes" : "No"));
}
