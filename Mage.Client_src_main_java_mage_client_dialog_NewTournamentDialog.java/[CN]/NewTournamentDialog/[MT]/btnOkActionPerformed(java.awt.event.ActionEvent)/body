{
  TournamentTypeView tournamentType=(TournamentTypeView)cbTournamentType.getSelectedItem();
  TournamentOptions tOptions=new TournamentOptions(this.txtName.getText());
  tOptions.setTournamentType(tournamentType.getName());
  tOptions.getPlayerTypes().add("Human");
  tOptions.setWatchingAllowed(cbAllowSpectators.isSelected());
  for (  TournamentPlayerPanel player : players) {
    tOptions.getPlayerTypes().add((String)player.getPlayerType().getSelectedItem());
  }
  if (tournamentType.isDraft()) {
    DraftOptions options=new DraftOptions();
    options.setDraftType("");
    options.setTiming((TimingOption)this.cbDraftTiming.getSelectedItem());
    tOptions.setLimitedOptions(options);
  }
  if (tournamentType.isLimited()) {
    if (tOptions.getLimitedOptions() == null) {
      tOptions.setLimitedOptions(new LimitedOptions());
    }
    tOptions.getLimitedOptions().setConstructionTime((Integer)this.spnConstructTime.getValue() * 60);
    for (    JComboBox pack : packs) {
      tOptions.getLimitedOptions().getSetCodes().add(((ExpansionInfo)pack.getSelectedItem()).getCode());
    }
  }
  tOptions.getMatchOptions().setMatchTimeLimit((MatchTimeLimit)this.cbTimeLimit.getSelectedItem());
  tOptions.getMatchOptions().setDeckType("Limited");
  tOptions.getMatchOptions().setWinsNeeded((Integer)this.spnNumWins.getValue());
  tOptions.getMatchOptions().setFreeMulligans((Integer)this.spnFreeMulligans.getValue());
  tOptions.getMatchOptions().setAttackOption(MultiplayerAttackOption.LEFT);
  tOptions.getMatchOptions().setRange(RangeOfInfluence.ALL);
  tOptions.getMatchOptions().setLimited(true);
  saveTournamentSettingsToPrefs(tOptions);
  table=session.createTournamentTable(roomId,tOptions);
  if (table == null) {
    JOptionPane.showMessageDialog(MageFrame.getDesktop(),"Error creating table.","Error",JOptionPane.ERROR_MESSAGE);
    return;
  }
  if (session.joinTournamentTable(roomId,table.getTableId(),this.txtPlayer1Name.getText(),"Human",1)) {
    for (    TournamentPlayerPanel player : players) {
      if (!player.getPlayerType().toString().equals("Human")) {
        if (!player.joinTournamentTable(roomId,table.getTableId())) {
          JOptionPane.showMessageDialog(MageFrame.getDesktop(),"Error joining tournament.","Error",JOptionPane.ERROR_MESSAGE);
          session.removeTable(roomId,table.getTableId());
          table=null;
          return;
        }
      }
    }
    this.hideDialog();
    return;
  }
  JOptionPane.showMessageDialog(MageFrame.getDesktop(),"Error joining tournament.","Error",JOptionPane.ERROR_MESSAGE);
  session.removeTable(roomId,table.getTableId());
  table=null;
}
