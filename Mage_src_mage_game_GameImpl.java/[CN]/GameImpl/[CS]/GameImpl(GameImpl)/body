{
  long t1=0;
  if (logger.isDebugEnabled()) {
    t1=System.currentTimeMillis();
  }
  this.id=game.id;
  this.ready=game.ready;
  this.startingPlayerId=game.startingPlayerId;
  this.winnerId=game.winnerId;
  this.range=game.range;
  this.freeMulligans=game.freeMulligans;
  this.attackOption=game.attackOption;
  this.state=game.state.copy();
  this.gameCards=game.gameCards;
  this.simulation=game.simulation;
  this.gameOptions=game.gameOptions;
  this.lki.putAll(game.lki);
  this.lkiExtended.putAll(game.lkiExtended);
  this.shortLivingLKI.putAll(game.shortLivingLKI);
  this.permanentsEntering.putAll(game.permanentsEntering);
  if (logger.isDebugEnabled()) {
    copyCount++;
    copyTime+=(System.currentTimeMillis() - t1);
  }
  this.stateCheckRequired=game.stateCheckRequired;
  this.scorePlayer=game.scorePlayer;
  this.scopeRelevant=game.scopeRelevant;
  this.priorityTime=game.priorityTime;
  this.saveGame=game.saveGame;
  this.startLife=game.startLife;
  this.enterWithCounters.putAll(game.enterWithCounters);
}
