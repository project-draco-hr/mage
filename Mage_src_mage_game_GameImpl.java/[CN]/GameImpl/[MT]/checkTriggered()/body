{
  boolean played=false;
  for (  UUID playerId : state.getPlayerList(state.getActivePlayerId())) {
    Player player=getPlayer(playerId);
    while (true) {
      List<TriggeredAbility> abilities=state.getTriggered(player.getId());
      if (abilities.isEmpty()) {
        break;
      }
      if (abilities.size() == 1) {
        state.removeTriggeredAbility(abilities.get(0));
        played|=player.triggerAbility(abilities.get(0),this);
      }
 else {
        TriggeredAbility ability=player.chooseTriggeredAbility(abilities,this);
        state.removeTriggeredAbility(ability);
        played|=player.triggerAbility(ability,this);
      }
    }
  }
  return played;
}
