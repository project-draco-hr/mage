{
  state.getPlayers().resetPassed();
  while (!isGameOver()) {
    for (    Player player : getPlayerList(activePlayerId)) {
      state.setPriorityPlayerId(player.getId());
      while (!player.isPassed() && !player.hasLost() && !player.hasLeft()&& !isGameOver()) {
        checkStateAndTriggered();
        if (isGameOver())         return;
        player.priority(this);
        if (isGameOver())         return;
        applyEffects();
        saveState();
      }
      if (isGameOver())       return;
      if (allPassed()) {
        if (!state.getStack().isEmpty()) {
          state.getStack().resolve(this);
          applyEffects();
          state.getPlayers().resetPassed();
          fireUpdatePlayersEvent();
          saveState();
          break;
        }
        return;
      }
    }
  }
}
