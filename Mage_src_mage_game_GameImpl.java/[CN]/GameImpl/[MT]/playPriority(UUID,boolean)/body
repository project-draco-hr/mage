{
  int bookmark=0;
  clearAllBookmarks();
  try {
    applyEffects();
    while (!isPaused() && !gameOver(null) && !this.getTurn().isEndTurnRequested()) {
      if (!resuming) {
        state.getPlayers().resetPassed();
        state.getPlayerList().setCurrent(activePlayerId);
      }
 else {
        state.getPlayerList().setCurrent(this.getPriorityPlayerId());
      }
      fireUpdatePlayersEvent();
      Player player;
      while (!isPaused() && !gameOver(null)) {
        try {
          if (bookmark == 0) {
            bookmark=bookmarkState();
          }
          player=getPlayer(state.getPlayerList().get());
          state.setPriorityPlayerId(player.getId());
          while (!player.isPassed() && player.isInGame() && !isPaused()&& !gameOver(null)) {
            if (!resuming) {
              checkStateAndTriggered();
              applyEffects();
              if (state.getStack().isEmpty()) {
                resetLKI();
              }
              saveState(false);
              if (isPaused() || gameOver(null)) {
                return;
              }
              if (player.priority(this)) {
                if (executingRollback()) {
                  return;
                }
                applyEffects();
              }
              if (isPaused()) {
                return;
              }
            }
            resuming=false;
          }
          resetShortLivingLKI();
          resuming=false;
          if (isPaused() || gameOver(null)) {
            return;
          }
          if (allPassed()) {
            if (!state.getStack().isEmpty()) {
              resolve();
              applyEffects();
              state.getPlayers().resetPassed();
              fireUpdatePlayersEvent();
              resetShortLivingLKI();
              break;
            }
 else {
              resetLKI();
              return;
            }
          }
        }
 catch (        Exception ex) {
          logger.fatal("Game exception gameId: " + getId(),ex);
          ex.printStackTrace();
          this.fireErrorEvent("Game exception occurred: ",ex);
          restoreState(bookmark,"");
          bookmark=0;
          continue;
        }
        state.getPlayerList().getNext();
      }
    }
  }
 catch (  Exception ex) {
    logger.fatal("Game exception ",ex);
    this.fireErrorEvent("Game exception occurred: ",ex);
  }
 finally {
    resetLKI();
    clearAllBookmarks();
  }
}
