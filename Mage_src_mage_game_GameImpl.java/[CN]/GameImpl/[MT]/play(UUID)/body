{
  if (!isPaused() && !gameOver(null)) {
    playerList=state.getPlayerList(nextPlayerId);
    Player playerByOrder=getPlayer(playerList.get());
    while (!isPaused() && !gameOver(null)) {
      playExtraTurns();
      GameEvent event=new GameEvent(GameEvent.EventType.PLAY_TURN,null,null,playerByOrder.getId());
      if (!replaceEvent(event)) {
        if (!playTurn(playerByOrder)) {
          break;
        }
        state.setTurnNum(state.getTurnNum() + 1);
      }
      playExtraTurns();
      playerByOrder=playerList.getNext(this);
    }
  }
  if (gameOver(null) && !isSimulation()) {
    winnerId=findWinnersAndLosers();
    StringBuilder sb=new StringBuilder("GAME END  gameId: ").append(this.getId()).append(" ");
    int count=0;
    for (    Player player : this.getState().getPlayers().values()) {
      if (count > 0) {
        sb.append(" - ");
      }
      sb.append("[").append(player.getName()).append(" => ");
      sb.append(player.hasWon() ? "W" : "");
      sb.append(player.hasLost() ? "L" : "");
      sb.append(player.hasQuit() ? "Q" : "");
      sb.append(player.hasIdleTimeout() ? "I" : "");
      sb.append(player.hasTimerTimeout() ? "T" : "");
      sb.append("]");
      count++;
    }
    logger.info(sb.toString());
  }
}
