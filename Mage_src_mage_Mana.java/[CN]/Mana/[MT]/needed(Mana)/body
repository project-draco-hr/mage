{
  Mana compare=avail.copy();
  compare.subtract(this);
  if (compare.red < 0 && compare.any > 0) {
    int diff=Math.min(compare.any,Math.abs(compare.red));
    compare.any=compare.getAny() - diff;
    compare.red=compare.getRed() + diff;
  }
  if (compare.green < 0 && compare.any > 0) {
    int diff=Math.min(compare.any,Math.abs(compare.green));
    compare.any=compare.any - diff;
    compare.green=compare.green + diff;
  }
  if (compare.blue < 0 && compare.any > 0) {
    int diff=Math.min(compare.any,Math.abs(compare.blue));
    compare.any=compare.any - diff;
    compare.blue=compare.blue + diff;
  }
  if (compare.black < 0 && compare.any > 0) {
    int diff=Math.min(compare.any,Math.abs(compare.black));
    compare.any=compare.any - diff;
    compare.black=compare.getBlack() + diff;
  }
  if (compare.white < 0 && compare.any > 0) {
    int diff=Math.min(compare.any,Math.abs(compare.white));
    compare.any=compare.any - diff;
    compare.white=compare.white + diff;
  }
  if (compare.colorless < 0) {
    int remaining=0;
    remaining+=Math.min(0,compare.red);
    remaining+=Math.min(0,compare.white);
    remaining+=Math.min(0,compare.green);
    remaining+=Math.min(0,compare.black);
    remaining+=Math.min(0,compare.blue);
    remaining+=Math.min(0,compare.any);
    if (remaining > 0) {
      int diff=Math.min(remaining,Math.abs(compare.colorless));
      compare.colorless=compare.colorless + diff;
    }
  }
  Mana needed=new Mana();
  if (compare.red < 0) {
    needed.red=Math.abs(compare.red);
  }
  if (compare.white < 0) {
    needed.white=Math.abs(compare.white);
  }
  if (compare.green < 0) {
    needed.green=Math.abs(compare.green);
  }
  if (compare.black < 0) {
    needed.black=Math.abs(compare.black);
  }
  if (compare.blue < 0) {
    needed.blue=Math.abs(compare.blue);
  }
  if (compare.colorless < 0) {
    needed.colorless=Math.abs(compare.colorless);
  }
  return needed;
}
