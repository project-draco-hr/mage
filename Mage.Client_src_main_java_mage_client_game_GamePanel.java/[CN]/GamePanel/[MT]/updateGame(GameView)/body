{
  if (playerId == null || game.getHand() == null) {
    this.handContainer.setVisible(false);
  }
 else {
    handCards.clear();
    handCards.put(YOUR_HAND,game.getHand());
    if (game.getOpponentHands() != null) {
      for (      Map.Entry<String,SimpleCardsView> hand : game.getOpponentHands().entrySet()) {
        handCards.put(hand.getKey(),hand.getValue());
      }
    }
    if (!handCards.containsKey(chosenHandKey)) {
      chosenHandKey=YOUR_HAND;
    }
    handContainer.loadCards(handCards.get(chosenHandKey),bigCard,gameId);
    boolean previous=btnSwitchHands.isVisible();
    boolean visible=handCards.size() > 1;
    if (previous != visible) {
      btnSwitchHands.setVisible(visible);
      if (visible) {
        JOptionPane.showMessageDialog(null,"You control other player's turn. \nUse \"Switch Hand\" on the bottom to switch between cards in different hands.");
      }
 else {
        JOptionPane.showMessageDialog(null,"You lost control on other player's turn.");
      }
    }
  }
  if (game.getPhase() != null) {
    this.txtPhase.setText(game.getPhase().toString());
  }
 else {
    this.txtPhase.setText("");
  }
  if (game.getPhase() != null && game.getPhase().toString().equals("End") && game.getStep().toString().equals("End Turn")) {
    AudioManager.playEndTurn();
  }
  if (game.getStep() != null)   this.txtStep.setText(game.getStep().toString());
 else   this.txtStep.setText("");
  this.txtActivePlayer.setText(game.getActivePlayerName());
  this.txtPriority.setText(game.getPriorityPlayerName());
  this.txtTurn.setText(Integer.toString(game.getTurn()));
  for (  PlayerView player : game.getPlayers()) {
    if (players.containsKey(player.getPlayerId())) {
      players.get(player.getPlayerId()).update(player);
    }
 else {
      logger.warn("Couldn't find player.");
      logger.warn("   uuid:" + player.getPlayerId());
      logger.warn("   players:");
      for (      PlayAreaPanel p : players.values()) {
        logger.warn("" + p);
      }
    }
  }
  GameManager.getInstance().setStackSize(game.getStack().size());
  displayStack(game,bigCard,feedbackPanel,gameId);
  for (  ExileView exile : game.getExile()) {
    if (!exiles.containsKey(exile.getId())) {
      ExileZoneDialog newExile=new ExileZoneDialog();
      exiles.put(exile.getId(),newExile);
      MageFrame.getDesktop().add(newExile,JLayeredPane.POPUP_LAYER);
      newExile.show();
    }
    exiles.get(exile.getId()).loadCards(exile,bigCard,gameId);
  }
  showRevealed(game);
  showLookedAt(game);
  if (game.getCombat().size() > 0) {
    CombatManager.getInstance().showCombat(game.getCombat(),gameId);
  }
 else {
    CombatManager.getInstance().hideCombat(gameId);
  }
  updatePhases(game.getStep());
  this.revalidate();
  this.repaint();
}
