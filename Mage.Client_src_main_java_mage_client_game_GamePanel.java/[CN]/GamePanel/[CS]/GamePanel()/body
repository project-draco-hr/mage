{
  initComponents=true;
  initComponents();
  pickNumber=new PickNumberDialog();
  MageFrame.getDesktop().add(pickNumber,JLayeredPane.MODAL_LAYER);
  this.feedbackPanel.setConnectedChatPanel(this.userChatPanel);
  this.stackObjects.setMinOffsetY(STACK_MIN_CARDS_OFFSET_Y);
  this.setLayout(new BorderLayout());
  final JLayeredPane jLayeredBackgroundPane=new JLayeredPane();
  jLayeredBackgroundPane.setSize(1024,768);
  this.add(jLayeredBackgroundPane);
  jLayeredBackgroundPane.add(jSplitPane0,JLayeredPane.DEFAULT_LAYER);
  Map<String,JComponent> myUi=getUIComponents(jLayeredBackgroundPane);
  Plugins.getInstance().updateGamePanel(myUi);
  addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      int width=((JComponent)e.getSource()).getWidth();
      int height=((JComponent)e.getSource()).getHeight();
      jLayeredBackgroundPane.setSize(width,height);
      jSplitPane0.setSize(width,height);
      if (height < storedHeight) {
        pnlBattlefield.setSize(0,200);
      }
      storedHeight=height;
      sizeToScreen();
      if (!initialized) {
        String state=PreferencesDialog.getCachedValue(PreferencesDialog.KEY_BIG_CARD_TOGGLED,null);
        if (state != null && state.equals("down")) {
          jSplitPane0.setDividerLocation(1.0);
        }
        initialized=true;
      }
    }
  }
);
  ComponentAdapter componentAdapterPlayField=new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      if (!initComponents) {
        if (resizeTimer.isRunning()) {
          resizeTimer.restart();
        }
 else {
          resizeTimer.start();
        }
      }
    }
  }
;
  resizeTimer=new Timer(1000,new ActionListener(){
    @Override public void actionPerformed(    ActionEvent evt){
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          resizeTimer.stop();
          setGUISize();
          feedbackPanel.changeGUISize();
        }
      }
);
    }
  }
);
  pnlHelperHandButtonsStackArea.addComponentListener(componentAdapterPlayField);
  initComponents=false;
}
