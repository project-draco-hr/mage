{
  Player you=game.getPlayer(source.getControllerId());
  Permanent target=game.getPermanent(source.getFirstTarget());
  StringBuilder sb=new StringBuilder();
  if (you != null && target != null) {
    for (int i=0; i < 5; i++) {
      if (!you.chooseUse(Outcome.Neutral,"Do you wish to choose another color?",game)) {
        break;
      }
      ChoiceColor choiceColor=new ChoiceColor();
      you.choose(Outcome.Benefit,choiceColor,game);
      if (!you.isInGame()) {
        return false;
      }
      game.informPlayers(target.getName() + ": " + you.getName()+ " has chosen "+ choiceColor.getChoice());
      if (choiceColor.getColor().isBlack()) {
        sb.append("B");
      }
 else       if (choiceColor.getColor().isBlue()) {
        sb.append("U");
      }
 else       if (choiceColor.getColor().isRed()) {
        sb.append("R");
      }
 else       if (choiceColor.getColor().isGreen()) {
        sb.append("G");
      }
 else       if (choiceColor.getColor().isWhite()) {
        sb.append("W");
      }
    }
    String colors=new String(sb);
    ObjectColor chosenColors=new ObjectColor(colors);
    ContinuousEffect effect=new BecomesColorTargetEffect(chosenColors,Duration.EndOfTurn);
    effect.setTargetPointer(new FixedTarget(source.getFirstTarget()));
    game.addEffect(effect,source);
    return true;
  }
  return false;
}
