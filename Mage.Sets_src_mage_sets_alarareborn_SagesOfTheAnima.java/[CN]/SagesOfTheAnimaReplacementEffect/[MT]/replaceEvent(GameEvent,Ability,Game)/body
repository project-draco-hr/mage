{
  FilterCard filter=new FilterCard();
  filter.add(new CardTypePredicate(CardType.CREATURE));
  Player player=game.getPlayer(event.getPlayerId());
  Cards cards=new CardsImpl(Zone.PICK);
  if (player != null) {
    for (int i=0; i < 3; i++) {
      Card card=player.getLibrary().removeFromTop(game);
      if (card != null) {
        cards.add(card);
      }
    }
    player.revealCards("Top three cards of library revealed",cards,game);
    for (    Card revealedCard : cards.getCards(game)) {
      if (revealedCard.getCardType().contains(CardType.CREATURE)) {
        revealedCard.moveToZone(Zone.HAND,source.getSourceId(),game,false);
        cards.remove(revealedCard);
      }
    }
    TargetCard target=new TargetCard(Zone.PICK,new FilterCard());
    while (player.canRespond() && cards.size() > 1) {
      player.choose(Outcome.Neutral,cards,target,game);
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,false);
      }
      target.clearChosen();
    }
    if (cards.size() == 1) {
      Card card=cards.get(cards.iterator().next(),game);
      card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,false);
    }
  }
  return true;
}
