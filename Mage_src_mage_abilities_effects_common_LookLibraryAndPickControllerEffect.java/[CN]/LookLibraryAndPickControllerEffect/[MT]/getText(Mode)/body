{
  if (staticText != null && !staticText.isEmpty()) {
    return staticText;
  }
  StringBuilder sb=new StringBuilder();
  if (numberToPick.calculate(null,null,this) > 0) {
    if (revealPickedCards) {
      sb.append(". You may reveal ");
      sb.append(filter.getMessage()).append(" from among them and put it into your ");
    }
 else {
      if (targetPickedCards.equals(Zone.BATTLEFIELD)) {
        sb.append(". You ");
        if (optional) {
          sb.append("may ");
        }
        sb.append("put ").append(filter.getMessage()).append(" from among them onto the ");
      }
 else {
        sb.append(". Put one of them into your ");
      }
    }
    sb.append(targetPickedCards.toString().toLowerCase());
    if (targetZoneLookedCards == Zone.LIBRARY) {
      sb.append(". Put the rest ");
      if (putOnTop) {
        sb.append("back ");
      }
 else {
        sb.append("on the bottom of your library ");
      }
      sb.append("in any order");
    }
 else     if (targetZoneLookedCards == Zone.GRAVEYARD) {
      sb.append(" and the other into your graveyard");
    }
  }
  return setText(mode,sb.toString());
}
