{
  initPopupMenuTriggerOrder();
  setBackground(new Color(0,0,0,100));
  setLayout(new BoxLayout(this,BoxLayout.PAGE_AXIS));
  setOpaque(false);
  buttonContainer=new JPanel();
  buttonContainer.setPreferredSize(new Dimension(100,30));
  buttonContainer.setMinimumSize(new Dimension(20,20));
  buttonContainer.setMaximumSize(new Dimension(2000,100));
  buttonContainer.setLayout(new GridBagLayout());
  buttonContainer.setOpaque(false);
  JPanel jPanel=new JPanel();
  textArea=new MageTextArea();
  textArea.setText("<Empty>");
  jPanel.setOpaque(false);
  jPanel.setBackground(new Color(0,0,0,80));
  jPanel.add(textArea);
  add(jPanel);
  add(buttonContainer);
  btnSpecial=new JButton("Special");
  btnSpecial.setVisible(false);
  buttonContainer.add(btnSpecial);
  btnLeft=new JButton("OK");
  btnLeft.setVisible(false);
  buttonContainer.add(btnLeft);
  btnRight=new JButton("Cancel");
  btnRight.setVisible(false);
  buttonContainer.add(btnRight);
  btnUndo=new JButton("Undo");
  btnUndo.setVisible(false);
  buttonContainer.add(btnUndo);
  MouseListener checkPopupAdapter=new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent me){
      checkPopupMenu(me);
    }
    @Override public void mouseReleased(    MouseEvent me){
      checkPopupMenu(me);
    }
  }
;
  btnLeft.addMouseListener(checkPopupAdapter);
  btnLeft.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    java.awt.event.ActionEvent evt){
      if (linkLeft != null) {
        clickButton(linkLeft);
      }
    }
  }
);
  btnRight.addMouseListener(checkPopupAdapter);
  btnRight.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    java.awt.event.ActionEvent evt){
      if (linkRight != null) {
        clickButton(linkRight);
      }
    }
  }
);
  btnSpecial.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    java.awt.event.ActionEvent evt){
      if (linkSpecial != null) {
        clickButton(linkSpecial);
      }
    }
  }
);
  btnUndo.addActionListener(new java.awt.event.ActionListener(){
    @Override public void actionPerformed(    java.awt.event.ActionEvent evt){
      if (linkUndo != null) {
{
          Thread worker=new Thread(){
            @Override public void run(){
              SwingUtilities.invokeLater(new Runnable(){
                @Override public void run(){
                  linkUndo.doClick();
                }
              }
);
            }
          }
;
          worker.start();
        }
      }
    }
  }
);
  textArea.addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent me){
      ToolTipManager.sharedInstance().setDismissDelay(100000);
      UIManager.put("info",Color.DARK_GRAY);
    }
    @Override public void mouseExited(    MouseEvent me){
      ToolTipManager.sharedInstance().setDismissDelay(defaultDismissTimeout);
      UIManager.put("info",tooltipBackground);
    }
  }
);
}
