{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=game.getObject(source.getSourceId());
  if (sourceObject != null && controller != null) {
    Choice abilityChoice=new ChoiceImpl();
    abilityChoice.setMessage("Choose an ability to add");
    Set<String> abilities=new HashSet<>();
    abilities.add(FirstStrikeAbility.getInstance().getRule());
    abilities.add(VigilanceAbility.getInstance().getRule());
    abilities.add(TrampleAbility.getInstance().getRule());
    abilityChoice.setChoices(abilities);
    while (!abilityChoice.isChosen()) {
      controller.choose(Outcome.AddAbility,abilityChoice,game);
      if (!controller.canRespond()) {
        return false;
      }
    }
    String chosen=abilityChoice.getChoice();
    Ability ability=null;
    if (FirstStrikeAbility.getInstance().getRule().equals(chosen)) {
      ability=FirstStrikeAbility.getInstance();
    }
 else     if (VigilanceAbility.getInstance().getRule().equals(chosen)) {
      ability=VigilanceAbility.getInstance();
    }
 else     if (TrampleAbility.getInstance().getRule().equals(chosen)) {
      ability=TrampleAbility.getInstance();
    }
    if (ability != null) {
      game.informPlayers(sourceObject.getLogName() + ": " + controller.getLogName()+ " has chosen: "+ chosen);
      ContinuousEffect effect=new GainAbilitySourceEffect(ability,Duration.EndOfTurn);
      game.addEffect(effect,source);
      return true;
    }
  }
  return false;
}
