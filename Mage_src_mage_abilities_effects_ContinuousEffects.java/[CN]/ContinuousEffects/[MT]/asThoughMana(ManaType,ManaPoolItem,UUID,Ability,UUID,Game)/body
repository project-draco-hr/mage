{
  List<AsThoughEffect> asThoughEffectsList=getApplicableAsThoughEffects(AsThoughEffectType.SPEND_ONLY_MANA,game);
  for (  AsThoughEffect effect : asThoughEffectsList) {
    HashSet<Ability> abilities=asThoughEffectsMap.get(AsThoughEffectType.SPEND_ONLY_MANA).getAbility(effect.getId());
    for (    Ability ability : abilities) {
      if ((affectedAbility == null && effect.applies(objectId,ability,controllerId,game)) || effect.applies(objectId,affectedAbility,ability,game)) {
        if (((AsThoughManaEffect)effect).getAsThoughManaType(manaType,mana,controllerId,ability,game) == null) {
          return null;
        }
      }
    }
  }
  asThoughEffectsList=getApplicableAsThoughEffects(AsThoughEffectType.SPEND_OTHER_MANA,game);
  for (  AsThoughEffect effect : asThoughEffectsList) {
    HashSet<Ability> abilities=asThoughEffectsMap.get(AsThoughEffectType.SPEND_OTHER_MANA).getAbility(effect.getId());
    for (    Ability ability : abilities) {
      if ((affectedAbility == null && effect.applies(objectId,ability,controllerId,game)) || effect.applies(objectId,affectedAbility,ability,game)) {
        ManaType usableManaType=((AsThoughManaEffect)effect).getAsThoughManaType(manaType,mana,controllerId,ability,game);
        if (usableManaType != null) {
          return usableManaType;
        }
      }
    }
  }
  return manaType;
}
