{
  List<ReplacementEffect> replaceEffects=new ArrayList<ReplacementEffect>();
  if (planeswalkerRedirectionEffect.applies(event,null,game))   replaceEffects.add(planeswalkerRedirectionEffect);
  for (  Card card : game.getCards()) {
    if (game.getZone(card.getId()) == Zone.HAND || game.getZone(card.getId()) == Zone.GRAVEYARD) {
      for (      Ability ability : card.getAbilities().getStaticAbilities(game.getZone(card.getId()))) {
        for (        Effect effect : ability.getEffects(game,EffectType.REPLACEMENT)) {
          ReplacementEffect rEffect=(ReplacementEffect)effect;
          if (rEffect.applies(event,ability,game)) {
            replaceEffects.add(rEffect);
            abilityMap.put(rEffect.getId(),ability);
          }
        }
        for (        Effect effect : ability.getEffects(game,EffectType.PREVENTION)) {
          ReplacementEffect rEffect=(ReplacementEffect)effect;
          if (rEffect.applies(event,ability,game)) {
            replaceEffects.add(rEffect);
            abilityMap.put(rEffect.getId(),ability);
          }
        }
      }
    }
  }
  for (  Permanent permanent : game.getBattlefield().getAllPermanents()) {
    for (    Ability ability : permanent.getAbilities().getStaticAbilities(Zone.BATTLEFIELD)) {
      for (      Effect effect : ability.getEffects(game,EffectType.REPLACEMENT)) {
        ReplacementEffect rEffect=(ReplacementEffect)effect;
        if (rEffect.applies(event,ability,game)) {
          replaceEffects.add(rEffect);
          abilityMap.put(rEffect.getId(),ability);
        }
      }
      for (      Effect effect : ability.getEffects(game,EffectType.PREVENTION)) {
        ReplacementEffect rEffect=(ReplacementEffect)effect;
        if (rEffect.applies(event,ability,game)) {
          replaceEffects.add(rEffect);
          abilityMap.put(rEffect.getId(),ability);
        }
      }
    }
  }
  for (  Player player : game.getPlayers().values()) {
    for (    Ability ability : player.getAbilities().getStaticAbilities(Zone.BATTLEFIELD)) {
      for (      Effect effect : ability.getEffects(game,EffectType.REPLACEMENT)) {
        ReplacementEffect rEffect=(ReplacementEffect)effect;
        if (rEffect.applies(event,ability,game)) {
          replaceEffects.add(rEffect);
          abilityMap.put(rEffect.getId(),ability);
        }
      }
      for (      Effect effect : ability.getEffects(game,EffectType.PREVENTION)) {
        ReplacementEffect rEffect=(ReplacementEffect)effect;
        if (rEffect.applies(event,ability,game)) {
          replaceEffects.add(rEffect);
          abilityMap.put(rEffect.getId(),ability);
        }
      }
    }
  }
  for (  ReplacementEffect effect : replacementEffects) {
    if (effect.getDuration() != Duration.OneUse || !effect.isUsed()) {
      if (effect.applies(event,abilityMap.get(effect.getId()),game)) {
        replaceEffects.add(effect);
      }
    }
  }
  for (  PreventionEffect effect : preventionEffects) {
    if (effect.getDuration() != Duration.OneUse || !effect.isUsed()) {
      if (effect.applies(event,abilityMap.get(effect.getId()),game)) {
        replaceEffects.add(effect);
      }
    }
  }
  return replaceEffects;
}
