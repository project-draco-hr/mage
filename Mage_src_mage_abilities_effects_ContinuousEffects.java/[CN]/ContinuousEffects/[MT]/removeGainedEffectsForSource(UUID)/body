{
  List<Effect> effects=new ArrayList<Effect>();
  Set<UUID> effectsToRemove=new HashSet<UUID>();
  for (  Map.Entry<UUID,UUID> source : sources.entrySet()) {
    if (sourceId.equals(source.getValue())) {
      for (      ContinuousEffectsList effectsList : allEffectsLists) {
        Iterator it=effectsList.iterator();
        while (it.hasNext()) {
          ContinuousEffect effect=(ContinuousEffect)it.next();
          if (source.getKey().equals(effect.getId())) {
            effectsToRemove.add(effect.getId());
            effectsList.removeEffectAbilityMap(effect.getId());
            it.remove();
          }
        }
      }
    }
  }
  for (  UUID effectId : effectsToRemove) {
    sources.remove(effectId);
  }
  return effects;
}
