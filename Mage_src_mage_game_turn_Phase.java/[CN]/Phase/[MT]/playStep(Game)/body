{
  if (!currentStep.skipStep(game,activePlayerId)) {
    game.getState().increaseStepNum();
    prePriority(game,activePlayerId);
    if (!game.isPaused() && !game.gameOver(null)) {
      currentStep.priority(game,activePlayerId,false);
      if (game.executingRollback()) {
        return;
      }
    }
    if (!game.isPaused() && !game.gameOver(null)) {
      postPriority(game,activePlayerId);
    }
  }
}
