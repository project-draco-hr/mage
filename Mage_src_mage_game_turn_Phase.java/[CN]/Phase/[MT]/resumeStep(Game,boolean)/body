{
  boolean resuming=true;
  if (currentStep == null || currentStep.getStepPart() == null) {
    game.end();
    return;
  }
switch (currentStep.getStepPart()) {
case PRE:
    if (wasPaused) {
      currentStep.resumeBeginStep(game,activePlayerId);
      resuming=false;
    }
 else {
      prePriority(game,activePlayerId);
    }
case PRIORITY:
  if (!game.isPaused() && !game.gameOver(null)) {
    currentStep.priority(game,activePlayerId,resuming);
  }
case POST:
if (!game.isPaused() && !game.gameOver(null)) {
  postPriority(game,activePlayerId);
}
}
}
