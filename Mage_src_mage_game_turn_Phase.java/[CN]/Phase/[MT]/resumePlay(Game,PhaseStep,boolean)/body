{
  if (game.isPaused() || game.gameOver(null)) {
    return false;
  }
  this.activePlayerId=game.getActivePlayerId();
  Iterator<Step> it=steps.iterator();
  Step step;
  do {
    step=it.next();
    currentStep=step;
  }
 while (step.getType() != stepType);
  resumeStep(game,wasPaused);
  while (it.hasNext()) {
    step=it.next();
    if (game.isPaused() || game.gameOver(null)) {
      return false;
    }
    currentStep=step;
    if (!game.getState().getTurnMods().skipStep(activePlayerId,currentStep.getType())) {
      playStep(game);
      if (game.executingRollback()) {
        return true;
      }
    }
  }
  if (game.isPaused() || game.gameOver(null)) {
    return false;
  }
  count++;
  endPhase(game,activePlayerId);
  return true;
}
