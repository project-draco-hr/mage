{
  Ability ability=source.copy();
  List<Ability> options=getPlayableOptions(ability,game);
  if (options.isEmpty()) {
    if (logger.isDebugEnabled())     logger.debug("simulating -- triggered ability:" + ability);
    game.getStack().push(new StackAbility(ability,playerId));
    if (ability.activate(game,false) && ability.isUsesStack()) {
      game.fireEvent(new GameEvent(GameEvent.EventType.TRIGGERED_ABILITY,ability.getId(),ability.getSourceId(),ability.getControllerId()));
    }
    game.applyEffects();
    game.getPlayers().resetPassed();
  }
 else {
    SimulationNode parent=(SimulationNode)game.getCustomData();
    if (parent.getDepth() == maxDepth)     return true;
    logger.debug(indent(parent.getDepth()) + "simulating -- triggered ability - adding children:" + options.size());
    for (    Ability option : options) {
      addAbilityNode(parent,option,game);
    }
  }
  return true;
}
