{
  String collectorId=card.getCollectorId();
  String cardSet=card.getSet();
  if (collectorId == null || cardSet == null) {
    throw new Exception("Wrong parameters for image: collector id: " + collectorId + ",card set: "+ cardSet);
  }
  if (card.isFlippedSide()) {
    return null;
  }
  String setNames=setsAliases.get(cardSet);
  if (setNames != null) {
    Map<String,String> setLinks=sets.get(cardSet);
    if (setLinks == null) {
      setLinks=getSetLinks(cardSet);
      sets.put(cardSet,setLinks);
    }
    String link=setLinks.get(card.getDownloadName().toLowerCase());
    if (link == null) {
      int length=collectorId.length();
      if (Character.isLetter(collectorId.charAt(length - 1))) {
        length-=1;
      }
      int number=Integer.parseInt(collectorId.substring(0,length));
      if (setLinks.size() >= number) {
        link=setLinks.get(Integer.toString(number - 1));
      }
 else {
        link=setLinks.get(Integer.toString(number - 21));
        if (link != null) {
          link=link.replace(Integer.toString(number - 20),(Integer.toString(number - 20) + "a"));
        }
      }
    }
    if (link != null && !link.startsWith("http://")) {
      link="http://gatherer.wizards.com" + link;
    }
    return link;
  }
  return null;
}
