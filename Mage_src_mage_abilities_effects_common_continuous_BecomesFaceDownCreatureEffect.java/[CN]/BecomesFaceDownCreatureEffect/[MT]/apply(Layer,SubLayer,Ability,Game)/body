{
  Permanent permanent;
  if (objectReference != null) {
    permanent=objectReference.getPermanent(game);
  }
 else {
    permanent=game.getPermanent(source.getSourceId());
  }
  if (permanent != null && permanent.isFaceDown(game)) {
    if (!foundPermanent) {
      foundPermanent=true;
switch (faceDownType) {
case MANIFESTED:
case MANUAL:
        permanent.setManifested(true);
      break;
case MORPHED:
case MEGAMORPHED:
    permanent.setMorphed(true);
  break;
}
}
switch (layer) {
case TypeChangingEffects_4:
permanent.setName("");
permanent.getSupertype().clear();
permanent.getCardType().clear();
permanent.getCardType().add(CardType.CREATURE);
permanent.getSubtype().clear();
break;
case ColorChangingEffects_5:
permanent.getColor(game).setColor(new ObjectColor());
break;
case AbilityAddingRemovingEffects_6:
Card card=game.getCard(permanent.getId());
List<Ability> abilitiesToRemove=new ArrayList<>();
for (Ability ability : permanent.getAbilities()) {
if (card != null && !card.getAbilities().contains(ability)) {
continue;
}
if (ability.getWorksFaceDown()) {
ability.setRuleVisible(false);
continue;
}
 else {
if (!ability.getRuleVisible() && !ability.getEffects().isEmpty()) {
if (ability.getEffects().get(0) instanceof BecomesFaceDownCreatureEffect) {
continue;
}
}
}
abilitiesToRemove.add(ability);
}
permanent.getAbilities().removeAll(abilitiesToRemove);
if (turnFaceUpAbility != null) {
permanent.addAbility(turnFaceUpAbility,source.getSourceId(),game);
}
break;
case PTChangingEffects_7:
if (sublayer == SubLayer.SetPT_7b) {
permanent.getPower().setValue(2);
permanent.getToughness().setValue(2);
}
}
}
 else {
if (duration.equals(Duration.Custom) && foundPermanent == true) {
discard();
}
}
return true;
}
