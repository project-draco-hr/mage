{
  Card card;
  Player player=game.getPlayer(source.getControllerId());
  if (player == null) {
    return false;
  }
  ExileZone exile=game.getExile().createZone(source.getSourceId(),player.getName() + " Cascade");
  int sourceCost=game.getCard(source.getSourceId()).getConvertedManaCost();
  do {
    card=player.getLibrary().getFromTop(game);
    if (card == null) {
      break;
    }
    player.moveCardsToExile(card,source,game,true,exile.getId(),exile.getName());
  }
 while (player.isInGame() && card.getCardType().contains(CardType.LAND) || card.getConvertedManaCost() >= sourceCost);
  player.getLibrary().reset();
  if (card != null) {
    if (player.chooseUse(outcome,"Use cascade effect on " + card.getLogName() + "?",source,game)) {
      if (player.cast(card.getSpellAbility(),game,true)) {
        exile.remove(card.getId());
      }
    }
  }
  Cards cardsFromExile=new CardsImpl();
  Cards cardsToLibrary=new CardsImpl();
  cardsFromExile.addAll(exile);
  while (cardsFromExile.size() > 0) {
    card=cardsFromExile.getRandom(game);
    cardsFromExile.remove(card.getId());
    cardsToLibrary.add(card);
  }
  player.putCardsOnBottomOfLibrary(cardsToLibrary,game,source,false);
  return true;
}
