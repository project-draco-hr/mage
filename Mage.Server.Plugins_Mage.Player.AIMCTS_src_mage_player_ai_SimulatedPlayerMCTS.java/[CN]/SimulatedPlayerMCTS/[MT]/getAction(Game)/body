{
  List<Ability> playables=getPlayableAbilities(game);
  Ability ability;
  while (true) {
    if (playables.size() == 1) {
      ability=playables.get(0);
    }
 else {
      ability=playables.get(RandomUtil.nextInt(playables.size()));
    }
    List<Ability> options=getPlayableOptions(ability,game);
    if (!options.isEmpty()) {
      if (options.size() == 1) {
        ability=options.get(0);
      }
 else {
        ability=options.get(RandomUtil.nextInt(options.size()));
      }
    }
    if (ability.getManaCosts().getVariableCosts().size() > 0) {
      int amount=getAvailableManaProducers(game).size() - ability.getManaCosts().convertedManaCost();
      if (amount > 0) {
        ability=ability.copy();
        ability.getManaCostsToPay().add(new GenericManaCost(RandomUtil.nextInt(amount)));
      }
    }
    break;
  }
  return ability;
}
