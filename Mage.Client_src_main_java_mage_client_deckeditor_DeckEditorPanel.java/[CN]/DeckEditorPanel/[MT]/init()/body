{
  this.cardSelector.setVisible(true);
  this.jPanel1.setVisible(true);
  for (  ICardGrid component : this.cardSelector.getCardGridComponents()) {
    component.clearCardEventListeners();
    component.addCardEventListener(new Listener<Event>(){
      @Override public void event(      Event event){
switch (event.getEventName()) {
case "double-click":
          moveSelectorCardToDeck(event);
        break;
case "shift-double-click":
      if (mode == DeckEditorMode.Constructed) {
        moveSelectorCardToSideboard(event);
      }
 else {
        moveSelectorCardToDeck(event);
      }
    break;
case "remove-main":
  DeckEditorPanel.this.deckArea.getDeckList().handleDoubleClick();
break;
case "remove-sideboard":
DeckEditorPanel.this.deckArea.getSideboardList().handleDoubleClick();
break;
}
refreshDeck();
}
}
);
}
this.deckArea.clearDeckEventListeners();
this.deckArea.addDeckEventListener(new Listener<Event>(){
@Override public void event(Event event){
if (mode.equals(DeckEditorMode.Constructed)) {
switch (event.getEventName()) {
case "double-click":
{
SimpleCardView cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getCards()) {
if (card.getId().equals(cardView.getId())) {
deck.getCards().remove(card);
break;
}
}
hidePopup();
refreshDeck();
break;
}
case "shift-double-click":
{
SimpleCardView cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getCards()) {
if (card.getId().equals(cardView.getId())) {
deck.getCards().remove(card);
deck.getSideboard().add(card);
break;
}
}
hidePopup();
refreshDeck();
break;
}
}
}
 else {
switch (event.getEventName()) {
case "double-click":
case "shift-double-click":
{
SimpleCardView cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getCards()) {
if (card.getId().equals(cardView.getId())) {
deck.getCards().remove(card);
deck.getSideboard().add(card);
cardSelector.loadSideboard(new ArrayList<>(deck.getSideboard()),getBigCard());
break;
}
}
hidePopup();
refreshDeck();
break;
}
}
}
}
}
);
this.deckArea.addSideboardEventListener(new Listener<Event>(){
@Override public void event(Event event){
if (mode.equals(DeckEditorMode.Constructed)) {
switch (event.getEventName()) {
case "double-click":
SimpleCardView cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getSideboard()) {
if (card.getId().equals(cardView.getId())) {
deck.getSideboard().remove(card);
break;
}
}
hidePopup();
refreshDeck();
break;
case "shift-double-click":
cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getSideboard()) {
if (card.getId().equals(cardView.getId())) {
deck.getSideboard().remove(card);
deck.getCards().add(card);
break;
}
}
hidePopup();
refreshDeck();
break;
}
}
 else {
switch (event.getEventName()) {
case "double-click":
case "shift-double-click":
SimpleCardView cardView=(SimpleCardView)event.getSource();
for (Card card : deck.getSideboard()) {
if (card.getId().equals(cardView.getId())) {
deck.getSideboard().remove(card);
deck.getCards().add(card);
break;
}
}
hidePopup();
refreshDeck();
break;
}
}
}
}
);
refreshDeck();
this.setVisible(true);
this.repaint();
}
