{
  DeckCardLists deckList=createDeck();
  for (int i=0; i < EXECUTION_COUNT; i++) {
    Connection connection=createConnection(TEST_USER_NAME + i);
    SimpleMageClient mageClient=new SimpleMageClient();
    Session session=new SessionImpl(mageClient);
    session.connect(connection);
    UUID roomId=session.getMainRoomId();
    GameTypeView gameTypeView=session.getGameTypes().get(0);
    log.info("Game type view: " + gameTypeView.getName());
    MatchOptions options=createGameOptions(gameTypeView,session);
    TableView table=session.createTable(roomId,options);
    if (!session.joinTable(roomId,table.getTableId(),TEST_USER_NAME + i,"Human",1,deckList)) {
      log.error("Error while joining table");
      Assert.assertTrue("Error while joining table",false);
      return;
    }
    Connection connection2=createConnection(TEST_USER_NAME_2 + i);
    SimpleMageClient mageClient2=new SimpleMageClient();
    Session session2=new SessionImpl(mageClient2);
    session2.connect(connection2);
    UUID roomId2=session2.getMainRoomId();
    if (!session2.joinTable(roomId2,table.getTableId(),TEST_USER_NAME_2 + i,"Human",1,deckList)) {
      log.error("Error while joining table");
      Assert.assertTrue("Error while joining table",false);
      return;
    }
    session.startMatch(roomId,table.getTableId());
    Thread.sleep(100);
  }
}
