{
  Player controller=game.getPlayer(source.getControllerId());
  MageObject sourceObject=game.getObject(source.getSourceId());
  if (sourceObject != null && controller != null) {
    Card card=controller.getLibrary().getFromTop(game);
    Cards cards=new CardsImpl();
    if (card != null) {
      cards.add(card);
      controller.revealCards(sourceObject.getName(),cards,game);
      if (filterPutInGraveyard.match(card,source.getSourceId(),source.getControllerId(),game)) {
        controller.moveCards(card,Zone.LIBRARY,Zone.GRAVEYARD,source,game);
        return true;
      }
      if (controller.putOntoBattlefieldWithInfo(card,game,Zone.LIBRARY,source.getSourceId())) {
        ContinuousEffect effect=new GainAbilityTargetEffect(HasteAbility.getInstance(),Duration.EndOfTurn);
        effect.setTargetPointer(new FixedTarget(card.getId()));
        game.addEffect(effect,source);
        SacrificeTargetEffect sacrificeEffect=new SacrificeTargetEffect();
        sacrificeEffect.setTargetPointer(new FixedTarget(card.getId()));
        DelayedTriggeredAbility delayedAbility=new AtTheBeginOfNextEndStepDelayedTriggeredAbility(sacrificeEffect);
        delayedAbility.setSourceId(source.getSourceId());
        delayedAbility.setControllerId(source.getControllerId());
        delayedAbility.setSourceObject(source.getSourceObject(game),game);
        game.addDelayedTriggeredAbility(delayedAbility);
        return true;
      }
    }
  }
  return false;
}
