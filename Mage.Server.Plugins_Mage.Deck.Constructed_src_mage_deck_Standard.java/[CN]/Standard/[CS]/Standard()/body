{
  super("Constructed - Standard");
  GregorianCalendar current=new GregorianCalendar();
  List<ExpansionSet> sets=new ArrayList(Sets.getInstance().values());
  Collections.sort(sets,new Comparator<ExpansionSet>(){
    @Override public int compare(    final ExpansionSet lhs,    ExpansionSet rhs){
      return lhs.getReleaseDate().after(rhs.getReleaseDate()) ? -1 : 1;
    }
  }
);
  int blocksAdded=0;
  for (Iterator<ExpansionSet> iter=sets.iterator(); iter.hasNext() && blocksAdded < 3; ) {
    ExpansionSet set=iter.next();
    if (set.getSetType() == SetType.CORE || set.getSetType() == SetType.EXPANSION) {
      setCodes.add(set.getCode());
      if (set.getReleaseDate().before(current.getTime()) && set.getParentSet() == null && set.getSetType() == SetType.EXPANSION) {
        blocksAdded++;
      }
    }
  }
}
