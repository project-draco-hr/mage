{
  Player player=game.getPlayer(getTargetPointer().getFirst(game,source));
  FilterControlledPermanent filter=new FilterControlledPermanent("creature");
  filter.add(new CardTypePredicate(CardType.CREATURE));
  filter.add(new ControllerIdPredicate(player.getId()));
  TargetControlledPermanent target=new TargetControlledPermanent(1,1,filter,false);
  if (target.canChoose(player.getId(),game)) {
    player.choose(Outcome.Sacrifice,target,source.getSourceId(),game);
    Permanent permanent=game.getPermanent(target.getFirstTarget());
    if (permanent != null) {
      permanent.sacrifice(source.getSourceId(),game);
      if (filterGoblin.match(permanent,game)) {
        for (int i=0; i < 2; i++) {
          Token token=new WarrenWeirdingBlackGoblinRogueToken();
          Effect effect=new CreateTokenTargetEffect(token);
          effect.setTargetPointer(new FixedTarget(player.getId()));
          if (effect.apply(game,source)) {
            Permanent tokenPermanent=game.getPermanent(token.getLastAddedToken());
            if (tokenPermanent != null) {
              ContinuousEffect hasteEffect=new GainAbilityTargetEffect(HasteAbility.getInstance(),Duration.EndOfTurn);
              hasteEffect.setTargetPointer(new FixedTarget(tokenPermanent.getId()));
              game.addEffect(hasteEffect,source);
            }
          }
        }
      }
    }
    return true;
  }
  return false;
}
