{
  Card card=(Card)game.getObject(source.getSourceId());
  if (card != null) {
    Player controller=game.getPlayer(source.getControllerId());
    if (controller != null) {
      SpellAbility spellAbility;
switch (((FlashbackAbility)source).getSpellAbilityType()) {
case SPLIT_LEFT:
        spellAbility=((SplitCard)card).getLeftHalfCard().getSpellAbility().copy();
      break;
case SPLIT_RIGHT:
    spellAbility=((SplitCard)card).getRightHalfCard().getSpellAbility().copy();
  break;
default :
spellAbility=card.getSpellAbility().copy();
}
spellAbility.clear();
spellAbility.getManaCostsToPay().clear();
spellAbility.getManaCostsToPay().addAll(source.getManaCosts());
spellAbility.getManaCosts().clear();
spellAbility.getManaCosts().addAll(source.getManaCosts());
for (Cost cost : source.getCosts()) {
if (cost instanceof Costs) {
Costs listOfcosts=(Costs)cost;
for (Iterator itListOfcosts=listOfcosts.iterator(); itListOfcosts.hasNext(); ) {
  Object singleCost=itListOfcosts.next();
  if (singleCost instanceof ManaCost) {
    ((ManaCost)singleCost).clearPaid();
    spellAbility.getManaCosts().add((ManaCost)singleCost);
    spellAbility.getManaCostsToPay().add((ManaCost)singleCost);
  }
 else {
    spellAbility.getCosts().add((Cost)singleCost);
  }
}
}
if (!(cost instanceof VariableCost) && !(cost instanceof Costs)) {
if (cost instanceof ManaCost) {
  spellAbility.getManaCosts().add((ManaCost)cost);
  spellAbility.getManaCostsToPay().add((ManaCost)cost);
}
 else {
  spellAbility.getCosts().add(cost);
}
}
}
if (!game.isSimulation()) {
game.informPlayers(controller.getLogName() + " flashbacks " + card.getLogName());
}
if (controller.cast(spellAbility,game,false)) {
ContinuousEffect effect=new FlashbackReplacementEffect();
effect.setTargetPointer(new FixedTarget(source.getSourceId(),game.getState().getZoneChangeCounter(source.getSourceId())));
game.addEffect(effect,source);
return true;
}
return false;
}
}
return false;
}
