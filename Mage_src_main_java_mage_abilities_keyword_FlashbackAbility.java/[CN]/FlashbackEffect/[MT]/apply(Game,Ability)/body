{
  Card card=(Card)game.getObject(source.getSourceId());
  if (card != null) {
    Player controller=game.getPlayer(source.getControllerId());
    if (controller != null) {
      SpellAbility spellAbility;
switch (((FlashbackAbility)source).getSpellAbilityType()) {
case SPLIT_LEFT:
        spellAbility=((SplitCard)card).getLeftHalfCard().getSpellAbility().copy();
      break;
case SPLIT_RIGHT:
    spellAbility=((SplitCard)card).getRightHalfCard().getSpellAbility().copy();
  break;
default :
spellAbility=card.getSpellAbility().copy();
}
spellAbility.clear();
spellAbility.getManaCostsToPay().clear();
spellAbility.getManaCostsToPay().addAll(source.getManaCostsToPay());
spellAbility.getCosts().clear();
for (Cost cost : source.getCosts()) {
if (!(cost instanceof VariableCost)) {
spellAbility.getCosts().add(cost);
}
}
if (!game.isSimulation()) {
game.informPlayers(controller.getLogName() + " flashbacks " + card.getLogName());
}
spellAbility.setCostModificationActive(false);
if (controller.cast(spellAbility,game,false)) {
ContinuousEffect effect=new FlashbackReplacementEffect();
effect.setTargetPointer(new FixedTarget(source.getSourceId(),game.getState().getZoneChangeCounter(source.getSourceId())));
game.addEffect(effect,source);
return true;
}
return false;
}
}
return false;
}
