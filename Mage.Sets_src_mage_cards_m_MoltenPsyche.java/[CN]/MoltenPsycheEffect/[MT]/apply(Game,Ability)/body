{
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    Map<UUID,Integer> cardsToDraw=new LinkedHashMap<>();
    for (    UUID playerId : game.getState().getPlayersInRange(controller.getId(),game)) {
      Player player=game.getPlayer(playerId);
      if (player != null) {
        int cardsInHand=player.getHand().size();
        if (cardsInHand > 0) {
          cardsToDraw.put(playerId,cardsInHand);
        }
        player.moveCards(player.getHand(),Zone.LIBRARY,source,game);
        player.shuffleLibrary(source,game);
      }
    }
    game.applyEffects();
    for (    UUID playerId : cardsToDraw.keySet()) {
      Player player=game.getPlayer(playerId);
      if (player != null) {
        player.drawCards(cardsToDraw.get(playerId),game);
        if (MetalcraftCondition.getInstance().apply(game,source) && !playerId.equals(source.getControllerId())) {
          MoltenPsycheWatcher watcher=(MoltenPsycheWatcher)game.getState().getWatchers().get("CardsDrawn");
          player.damage(watcher.getDraws(playerId),source.getSourceId(),game,false,true);
        }
      }
    }
    if (MetalcraftCondition.getInstance().apply(game,source)) {
      MoltenPsycheWatcher watcher=(MoltenPsycheWatcher)game.getState().getWatchers().get("CardsDrawn");
      for (      UUID playerId : game.getState().getPlayersInRange(controller.getId(),game)) {
        if (game.isOpponent(controller,playerId)) {
          Player player=game.getPlayer(playerId);
          if (player != null) {
            player.damage(watcher.getDraws(playerId),source.getSourceId(),game,false,true);
          }
        }
      }
    }
    return true;
  }
  return false;
}
