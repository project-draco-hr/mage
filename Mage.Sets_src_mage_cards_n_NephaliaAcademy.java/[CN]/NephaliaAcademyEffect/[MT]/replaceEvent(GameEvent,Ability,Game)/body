{
  if (event.getType().equals(GameEvent.EventType.DISCARD_CARD)) {
    Card card=game.getCard(event.getTargetId());
    if (card != null) {
      boolean isAnOpponentEffect=false;
      MageObject object=game.getObject(event.getSourceId());
      if (object instanceof PermanentCard) {
        isAnOpponentEffect=game.getOpponents(source.getControllerId()).contains(((PermanentCard)object).getControllerId());
      }
 else       if (object instanceof Spell) {
        isAnOpponentEffect=game.getOpponents(source.getControllerId()).contains(((Spell)object).getControllerId());
      }
 else       if (object instanceof Card) {
        isAnOpponentEffect=game.getOpponents(source.getControllerId()).contains(((Card)object).getOwnerId());
      }
      if (isAnOpponentEffect) {
        cardId=card.getId();
        zoneChangeCounter=game.getState().getZoneChangeCounter(cardId);
      }
    }
    return false;
  }
  if (event.getType().equals(GameEvent.EventType.ZONE_CHANGE)) {
    Player controller=game.getPlayer(source.getControllerId());
    Card card=game.getCard(event.getTargetId());
    if (controller != null && card != null) {
      cardId=null;
      zoneChangeCounter=0;
      if (controller.chooseUse(outcome,"Put " + card.getIdName() + " on top of your library instead?",source,game)) {
        Cards cardsToLibrary=new CardsImpl(card);
        controller.revealCards(card.getName(),cardsToLibrary,game);
        controller.putCardsOnTopOfLibrary(cardsToLibrary,game,source,false);
        return true;
      }
    }
  }
  return false;
}
