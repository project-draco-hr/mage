{
  Choice typeChoice=new ChoiceImpl(true);
  typeChoice.setMessage("Choose creature type to return cards from your graveyard");
  typeChoice.setChoices(CardRepository.instance.getCreatureTypes());
  Player controller=game.getPlayer(source.getControllerId());
  if (controller != null) {
    for (    UUID playerId : game.getState().getPlayersInRange(controller.getId(),game)) {
      Player player=game.getPlayer(playerId);
      if (player != null) {
        typeChoice.clearChoice();
        if (player.choose(outcome,typeChoice,game)) {
          game.informPlayers(player.getLogName() + " has chosen: " + typeChoice.getChoice());
          FilterCard filter=new FilterCreatureCard("creature cards with creature type " + typeChoice.getChoice() + " from your graveyard");
          filter.add(new SubtypePredicate(typeChoice.getChoice()));
          Target target=new TargetCardInYourGraveyard(0,Integer.MAX_VALUE,filter);
          player.chooseTarget(outcome,target,source,game);
          player.moveCards(new CardsImpl(target.getTargets()),null,Zone.HAND,source,game);
        }
      }
    }
    return true;
  }
  return false;
}
