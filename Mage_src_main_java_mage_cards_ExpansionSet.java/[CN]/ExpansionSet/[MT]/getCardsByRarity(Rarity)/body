{
  List<CardInfo> savedCardsInfos=savedCards.get(rarity);
  if (savedCardsInfos == null) {
    CardCriteria criteria=new CardCriteria();
    if (rarity.equals(Rarity.LAND)) {
      criteria.setCodes(!hasBasicLands && parentSet != null ? parentSet.code : this.code);
    }
 else {
      criteria.setCodes(this.code);
    }
    criteria.rarities(rarity);
    if (numBoosterDoubleFaced > -1) {
      criteria.doubleFaced(false);
    }
    savedCardsInfos=CardRepository.instance.findCards(criteria);
    if (maxCardNumberInBooster != Integer.MAX_VALUE) {
      Iterator<CardInfo> iterator=savedCardsInfos.iterator();
      while (iterator.hasNext()) {
        CardInfo next=iterator.next();
        if (Integer.valueOf(next.getCardNumber()) > maxCardNumberInBooster) {
          iterator.remove();
        }
      }
    }
    savedCards.put(rarity,savedCardsInfos);
  }
  return new ArrayList<>(savedCardsInfos);
}
