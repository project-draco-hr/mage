{
  List<Card> booster=new ArrayList<>();
  if (!hasBoosters) {
    return booster;
  }
  if (numBoosterLands > 0) {
    List<CardInfo> specialLands=getSpecialLand();
    List<CardInfo> basicLands=getCardsByRarity(Rarity.LAND);
    for (int i=0; i < numBoosterLands; i++) {
      if (ratioBoosterSpecialLand > 0 && RandomUtil.nextInt(ratioBoosterSpecialLand) == 0 && specialLands != null) {
        addToBooster(booster,specialLands);
      }
 else {
        addToBooster(booster,basicLands);
      }
    }
  }
  int numSpecialCommons=getNumberOfSpecialCommons();
  int numCommonsToGenerate=numBoosterCommon - numSpecialCommons;
  List<CardInfo> commons=getCardsByRarity(Rarity.COMMON);
  for (int i=0; i < numCommonsToGenerate; i++) {
    addToBooster(booster,commons);
  }
  if (numSpecialCommons > 0) {
    addSpecialCommon(booster,numSpecialCommons);
  }
  List<CardInfo> uncommons=getCardsByRarity(Rarity.UNCOMMON);
  for (int i=0; i < numBoosterUncommon; i++) {
    addToBooster(booster,uncommons);
  }
  List<CardInfo> rares=getCardsByRarity(Rarity.RARE);
  List<CardInfo> mythics=getCardsByRarity(Rarity.MYTHIC);
  for (int i=0; i < numBoosterRare; i++) {
    if (ratioBoosterMythic > 0 && RandomUtil.nextInt(ratioBoosterMythic) == 0) {
      addToBooster(booster,mythics);
    }
 else {
      addToBooster(booster,rares);
    }
  }
  if (numBoosterDoubleFaced > 0) {
    addDoubleFace(booster);
  }
  if (numBoosterSpecial > 0) {
    addSpecial(booster);
  }
  return booster;
}
