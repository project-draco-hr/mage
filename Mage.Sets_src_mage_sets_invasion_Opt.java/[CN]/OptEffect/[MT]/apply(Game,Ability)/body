{
  Player player=game.getPlayer(source.getControllerId());
  if (player != null) {
    Cards cards=new CardsImpl(Zone.PICK);
    int count=Math.min(1,player.getLibrary().size());
    if (count == 0) {
      return false;
    }
    for (int i=0; i < count; i++) {
      Card card=player.getLibrary().removeFromTop(game);
      cards.add(card);
      game.setZone(card.getId(),Zone.PICK);
    }
    TargetCard target1=new TargetCard(Zone.PICK,filter1);
    while (cards.size() > 0 && player.isInGame() && player.choose(Outcome.Detriment,cards,target1,game)) {
      Card card=cards.get(target1.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.moveToZone(Zone.LIBRARY,source.getSourceId(),game,false);
      }
      target1.clearChosen();
    }
    int onBottom=1 - cards.size();
    if (cards.size() == 1) {
      Card card=cards.get(cards.iterator().next(),game);
      card.moveToZone(Zone.LIBRARY,source.getId(),game,true);
    }
    game.informPlayers(new StringBuilder(player.getName()).append(" puts ").append(onBottom).append(onBottom == 1 ? " card" : " cards").append(" on the bottom of his or her library").append(1).append(")").toString());
    return true;
  }
  return false;
}
