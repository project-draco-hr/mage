{
  this.isAdmin=false;
  if (userName.equals("Admin")) {
    return "User name Admin already in use";
  }
  if (userName.length() > ConfigSettings.getInstance().getMaxUserNameLength()) {
    return new StringBuilder("User name may not be longer than ").append(ConfigSettings.getInstance().getMaxUserNameLength()).append(" characters").toString();
  }
  if (userName.length() < ConfigSettings.getInstance().getMinUserNameLength()) {
    return new StringBuilder("User name may not be shorter than ").append(ConfigSettings.getInstance().getMinUserNameLength()).append(" characters").toString();
  }
  Pattern p=Pattern.compile(ConfigSettings.getInstance().getUserNamePattern(),Pattern.CASE_INSENSITIVE);
  Matcher m=p.matcher(userName);
  if (m.find()) {
    return new StringBuilder("User name '").append(userName).append("' includes not allowed characters: use a-z, A-Z and 0-9").toString();
  }
  User user=UserManager.getInstance().createUser(userName,host);
  if (user == null) {
    user=UserManager.getInstance().findUser(userName);
    if (user.getHost().equals(host)) {
      if (user.getSessionId().isEmpty()) {
        logger.info("Reconnecting session for " + userName);
      }
 else {
        logger.info("Disconnecting another user instance: " + userName);
        UserManager.getInstance().disconnect(user.getId(),DisconnectReason.ConnectingOtherInstance);
      }
    }
 else {
      return new StringBuilder("User name ").append(userName).append(" already in use (or your IP address changed)").toString();
    }
  }
  if (!UserManager.getInstance().connectToSession(sessionId,user.getId())) {
    return new StringBuilder("Error connecting ").append(userName).toString();
  }
  this.userId=user.getId();
  return null;
}
