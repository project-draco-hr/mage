{
  this.isAdmin=false;
  if (userName.equals("Admin")) {
    return "User name Admin already in use";
  }
  if (userName.length() > ConfigSettings.getInstance().getMaxUserNameLength()) {
    return "User name may not be longer than " + ConfigSettings.getInstance().getMaxUserNameLength() + " characters";
  }
  if (userName.length() < ConfigSettings.getInstance().getMinUserNameLength()) {
    return "User name may not be shorter than " + ConfigSettings.getInstance().getMinUserNameLength() + " characters";
  }
  Pattern p=Pattern.compile(ConfigSettings.getInstance().getUserNamePattern(),Pattern.CASE_INSENSITIVE);
  Matcher m=p.matcher(userName);
  if (m.find()) {
    return "User name '" + userName + "' includes not allowed characters: use a-z, A-Z and 0-9";
  }
  User user=UserManager.getInstance().createUser(userName,host);
  boolean reconnect=false;
  if (user == null) {
    user=UserManager.getInstance().findUser(userName);
    if (user.getHost().equals(host)) {
      user.updateLastActivity(null);
      this.userId=user.getId();
      if (user.getSessionId().isEmpty()) {
        logger.info("Reconnecting session for " + userName);
        reconnect=true;
      }
 else {
        logger.info("Disconnecting another user instance: " + userName);
        SessionManager.getInstance().disconnect(user.getSessionId(),DisconnectReason.ConnectingOtherInstance);
      }
    }
 else {
      return "User name " + userName + " already in use (or your IP address changed)";
    }
  }
  if (!UserManager.getInstance().connectToSession(sessionId,user.getId())) {
    return "Error connecting " + userName;
  }
  this.userId=user.getId();
  if (reconnect) {
    UUID chatId=GamesRoomManager.getInstance().getRoom(GamesRoomManager.getInstance().getMainRoomId()).getChatId();
    if (chatId != null) {
      ChatManager.getInstance().joinChat(chatId,userId);
    }
    ChatManager.getInstance().sendReconnectMessage(userId);
  }
  return null;
}
