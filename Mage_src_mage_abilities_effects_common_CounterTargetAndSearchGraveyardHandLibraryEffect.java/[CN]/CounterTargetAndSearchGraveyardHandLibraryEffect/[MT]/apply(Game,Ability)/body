{
  boolean result=false;
  String sourceName=null;
  if (source instanceof SpellAbility) {
    Card sourceCard=game.getCard(source.getSourceId());
    if (sourceCard != null) {
      sourceName=sourceCard.getName();
    }
  }
 else {
    Permanent sourcePermanent=game.getPermanent(source.getSourceId());
    if (sourcePermanent != null) {
      sourceName=sourcePermanent.getName();
    }
  }
  Card chosenCard=null;
  Player you=game.getPlayer(source.getControllerId());
  Player searchPlayer=null;
  if (source.getTargets().get(0) instanceof TargetSpell) {
    UUID objectId=source.getFirstTarget();
    StackObject stackObject=game.getStack().getStackObject(objectId);
    if (stackObject != null) {
      MageObject targetObject=game.getObject(stackObject.getSourceId());
      if (targetObject instanceof Card) {
        chosenCard=(Card)targetObject;
      }
      searchPlayer=game.getPlayer(stackObject.getControllerId());
      result=game.getStack().counter(objectId,source.getSourceId(),game);
    }
  }
  if (searchPlayer != null && you != null && chosenCard != null) {
    game.informPlayers("Searched for cards with the name: " + chosenCard.getName());
    Cards cardsInLibrary=new CardsImpl(Constants.Zone.LIBRARY);
    cardsInLibrary.addAll(searchPlayer.getLibrary().getCards(game));
    you.lookAtCards(sourceName + " search of Library",cardsInLibrary,game);
    Cards cardsInGraveyard=new CardsImpl(Constants.Zone.GRAVEYARD);
    cardsInGraveyard.addAll(searchPlayer.getGraveyard());
    Cards cardsInHand=new CardsImpl(Constants.Zone.HAND);
    cardsInHand.addAll(searchPlayer.getHand());
    you.lookAtCards(sourceName + " search of Hand",cardsInHand,game);
    for (    Card checkCard : cardsInLibrary.getCards(game)) {
      if (checkCard.getName().equals(chosenCard.getName())) {
        checkCard.moveToExile(id,"Library",id,game);
      }
    }
    for (    Card checkCard : cardsInGraveyard.getCards(game)) {
      if (checkCard.getName().equals(chosenCard.getName())) {
        checkCard.moveToExile(id,"Graveyard",id,game);
      }
    }
    for (    Card checkCard : cardsInHand.getCards(game)) {
      if (checkCard.getName().equals(chosenCard.getName())) {
        checkCard.moveToExile(id,"Hand",id,game);
      }
    }
    searchPlayer.shuffleLibrary(game);
  }
  return result;
}
