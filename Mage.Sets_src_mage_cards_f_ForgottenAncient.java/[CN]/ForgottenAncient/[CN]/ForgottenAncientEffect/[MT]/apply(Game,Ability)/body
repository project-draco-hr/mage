{
  Player controller=game.getPlayer(source.getControllerId());
  Permanent sourcePermanent=game.getPermanent(source.getSourceId());
  if (controller == null || sourcePermanent == null) {
    return false;
  }
  int numCounters=sourcePermanent.getCounters(game).getCount(CounterType.P1P1);
  ArrayList<CounterMovement> counterMovements=new ArrayList<>();
  do {
    Target target=new TargetCreaturePermanent(1,1,filter,true);
    if (numCounters == 0 || !target.choose(Outcome.Benefit,source.getControllerId(),source.getSourceId(),game)) {
      continue;
    }
    int amountToMove=controller.getAmount(0,numCounters,"How many counters do you want to move? " + "(" + numCounters + ")"+ " counters remaining.",game);
    if (amountToMove > 0) {
      boolean previouslyChosen=false;
      for (      CounterMovement cm : counterMovements) {
        if (cm.target.equals(target.getFirstTarget())) {
          cm.counters+=amountToMove;
          previouslyChosen=true;
        }
      }
      if (!previouslyChosen) {
        CounterMovement cm=new CounterMovement();
        cm.target=target.getFirstTarget();
        cm.counters=amountToMove;
        counterMovements.add(cm);
      }
      numCounters-=amountToMove;
    }
  }
 while (numCounters > 0 && controller.chooseUse(Outcome.Benefit,"Move additonal counters?",source,game));
  for (  CounterMovement cm : counterMovements) {
    sourcePermanent.removeCounters(CounterType.P1P1.createInstance(cm.counters),game);
    game.getPermanent(cm.target).addCounters(CounterType.P1P1.createInstance(cm.counters),game);
  }
  return true;
}
