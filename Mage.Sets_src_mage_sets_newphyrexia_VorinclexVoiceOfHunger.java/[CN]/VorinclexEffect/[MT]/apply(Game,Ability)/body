{
  Permanent land=game.getPermanent(this.targetPointer.getFirst(source));
  Abilities<ManaAbility> mana=land.getAbilities().getManaAbilities(Zone.BATTLEFIELD);
  Mana types=new Mana();
  for (  ManaAbility ability : mana) {
    types.add(ability.getNetMana(game));
  }
  Choice choice=new ChoiceImpl(true);
  choice.setMessage("Pick a mana color");
  if (types.getBlack() > 0)   choice.getChoices().add("Black");
  if (types.getRed() > 0)   choice.getChoices().add("Red");
  if (types.getBlue() > 0)   choice.getChoices().add("Blue");
  if (types.getGreen() > 0)   choice.getChoices().add("Green");
  if (types.getWhite() > 0)   choice.getChoices().add("White");
  if (types.getColorless() > 0)   choice.getChoices().add("Colorless");
  if (choice.getChoices().size() > 0) {
    Player player=game.getPlayer(source.getControllerId());
    if (choice.getChoices().size() == 1)     choice.setChoice(choice.getChoices().iterator().next());
 else     player.choose(outcome,choice,game);
    if (choice.getChoice().equals("Black")) {
      player.getManaPool().changeMana(Mana.BlackMana,game,source);
      return true;
    }
 else     if (choice.getChoice().equals("Blue")) {
      player.getManaPool().changeMana(Mana.BlueMana,game,source);
      return true;
    }
 else     if (choice.getChoice().equals("Red")) {
      player.getManaPool().changeMana(Mana.RedMana,game,source);
      return true;
    }
 else     if (choice.getChoice().equals("Green")) {
      player.getManaPool().changeMana(Mana.GreenMana,game,source);
      return true;
    }
 else     if (choice.getChoice().equals("White")) {
      player.getManaPool().changeMana(Mana.WhiteMana,game,source);
      return true;
    }
 else     if (choice.getChoice().equals("Colorless")) {
      player.getManaPool().changeMana(Mana.ColorlessMana,game,source);
      return true;
    }
  }
  return true;
}
