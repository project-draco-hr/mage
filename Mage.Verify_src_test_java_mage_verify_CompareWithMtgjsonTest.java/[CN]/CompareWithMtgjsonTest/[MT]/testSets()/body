{
  Collection<ExpansionSet> sets=Sets.getInstance().values();
  Map<String,Map<String,Object>> reference=new ObjectMapper().readValue(CompareWithMtgjsonTest.class.getResourceAsStream("AllCards.json"),new TypeReference<Map<String,Map<String,Object>>>(){
  }
);
  Map<String,String> aliases=new HashMap<>();
  for (  String name : reference.keySet()) {
    String unaccented=stripAccents(name);
    if (!name.equals(unaccented)) {
      aliases.put(name,unaccented);
    }
  }
  for (  Map.Entry<String,String> mapping : aliases.entrySet()) {
    reference.put(mapping.getValue(),reference.get(mapping.getKey()));
  }
  for (  ExpansionSet set : sets) {
    for (    ExpansionSet.SetCardInfo setInfo : set.getSetCardInfo()) {
      Card card=CardImpl.createCard(setInfo.getCardClass(),new CardSetInfo(setInfo.getName(),set.getCode(),setInfo.getCardNumber(),setInfo.getRarity(),setInfo.getGraphicInfo()));
      if (card.isSplitCard()) {
        check(reference,((SplitCard)card).getLeftHalfCard());
        check(reference,((SplitCard)card).getRightHalfCard());
      }
 else {
        check(reference,card);
      }
    }
  }
}
