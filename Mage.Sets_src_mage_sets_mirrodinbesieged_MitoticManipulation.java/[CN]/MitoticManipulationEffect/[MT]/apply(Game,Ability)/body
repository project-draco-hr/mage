{
  List<Permanent> permanents=game.getBattlefield().getActivePermanents(source.getControllerId(),game);
  HashSet<String> permanentNames=new HashSet<String>();
  for (  Permanent permanent : permanents) {
    permanentNames.add(permanent.getName());
  }
  Player player=game.getPlayer(source.getControllerId());
  if (player == null) {
    return false;
  }
  Cards cards=new CardsImpl(Zone.PICK);
  Cards cardsFound=new CardsImpl(Zone.PICK);
  for (int i=0; i < 7; i++) {
    Card card=player.getLibrary().removeFromTop(game);
    if (card != null) {
      cards.add(card);
      game.setZone(card.getId(),Zone.PICK);
      if (permanentNames.contains(card.getName())) {
        cardsFound.add(card);
      }
    }
  }
  player.lookAtCards("Mitotic Manipulation",cards,game);
  if (!cardsFound.isEmpty() && player.chooseUse(Outcome.PutCardInPlay,"Do you wish to put a card on the battlefield?",game)) {
    FilterCard filter=new FilterCard("card to put onto the battlefield");
    filter.getName().add(permanentNames);
    TargetCard target=new TargetCard(Zone.PICK,filter);
    if (player.choose(Outcome.PutCardInPlay,cardsFound,target,game)) {
      Card card=cards.get(target.getFirstTarget(),game);
      if (card != null) {
        cards.remove(card);
        card.putOntoBattlefield(game,Zone.LIBRARY,source.getId(),source.getControllerId());
      }
    }
  }
  TargetCard target=new TargetCard(Zone.PICK,new FilterCard("card to put on the bottom of your library"));
  target.setRequired(true);
  while (cards.size() > 1) {
    player.choose(Outcome.Neutral,cards,target,game);
    Card card=cards.get(target.getFirstTarget(),game);
    if (card != null) {
      cards.remove(card);
      card.moveToZone(Zone.LIBRARY,source.getId(),game,false);
    }
    target.clearChosen();
  }
  if (cards.size() == 1) {
    Card card=cards.get(cards.iterator().next(),game);
    card.moveToZone(Zone.LIBRARY,source.getId(),game,false);
  }
  return true;
}
